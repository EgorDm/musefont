use crate::num_traits::FromPrimitive;
use crate::*;
use crate::score::*;

pub type StyleId = u32;

#[derive(Clone, Copy, Debug, Primitive, PartialEq, Eq, Hash)]
pub enum StyleName {
	NoStyle = 0,

	PageWidth = 1,
	PageHeight = 2,
	PagePrintableWidth = 3,
	PageEvenLeftMargin = 4,
	PageOddLeftMargin = 5,
	PageEvenTopMargin = 6,
	PageEvenBottomMargin = 7,
	PageOddTopMargin = 8,
	PageOddBottomMargin = 9,
	PageTwosided = 10,

	StaffUpperBorder = 11,
	StaffLowerBorder = 12,
	StaffDistance = 13,
	AkkoladeDistance = 14,

	MinSystemDistance = 15,
	MaxSystemDistance = 16,

	LyricsPlacement = 17,
	LyricsPosAbove = 18,
	LyricsPosBelow = 19,
	LyricsMinTopDistance = 20,
	LyricsMinBottomDistance = 21,
	LyricsMinDistance = 22,
	LyricsLineHeight = 23,
	LyricsDashMinLength = 24,
	LyricsDashMaxLength = 25,
	LyricsDashMaxDistance = 26,
	LyricsDashForce = 27,
	LyricsAlignVerseNumber = 28,
	LyricsLineThickness = 29,
	LyricsMelismaAlign = 30,
	LyricsMelismaPad = 31,
	LyricsDashPad = 32,
	LyricsDashLineThickness = 33,
	LyricsDashYposRatio = 34,

	LyricsOddFontFace = 35,
	LyricsOddFontSize = 36,
	LyricsOddFontSpatiumDependent = 37,
	LyricsOddFontStyle = 38,
	LyricsOddColor = 39,
	LyricsOddAlign = 40,
	LyricsOddFrameType = 41,
	LyricsOddFramePadding = 42,
	LyricsOddFrameWidth = 43,
	LyricsOddFrameRound = 44,
	LyricsOddFrameFgColor = 45,
	LyricsOddFrameBgColor = 46,

	LyricsEvenFontFace = 47,
	LyricsEvenFontSize = 48,
	LyricsEvenFontSpatiumDependent = 49,
	LyricsEvenFontStyle = 50,
	LyricsEvenColor = 51,
	LyricsEvenAlign = 52,
	LyricsEvenFrameType = 53,
	LyricsEvenFramePadding = 54,
	LyricsEvenFrameWidth = 55,
	LyricsEvenFrameRound = 56,
	LyricsEvenFrameFgColor = 57,
	LyricsEvenFrameBgColor = 58,

	FiguredBassFontFamily = 59,
	FiguredBassYOffset = 60,
	FiguredBassLineHeight = 61,
	FiguredBassAlignment = 62,
	FiguredBassStyle = 63,
	SystemFrameDistance = 64,
	FrameSystemDistance = 65,
	MinMeasureWidth = 66,

	BarWidth = 67,
	DoubleBarWidth = 68,
	EndBarWidth = 69,
	DoubleBarDistance = 70,
	EndBarDistance = 71,
	RepeatBarlineDotSeparation = 72,
	RepeatBarTips = 73,
	StartBarlineSingle = 74,
	StartBarlineMultiple = 75,

	BracketWidth = 76,
	BracketDistance = 77,
	AkkoladeWidth = 78,
	AkkoladeBarDistance = 79,
	DividerLeft = 80,
	DividerLeftSym = 81,
	DividerLeftX = 82,
	DividerLeftY = 83,
	DividerRight = 84,
	DividerRightSym = 85,
	DividerRightX = 86,
	DividerRightY = 87,

	ClefLeftMargin = 88,
	KeysigLeftMargin = 89,
	AmbitusMargin = 90,
	TimesigLeftMargin = 91,
	TimesigScale = 92,

	MidClefKeyRightMargin = 93,
	ClefKeyRightMargin = 94,
	ClefKeyDistance = 95,
	ClefTimesigDistance = 96,
	KeyTimesigDistance = 97,
	KeyBarlineDistance = 98,
	SystemHeaderDistance = 99,
	SystemHeaderTimeSigDistance = 100,

	ClefBarlineDistance = 101,
	TimesigBarlineDistance = 102,

	StemWidth = 103,
	ShortenStem = 104,
	ShortStemProgression = 105,
	ShortestStem = 106,
	BeginRepeatLeftMargin = 107,
	MinNoteDistance = 108,
	BarNoteDistance = 109,
	BarAccidentalDistance = 110,
	MultiMeasureRestMargin = 111,
	NoteBarDistance = 112,

	MeasureSpacing = 113,
	StaffLineWidth = 114,
	LedgerLineWidth = 115,
	LedgerLineLength = 116,
	AccidentalDistance = 117,
	AccidentalNoteDistance = 118,
	BeamWidth = 119,
	BeamDistance = 120,
	BeamMinLen = 121,
	BeamNoSlope = 122,

	DotMag = 123,
	DotNoteDistance = 124,
	DotRestDistance = 125,
	DotDotDistance = 126,
	PropertyDistanceHead = 127,
	PropertyDistanceStem = 128,
	PropertyDistance = 129,
	ArticulationMag = 130,
	ArticulationPosAbove = 131,
	ArticulationAnchorDefault = 132,
	ArticulationAnchorLuteFingering = 133,
	ArticulationAnchorOther = 134,
	LastSystemFillLimit = 135,

	HairpinPlacement = 136,
	HairpinPosAbove = 137,
	HairpinPosBelow = 138,
	HairpinLinePosAbove = 139,
	HairpinLinePosBelow = 140,
	HairpinHeight = 141,
	HairpinContHeight = 142,
	HairpinLineWidth = 143,
	HairpinFontFace = 144,
	HairpinFontSize = 145,
	HairpinFontSpatiumDependent = 146,
	HairpinFontStyle = 147,
	HairpinColor = 148,
	HairpinTextAlign = 149,
	HairpinFrameType = 150,
	HairpinFramePadding = 151,
	HairpinFrameWidth = 152,
	HairpinFrameRound = 153,
	HairpinFrameFgColor = 154,
	HairpinFrameBgColor = 155,
	HairpinText = 156,
	HairpinCrescText = 157,
	HairpinDecrescText = 158,
	HairpinCrescContText = 159,
	HairpinDecrescContText = 160,
	HairpinLineStyle = 161,
	HairpinLineLineStyle = 162,

	PedalPlacement = 163,
	PedalPosAbove = 164,
	PedalPosBelow = 165,
	PedalLineWidth = 166,
	PedalLineStyle = 167,
	PedalBeginTextOffset = 168,
	PedalHookHeight = 169,
	PedalFontFace = 170,
	PedalFontSize = 171,
	PedalFontSpatiumDependent = 172,
	PedalFontStyle = 173,
	PedalColor = 174,
	PedalTextAlign = 175,
	PedalFrameType = 176,
	PedalFramePadding = 177,
	PedalFrameWidth = 178,
	PedalFrameRound = 179,
	PedalFrameFgColor = 180,
	PedalFrameBgColor = 181,

	TrillPlacement = 182,
	TrillPosAbove = 183,
	TrillPosBelow = 184,

	VibratoPlacement = 185,
	VibratoPosAbove = 186,
	VibratoPosBelow = 187,

	HarmonyFretDist = 188,
	MinHarmonyDistance = 189,
	MaxHarmonyBarDistance = 190,
	HarmonyPlacement = 191,
	RomanNumeralPlacement = 192,
	NashvilleNumberPlacement = 193,

	ChordSymbolAPosAbove = 194,
	ChordSymbolAPosBelow = 195,

	ChordSymbolBPosAbove = 196,
	ChordSymbolBPosBelow = 197,

	RomanNumeralPosAbove = 198,
	RomanNumeralPosBelow = 199,

	NashvilleNumberPosAbove = 200,
	NashvilleNumberPosBelow = 201,

	ChordSymbolAFontFace = 202,
	ChordSymbolAFontSize = 203,
	ChordSymbolAFontSpatiumDependent = 204,
	ChordSymbolAFontStyle = 205,
	ChordSymbolAColor = 206,
	ChordSymbolAAlign = 207,
	ChordSymbolAFrameType = 208,
	ChordSymbolAFramePadding = 209,
	ChordSymbolAFrameWidth = 210,
	ChordSymbolAFrameRound = 211,
	ChordSymbolAFrameFgColor = 212,
	ChordSymbolAFrameBgColor = 213,

	ChordSymbolBFontFace = 214,
	ChordSymbolBFontSize = 215,
	ChordSymbolBFontSpatiumDependent = 216,
	ChordSymbolBFontStyle = 217,
	ChordSymbolBColor = 218,
	ChordSymbolBAlign = 219,
	ChordSymbolBFrameType = 220,
	ChordSymbolBFramePadding = 221,
	ChordSymbolBFrameWidth = 222,
	ChordSymbolBFrameRound = 223,
	ChordSymbolBFrameFgColor = 224,
	ChordSymbolBFrameBgColor = 225,

	RomanNumeralFontFace = 226,
	RomanNumeralFontSize = 227,
	RomanNumeralFontSpatiumDependent = 228,
	RomanNumeralFontStyle = 229,
	RomanNumeralColor = 230,
	RomanNumeralAlign = 231,
	RomanNumeralFrameType = 232,
	RomanNumeralFramePadding = 233,
	RomanNumeralFrameWidth = 234,
	RomanNumeralFrameRound = 235,
	RomanNumeralFrameFgColor = 236,
	RomanNumeralFrameBgColor = 237,

	NashvilleNumberFontFace = 238,
	NashvilleNumberFontSize = 239,
	NashvilleNumberFontSpatiumDependent = 240,
	NashvilleNumberFontStyle = 241,
	NashvilleNumberColor = 242,
	NashvilleNumberAlign = 243,
	NashvilleNumberFrameType = 244,
	NashvilleNumberFramePadding = 245,
	NashvilleNumberFrameWidth = 246,
	NashvilleNumberFrameRound = 247,
	NashvilleNumberFrameFgColor = 248,
	NashvilleNumberFrameBgColor = 249,

	CapoPosition = 250,
	FretNumMag = 251,
	FretNumPos = 252,
	FretY = 253,
	FretMinDistance = 254,
	FretMag = 255,
	FretPlacement = 256,
	FretStrings = 257,
	FretFrets = 258,
	FretNut = 259,
	FretDotSize = 260,
	FretStringSpacing = 261,
	FretFretSpacing = 262,

	ShowPageNumber = 263,
	ShowPageNumberOne = 264,
	PageNumberOddEven = 265,
	ShowMeasureNumber = 266,
	ShowMeasureNumberOne = 267,
	MeasureNumberInterval = 268,
	MeasureNumberSystem = 269,

	MeasureNumberAllStaffs = 270,
	SmallNoteMag = 271,
	GraceNoteMag = 272,
	SmallStaffMag = 273,
	SmallClefMag = 274,
	GenClef = 275,
	GenKeysig = 276,
	GenCourtesyTimesig = 277,
	GenCourtesyKeysig = 278,
	GenCourtesyClef = 279,

	SwingRatio = 280,
	SwingUnit = 281,

	UseStandardNoteNames = 282,
	UseGermanNoteNames = 283,
	UseFullGermanNoteNames = 284,
	UseSolfeggioNoteNames = 285,
	UseFrenchNoteNames = 286,
	AutomaticCapitalization = 287,
	LowerCaseMinorChords = 288,
	LowerCaseBassNotes = 289,
	AllCapsNoteNames = 290,
	ChordStyle = 291,
	ChordsXmlFile = 292,
	ChordDescriptionFile = 293,
	ChordExtensionMag = 294,
	ChordExtensionAdjust = 295,
	ChordModifierMag = 296,
	ChordModifierAdjust = 297,
	ConcertPitch = 298,
	CreateMultiMeasureRests = 299,
	MinEmptyMeasures = 300,
	MinMMRestWidth = 301,
	HideEmptyStaves = 302,
	DontHideStavesInFirstSystem = 303,
	HideInstrumentNameIfOneInstrument = 304,
	GateTime = 305,
	TenutoGateTime = 306,
	StaccatoGateTime = 307,
	SlurGateTime = 308,

	ArpeggioNoteDistance = 309,
	ArpeggioLineWidth = 310,
	ArpeggioHookLen = 311,
	ArpeggioHiddenInStdIfTab = 312,

	SlurEndWidth = 313,
	SlurMidWidth = 314,
	SlurDottedWidth = 315,
	MinTieLength = 316,
	SlurMinDistance = 317,

	SectionPause = 318,
	MusicalSymbolFont = 319,
	MusicalTextFont = 320,

	ShowHeader = 321,
	HeaderFirstPage = 322,
	HeaderOddEven = 323,
	EvenHeaderL = 324,
	EvenHeaderC = 325,
	EvenHeaderR = 326,
	OddHeaderL = 327,
	OddHeaderC = 328,
	OddHeaderR = 329,

	ShowFooter = 330,
	FooterFirstPage = 331,
	FooterOddEven = 332,
	EvenFooterL = 333,
	EvenFooterC = 334,
	EvenFooterR = 335,
	OddFooterL = 336,
	OddFooterC = 337,
	OddFooterR = 338,

	VoltaPosAbove = 339,
	VoltaHook = 340,
	VoltaLineWidth = 341,
	VoltaLineStyle = 342,
	VoltaFontFace = 343,
	VoltaFontSize = 344,
	VoltaFontSpatiumDependent = 345,
	VoltaFontStyle = 346,
	VoltaColor = 347,
	VoltaAlign = 348,
	VoltaOffset = 349,
	VoltaFrameType = 350,
	VoltaFramePadding = 351,
	VoltaFrameWidth = 352,
	VoltaFrameRound = 353,
	VoltaFrameFgColor = 354,
	VoltaFrameBgColor = 355,

	Ottava8VAPlacement = 356,
	Ottava8VBPlacement = 357,
	Ottava15MAPlacement = 358,
	Ottava15MBPlacement = 359,
	Ottava22MAPlacement = 360,
	Ottava22MBPlacement = 361,

	Ottava8VAText = 362,
	Ottava8VAContinueText = 363,
	Ottava8VBText = 364,
	Ottava8VBContinueText = 365,
	Ottava15MAText = 366,
	Ottava15MAContinueText = 367,
	Ottava15MBText = 368,
	Ottava15MBContinueText = 369,
	Ottava22MAText = 370,
	Ottava22MAContinueText = 371,
	Ottava22MBText = 372,
	Ottava22MBContinueText = 373,

	Ottava8VAnoText = 374,
	Ottava8VAnoContinueText = 375,
	Ottava8VBnoText = 376,
	Ottava8VBnoContinueText = 377,
	Ottava15MAnoText = 378,
	Ottava15MAnoContinueText = 379,
	Ottava15MBnoText = 380,
	Ottava15MBnoContinueText = 381,
	Ottava22MAnoText = 382,
	Ottava22MAnoContinueText = 383,
	Ottava22MBnoText = 384,
	Ottava22MBnoContinueText = 385,

	OttavaPosAbove = 386,
	OttavaPosBelow = 387,
	OttavaHookAbove = 388,
	OttavaHookBelow = 389,
	OttavaLineWidth = 390,
	OttavaLineStyle = 391,
	OttavaNumbersOnly = 392,
	OttavaFontFace = 393,
	OttavaFontSize = 394,
	OttavaFontSpatiumDependent = 395,
	OttavaFontStyle = 396,
	OttavaColor = 397,
	OttavaTextAlign = 398,
	OttavaFrameType = 399,
	OttavaFramePadding = 400,
	OttavaFrameWidth = 401,
	OttavaFrameRound = 402,
	OttavaFrameFgColor = 403,
	OttavaFrameBgColor = 404,

	TabClef = 405,

	TremoloWidth = 406,
	TremoloBoxHeight = 407,
	TremoloStrokeWidth = 408,
	TremoloDistance = 409,
	TremoloPlacement = 410,
// TODO tremoloBeamLengthMultiplier
// TODO tremoloMaxBeamLength

	LinearStretch = 411,
	CrossMeasureValues = 412,
	KeySigNaturals = 413,

	TupletMaxSlope = 414,
	TupletOufOfStaff = 415,
	TupletVHeadDistance = 416,
	TupletVStemDistance = 417,
	TupletStemLeftDistance = 418,
	TupletStemRightDistance = 419,
	TupletNoteLeftDistance = 420,
	TupletNoteRightDistance = 421,
	TupletBracketWidth = 422,
	TupletDirection = 423,
	TupletNumberType = 424,
	TupletBracketType = 425,
	TupletFontFace = 426,
	TupletFontSize = 427,
	TupletFontSpatiumDependent = 428,
	TupletFontStyle = 429,
	TupletColor = 430,
	TupletAlign = 431,
	TupletBracketHookHeight = 432,
	TupletOffset = 433,
	TupletFrameType = 434,
	TupletFramePadding = 435,
	TupletFrameWidth = 436,
	TupletFrameRound = 437,
	TupletFrameFgColor = 438,
	TupletFrameBgColor = 439,

	BarreLineWidth = 440,
	ScaleBarlines = 441,
	BarGraceDistance = 442,

	MinVerticalDistance = 443,
	OrnamentStyle = 444,
	Spatium = 445,

	AutoplaceHairpinDynamicsDistance = 446,

	DynamicsPlacement = 447,
	DynamicsPosAbove = 448,
	DynamicsPosBelow = 449,

	DynamicsMinDistance = 450,
	AutoplaceVerticalAlignRange = 451,

	TextLinePlacement = 452,
	TextLinePosAbove = 453,
	TextLinePosBelow = 454,
	TextLineFrameType = 455,
	TextLineFramePadding = 456,
	TextLineFrameWidth = 457,
	TextLineFrameRound = 458,
	TextLineFrameFgColor = 459,
	TextLineFrameBgColor = 460,

	TremoloBarLineWidth = 461,
	JumpPosAbove = 462,
	MarkerPosAbove = 463,

	DefaultFontFace = 464,
	DefaultFontSize = 465,
	DefaultFontSpatiumDependent = 466,
	DefaultFontStyle = 467,
	DefaultColor = 468,
	DefaultAlign = 469,
	DefaultFrameType = 470,
	DefaultFramePadding = 471,
	DefaultFrameWidth = 472,
	DefaultFrameRound = 473,
	DefaultFrameFgColor = 474,
	DefaultFrameBgColor = 475,
	DefaultOffset = 476,
	DefaultOffsetType = 477,
	DefaultSystemFlag = 478,
	DefaultText = 479,

	TitleFontFace = 480,
	TitleFontSize = 481,
	TitleFontSpatiumDependent = 482,
	TitleFontStyle = 483,
	TitleColor = 484,
	TitleAlign = 485,
	TitleOffset = 486,
	TitleOffsetType = 487,
	TitleFrameType = 488,
	TitleFramePadding = 489,
	TitleFrameWidth = 490,
	TitleFrameRound = 491,
	TitleFrameFgColor = 492,
	TitleFrameBgColor = 493,

	SubTitleFontFace = 494,
	SubTitleFontSize = 495,
	SubTitleFontSpatiumDependent = 496,
	SubTitleFontStyle = 497,
	SubTitleColor = 498,
	SubTitleAlign = 499,
	SubTitleOffset = 500,
	SubTitleOffsetType = 501,
	SubTitleFrameType = 502,
	SubTitleFramePadding = 503,
	SubTitleFrameWidth = 504,
	SubTitleFrameRound = 505,
	SubTitleFrameFgColor = 506,
	SubTitleFrameBgColor = 507,

	ComposerFontFace = 508,
	ComposerFontSize = 509,
	ComposerFontSpatiumDependent = 510,
	ComposerFontStyle = 511,
	ComposerColor = 512,
	ComposerAlign = 513,
	ComposerOffset = 514,
	ComposerOffsetType = 515,
	ComposerFrameType = 516,
	ComposerFramePadding = 517,
	ComposerFrameWidth = 518,
	ComposerFrameRound = 519,
	ComposerFrameFgColor = 520,
	ComposerFrameBgColor = 521,

	LyricistFontFace = 522,
	LyricistFontSize = 523,
	LyricistFontSpatiumDependent = 524,
	LyricistFontStyle = 525,
	LyricistColor = 526,
	LyricistAlign = 527,
	LyricistOffset = 528,
	LyricistOffsetType = 529,
	LyricistFrameType = 530,
	LyricistFramePadding = 531,
	LyricistFrameWidth = 532,
	LyricistFrameRound = 533,
	LyricistFrameFgColor = 534,
	LyricistFrameBgColor = 535,

	FingeringFontFace = 536,
	FingeringFontSize = 537,
	FingeringFontSpatiumDependent = 538,
	FingeringFontStyle = 539,
	FingeringColor = 540,
	FingeringAlign = 541,
	FingeringFrameType = 542,
	FingeringFramePadding = 543,
	FingeringFrameWidth = 544,
	FingeringFrameRound = 545,
	FingeringFrameFgColor = 546,
	FingeringFrameBgColor = 547,
	FingeringOffset = 548,

	LhGuitarFingeringFontFace = 549,
	LhGuitarFingeringFontSize = 550,
	LhGuitarFingeringFontSpatiumDependent = 551,
	LhGuitarFingeringFontStyle = 552,
	LhGuitarFingeringColor = 553,
	LhGuitarFingeringAlign = 554,
	LhGuitarFingeringFrameType = 555,
	LhGuitarFingeringFramePadding = 556,
	LhGuitarFingeringFrameWidth = 557,
	LhGuitarFingeringFrameRound = 558,
	LhGuitarFingeringFrameFgColor = 559,
	LhGuitarFingeringFrameBgColor = 560,
	LhGuitarFingeringOffset = 561,

	RhGuitarFingeringFontFace = 562,
	RhGuitarFingeringFontSize = 563,
	RhGuitarFingeringFontSpatiumDependent = 564,
	RhGuitarFingeringFontStyle = 565,
	RhGuitarFingeringColor = 566,
	RhGuitarFingeringAlign = 567,
	RhGuitarFingeringFrameType = 568,
	RhGuitarFingeringFramePadding = 569,
	RhGuitarFingeringFrameWidth = 570,
	RhGuitarFingeringFrameRound = 571,
	RhGuitarFingeringFrameFgColor = 572,
	RhGuitarFingeringFrameBgColor = 573,
	RhGuitarFingeringOffset = 574,

	StringNumberFontFace = 575,
	StringNumberFontSize = 576,
	StringNumberFontSpatiumDependent = 577,
	StringNumberFontStyle = 578,
	StringNumberColor = 579,
	StringNumberAlign = 580,
	StringNumberFrameType = 581,
	StringNumberFramePadding = 582,
	StringNumberFrameWidth = 583,
	StringNumberFrameRound = 584,
	StringNumberFrameFgColor = 585,
	StringNumberFrameBgColor = 586,
	StringNumberOffset = 587,

	LongInstrumentFontFace = 588,
	LongInstrumentFontSize = 589,
	LongInstrumentFontSpatiumDependent = 590,
	LongInstrumentFontStyle = 591,
	LongInstrumentColor = 592,
	LongInstrumentAlign = 593,
	LongInstrumentOffset = 594,
	LongInstrumentFrameType = 595,
	LongInstrumentFramePadding = 596,
	LongInstrumentFrameWidth = 597,
	LongInstrumentFrameRound = 598,
	LongInstrumentFrameFgColor = 599,
	LongInstrumentFrameBgColor = 600,

	ShortInstrumentFontFace = 601,
	ShortInstrumentFontSize = 602,
	ShortInstrumentFontSpatiumDependent = 603,
	ShortInstrumentFontStyle = 604,
	ShortInstrumentColor = 605,
	ShortInstrumentAlign = 606,
	ShortInstrumentOffset = 607,
	ShortInstrumentFrameType = 608,
	ShortInstrumentFramePadding = 609,
	ShortInstrumentFrameWidth = 610,
	ShortInstrumentFrameRound = 611,
	ShortInstrumentFrameFgColor = 612,
	ShortInstrumentFrameBgColor = 613,

	PartInstrumentFontFace = 614,
	PartInstrumentFontSize = 615,
	PartInstrumentFontSpatiumDependent = 616,
	PartInstrumentFontStyle = 617,
	PartInstrumentColor = 618,
	PartInstrumentAlign = 619,
	PartInstrumentOffset = 620,
	PartInstrumentFrameType = 621,
	PartInstrumentFramePadding = 622,
	PartInstrumentFrameWidth = 623,
	PartInstrumentFrameRound = 624,
	PartInstrumentFrameFgColor = 625,
	PartInstrumentFrameBgColor = 626,

	DynamicsFontFace = 627,
	DynamicsFontSize = 628,
	DynamicsFontSpatiumDependent = 629,
	DynamicsFontStyle = 630,
	DynamicsColor = 631,
	DynamicsAlign = 632,
	DynamicsFrameType = 633,
	DynamicsFramePadding = 634,
	DynamicsFrameWidth = 635,
	DynamicsFrameRound = 636,
	DynamicsFrameFgColor = 637,
	DynamicsFrameBgColor = 638,

	ExpressionFontFace = 639,
	ExpressionFontSize = 640,
	ExpressionFontSpatiumDependent = 641,
	ExpressionFontStyle = 642,
	ExpressionColor = 643,
	ExpressionAlign = 644,
	ExpressionPlacement = 645,
	ExpressionOffset = 646,
	ExpressionFrameType = 647,
	ExpressionFramePadding = 648,
	ExpressionFrameWidth = 649,
	ExpressionFrameRound = 650,
	ExpressionFrameFgColor = 651,
	ExpressionFrameBgColor = 652,

	TempoFontFace = 653,
	TempoFontSize = 654,
	TempoFontSpatiumDependent = 655,
	TempoFontStyle = 656,
	TempoColor = 657,
	TempoAlign = 658,
	TempoSystemFlag = 659,
	TempoPlacement = 660,
	TempoPosAbove = 661,
	TempoPosBelow = 662,
	TempoMinDistance = 663,
	TempoFrameType = 664,
	TempoFramePadding = 665,
	TempoFrameWidth = 666,
	TempoFrameRound = 667,
	TempoFrameFgColor = 668,
	TempoFrameBgColor = 669,

	MetronomeFontFace = 670,
	MetronomeFontSize = 671,
	MetronomeFontSpatiumDependent = 672,
	MetronomeFontStyle = 673,
	MetronomeColor = 674,
	MetronomePlacement = 675,
	MetronomeAlign = 676,
	MetronomeOffset = 677,
	MetronomeFrameType = 678,
	MetronomeFramePadding = 679,
	MetronomeFrameWidth = 680,
	MetronomeFrameRound = 681,
	MetronomeFrameFgColor = 682,
	MetronomeFrameBgColor = 683,

	MeasureNumberFontFace = 684,
	MeasureNumberFontSize = 685,
	MeasureNumberFontSpatiumDependent = 686,
	MeasureNumberFontStyle = 687,
	MeasureNumberColor = 688,
	MeasureNumberOffset = 689,
	MeasureNumberOffsetType = 690,
	MeasureNumberAlign = 691,
	MeasureNumberFrameType = 692,
	MeasureNumberFramePadding = 693,
	MeasureNumberFrameWidth = 694,
	MeasureNumberFrameRound = 695,
	MeasureNumberFrameFgColor = 696,
	MeasureNumberFrameBgColor = 697,

	TranslatorFontFace = 698,
	TranslatorFontSize = 699,
	TranslatorFontSpatiumDependent = 700,
	TranslatorFontStyle = 701,
	TranslatorColor = 702,
	TranslatorAlign = 703,
	TranslatorOffset = 704,
	TranslatorFrameType = 705,
	TranslatorFramePadding = 706,
	TranslatorFrameWidth = 707,
	TranslatorFrameRound = 708,
	TranslatorFrameFgColor = 709,
	TranslatorFrameBgColor = 710,

	SystemTextFontFace = 711,
	SystemTextFontSize = 712,
	SystemTextFontSpatiumDependent = 713,
	SystemTextFontStyle = 714,
	SystemTextColor = 715,
	SystemTextAlign = 716,
	SystemTextOffsetType = 717,
	SystemTextPlacement = 718,
	SystemTextPosAbove = 719,
	SystemTextPosBelow = 720,
	SystemTextMinDistance = 721,
	SystemTextFrameType = 722,
	SystemTextFramePadding = 723,
	SystemTextFrameWidth = 724,
	SystemTextFrameRound = 725,
	SystemTextFrameFgColor = 726,
	SystemTextFrameBgColor = 727,

	StaffTextFontFace = 728,
	StaffTextFontSize = 729,
	StaffTextFontSpatiumDependent = 730,
	StaffTextFontStyle = 731,
	StaffTextColor = 732,
	StaffTextAlign = 733,
	StaffTextOffsetType = 734,
	StaffTextPlacement = 735,
	StaffTextPosAbove = 736,
	StaffTextPosBelow = 737,
	StaffTextMinDistance = 738,
	StaffTextFrameType = 739,
	StaffTextFramePadding = 740,
	StaffTextFrameWidth = 741,
	StaffTextFrameRound = 742,
	StaffTextFrameFgColor = 743,
	StaffTextFrameBgColor = 744,

	RehearsalMarkFontFace = 745,
	RehearsalMarkFontSize = 746,
	RehearsalMarkFontSpatiumDependent = 747,
	RehearsalMarkFontStyle = 748,
	RehearsalMarkColor = 749,
	RehearsalMarkAlign = 750,
	RehearsalMarkFrameType = 751,
	RehearsalMarkFramePadding = 752,
	RehearsalMarkFrameWidth = 753,
	RehearsalMarkFrameRound = 754,
	RehearsalMarkFrameFgColor = 755,
	RehearsalMarkFrameBgColor = 756,
	RehearsalMarkPlacement = 757,
	RehearsalMarkPosAbove = 758,
	RehearsalMarkPosBelow = 759,
	RehearsalMarkMinDistance = 760,

	RepeatLeftFontFace = 761,
	RepeatLeftFontSize = 762,
	RepeatLeftFontSpatiumDependent = 763,
	RepeatLeftFontStyle = 764,
	RepeatLeftColor = 765,
	RepeatLeftAlign = 766,
	RepeatLeftPlacement = 767,
	RepeatLeftFrameType = 768,
	RepeatLeftFramePadding = 769,
	RepeatLeftFrameWidth = 770,
	RepeatLeftFrameRound = 771,
	RepeatLeftFrameFgColor = 772,
	RepeatLeftFrameBgColor = 773,

	RepeatRightFontFace = 774,
	RepeatRightFontSize = 775,
	RepeatRightFontSpatiumDependent = 776,
	RepeatRightFontStyle = 777,
	RepeatRightColor = 778,
	RepeatRightAlign = 779,
	RepeatRightPlacement = 780,
	RepeatRightFrameType = 781,
	RepeatRightFramePadding = 782,
	RepeatRightFrameWidth = 783,
	RepeatRightFrameRound = 784,
	RepeatRightFrameFgColor = 785,
	RepeatRightFrameBgColor = 786,

	FrameFontFace = 787,
	FrameFontSize = 788,
	FrameFontSpatiumDependent = 789,
	FrameFontStyle = 790,
	FrameColor = 791,
	FrameAlign = 792,
	FrameOffset = 793,
	FrameFrameType = 794,
	FrameFramePadding = 795,
	FrameFrameWidth = 796,
	FrameFrameRound = 797,
	FrameFrameFgColor = 798,
	FrameFrameBgColor = 799,

	TextLineFontFace = 800,
	TextLineFontSize = 801,
	TextLineFontSpatiumDependent = 802,
	TextLineFontStyle = 803,
	TextLineColor = 804,
	TextLineTextAlign = 805,

	GlissandoFontFace = 806,
	GlissandoFontSize = 807,
	GlissandoFontSpatiumDependent = 808,
	GlissandoFontStyle = 809,
	GlissandoColor = 810,
	GlissandoAlign = 811,
	GlissandoOffset = 812,
	GlissandoFrameType = 813,
	GlissandoFramePadding = 814,
	GlissandoFrameWidth = 815,
	GlissandoFrameRound = 816,
	GlissandoFrameFgColor = 817,
	GlissandoFrameBgColor = 818,
	GlissandoLineWidth = 819,
	GlissandoText = 820,

	BendFontFace = 821,
	BendFontSize = 822,
	BendFontSpatiumDependent = 823,
	BendFontStyle = 824,
	BendColor = 825,
	BendAlign = 826,
	BendOffset = 827,
	BendFrameType = 828,
	BendFramePadding = 829,
	BendFrameWidth = 830,
	BendFrameRound = 831,
	BendFrameFgColor = 832,
	BendFrameBgColor = 833,
	BendLineWidth = 834,
	BendArrowWidth = 835,

	HeaderFontFace = 836,
	HeaderFontSize = 837,
	HeaderFontSpatiumDependent = 838,
	HeaderFontStyle = 839,
	HeaderColor = 840,
	HeaderAlign = 841,
	HeaderOffset = 842,
	HeaderFrameType = 843,
	HeaderFramePadding = 844,
	HeaderFrameWidth = 845,
	HeaderFrameRound = 846,
	HeaderFrameFgColor = 847,
	HeaderFrameBgColor = 848,

	FooterFontFace = 849,
	FooterFontSize = 850,
	FooterFontSpatiumDependent = 851,
	FooterFontStyle = 852,
	FooterColor = 853,
	FooterAlign = 854,
	FooterOffset = 855,
	FooterFrameType = 856,
	FooterFramePadding = 857,
	FooterFrameWidth = 858,
	FooterFrameRound = 859,
	FooterFrameFgColor = 860,
	FooterFrameBgColor = 861,

	InstrumentChangeFontFace = 862,
	InstrumentChangeFontSize = 863,
	InstrumentChangeFontSpatiumDependent = 864,
	InstrumentChangeFontStyle = 865,
	InstrumentChangeColor = 866,
	InstrumentChangeAlign = 867,
	InstrumentChangeOffset = 868,
	InstrumentChangePlacement = 869,
	InstrumentChangePosAbove = 870,
	InstrumentChangePosBelow = 871,
	InstrumentChangeMinDistance = 872,
	InstrumentChangeFrameType = 873,
	InstrumentChangeFramePadding = 874,
	InstrumentChangeFrameWidth = 875,
	InstrumentChangeFrameRound = 876,
	InstrumentChangeFrameFgColor = 877,
	InstrumentChangeFrameBgColor = 878,

	StickingFontFace = 879,
	StickingFontSize = 880,
	StickingFontSpatiumDependent = 881,
	StickingFontStyle = 882,
	StickingColor = 883,
	StickingAlign = 884,
	StickingOffset = 885,
	StickingPlacement = 886,
	StickingPosAbove = 887,
	StickingPosBelow = 888,
	StickingMinDistance = 889,
	StickingFrameType = 890,
	StickingFramePadding = 891,
	StickingFrameWidth = 892,
	StickingFrameRound = 893,
	StickingFrameFgColor = 894,
	StickingFrameBgColor = 895,

	FiguredBassFontFace = 896,
	FiguredBassFontSize = 897,
	FiguredBassFontSpatiumDependent = 898,
	FiguredBassFontStyle = 899,
	FiguredBassColor = 900,

	User1Name = 901,
	User1FontFace = 902,
	User1FontSize = 903,
	User1FontSpatiumDependent = 904,
	User1FontStyle = 905,
	User1Color = 906,
	User1Align = 907,
	User1Offset = 908,
	User1OffsetType = 909,
	User1FrameType = 910,
	User1FramePadding = 911,
	User1FrameWidth = 912,
	User1FrameRound = 913,
	User1FrameFgColor = 914,
	User1FrameBgColor = 915,

	User2Name = 916,
	User2FontFace = 917,
	User2FontSize = 918,
	User2FontSpatiumDependent = 919,
	User2FontStyle = 920,
	User2Color = 921,
	User2Align = 922,
	User2Offset = 923,
	User2OffsetType = 924,
	User2FrameType = 925,
	User2FramePadding = 926,
	User2FrameWidth = 927,
	User2FrameRound = 928,
	User2FrameFgColor = 929,
	User2FrameBgColor = 930,

	User3Name = 931,
	User3FontFace = 932,
	User3FontSize = 933,
	User3FontSpatiumDependent = 934,
	User3FontStyle = 935,
	User3Color = 936,
	User3Align = 937,
	User3Offset = 938,
	User3OffsetType = 939,
	User3FrameType = 940,
	User3FramePadding = 941,
	User3FrameWidth = 942,
	User3FrameRound = 943,
	User3FrameFgColor = 944,
	User3FrameBgColor = 945,

	User4Name = 946,
	User4FontFace = 947,
	User4FontSize = 948,
	User4FontSpatiumDependent = 949,
	User4FontStyle = 950,
	User4Color = 951,
	User4Align = 952,
	User4Offset = 953,
	User4OffsetType = 954,
	User4FrameType = 955,
	User4FramePadding = 956,
	User4FrameWidth = 957,
	User4FrameRound = 958,
	User4FrameFgColor = 959,
	User4FrameBgColor = 960,

	User5Name = 961,
	User5FontFace = 962,
	User5FontSize = 963,
	User5FontSpatiumDependent = 964,
	User5FontStyle = 965,
	User5Color = 966,
	User5Align = 967,
	User5Offset = 968,
	User5OffsetType = 969,
	User5FrameType = 970,
	User5FramePadding = 971,
	User5FrameWidth = 972,
	User5FrameRound = 973,
	User5FrameFgColor = 974,
	User5FrameBgColor = 975,

	User6Name = 976,
	User6FontFace = 977,
	User6FontSize = 978,
	User6FontSpatiumDependent = 979,
	User6FontStyle = 980,
	User6Color = 981,
	User6Align = 982,
	User6Offset = 983,
	User6OffsetType = 984,
	User6FrameType = 985,
	User6FramePadding = 986,
	User6FrameWidth = 987,
	User6FrameRound = 988,
	User6FrameFgColor = 989,
	User6FrameBgColor = 990,

	LetRingFontFace = 991,
	LetRingFontSize = 992,
	LetRingFontSpatiumDependent = 993,
	LetRingFontStyle = 994,
	LetRingColor = 995,
	LetRingTextAlign = 996,
	LetRingHookHeight = 997,
	LetRingPlacement = 998,
	LetRingPosAbove = 999,
	LetRingPosBelow = 1000,
	LetRingLineWidth = 1001,
	LetRingLineStyle = 1002,
	LetRingBeginTextOffset = 1003,
	LetRingText = 1004,
	LetRingFrameType = 1005,
	LetRingFramePadding = 1006,
	LetRingFrameWidth = 1007,
	LetRingFrameRound = 1008,
	LetRingFrameFgColor = 1009,
	LetRingFrameBgColor = 1010,
	LetRingEndHookType = 1011,

	PalmMuteFontFace = 1012,
	PalmMuteFontSize = 1013,
	PalmMuteFontSpatiumDependent = 1014,
	PalmMuteFontStyle = 1015,
	PalmMuteColor = 1016,
	PalmMuteTextAlign = 1017,
	PalmMuteHookHeight = 1018,
	PalmMutePlacement = 1019,
	PalmMutePosAbove = 1020,
	PalmMutePosBelow = 1021,
	PalmMuteLineWidth = 1022,
	PalmMuteLineStyle = 1023,
	PalmMuteBeginTextOffset = 1024,
	PalmMuteText = 1025,
	PalmMuteFrameType = 1026,
	PalmMuteFramePadding = 1027,
	PalmMuteFrameWidth = 1028,
	PalmMuteFrameRound = 1029,
	PalmMuteFrameFgColor = 1030,
	PalmMuteFrameBgColor = 1031,
	PalmMuteEndHookType = 1032,

	FermataPosAbove = 1033,
	FermataPosBelow = 1034,
	FermataMinDistance = 1035,

	FingeringPlacement = 1036,

	ArticulationMinDistance = 1037,
	FingeringMinDistance = 1038,
	HairpinMinDistance = 1039,
	LetRingMinDistance = 1040,
	OttavaMinDistance = 1041,
	PalmMuteMinDistance = 1042,
	PedalMinDistance = 1043,
	RepeatMinDistance = 1044,
	TextLineMinDistance = 1045,
	TrillMinDistance = 1046,
	VibratoMinDistance = 1047,
	VoltaMinDistance = 1048,
	FiguredBassMinDistance = 1049,
	TupletMinDistance = 1050,

	AutoplaceEnabled = 1051,
	LastStyle = 1052,
}

pub const STYLE_COUNT: usize = StyleName::LastStyle as usize;

impl StyleName {
	pub fn name(self) -> &'static str { STYLE_NAMES[self as usize] }
	pub fn id(self) -> StyleId { self as StyleId }
}

impl PartialEq<u32> for StyleName {
	fn eq(&self, other: &u32) -> bool { self.id() == *other }
}

impl Into<u32> for StyleName {
	fn into(self) -> u32 { self.id() }
}
impl From<u32> for StyleName {
	fn from(i: u32) -> Self { Self::from_u32(i).unwrap_or(StyleName::NoStyle) }
}

pub(super) fn style_default_values() -> [(StyleName, ValueVariant); STYLE_COUNT] {[
	(StyleName::PageWidth, ValueVariant::Float(210.0/constants::INCH)),
	(StyleName::PageHeight, ValueVariant::Float(297.0/constants::INCH)), // A4
	(StyleName::PagePrintableWidth, ValueVariant::Float(190.0/constants::INCH)),
	(StyleName::PageEvenLeftMargin, ValueVariant::Float(10.0/constants::INCH)),
	(StyleName::PageOddLeftMargin, ValueVariant::Float(10.0/constants::INCH)),
	(StyleName::PageEvenTopMargin, ValueVariant::Float(10.0/constants::INCH)),
	(StyleName::PageEvenBottomMargin, ValueVariant::Float(20.0/constants::INCH)),
	(StyleName::PageOddTopMargin, ValueVariant::Float(10.0/constants::INCH)),
	(StyleName::PageOddBottomMargin, ValueVariant::Float(20.0/constants::INCH)),
	(StyleName::PageTwosided, ValueVariant::Bool(true)),

	(StyleName::StaffUpperBorder, ValueVariant::Spatium(7.0)),
	(StyleName::StaffLowerBorder, ValueVariant::Spatium(7.0)),
	(StyleName::StaffDistance, ValueVariant::Spatium(6.5)),
	(StyleName::AkkoladeDistance, ValueVariant::Spatium(6.5)),
	(StyleName::MinSystemDistance, ValueVariant::Spatium(8.5)),
	(StyleName::MaxSystemDistance, ValueVariant::Spatium(15.0)),

	(StyleName::LyricsPlacement, ValueVariant::UInt(Placement::Below as u32)),
	(StyleName::LyricsPosAbove, ValueVariant::Point(Point2F::new(0.0, -2.0))),
	(StyleName::LyricsPosBelow, ValueVariant::Point(Point2F::new(0.0, 3.0))),
	(StyleName::LyricsMinTopDistance, ValueVariant::Spatium(1.0)),
	(StyleName::LyricsMinBottomDistance, ValueVariant::Spatium(2.0)),
	(StyleName::LyricsMinDistance, ValueVariant::Spatium(0.0)),
	(StyleName::LyricsLineHeight, ValueVariant::Float(1.0)),
	(StyleName::LyricsDashMinLength, ValueVariant::Spatium(0.4)),
	(StyleName::LyricsDashMaxLength, ValueVariant::Spatium(0.8)),
	(StyleName::LyricsDashMaxDistance, ValueVariant::Spatium(16.0)),
	(StyleName::LyricsDashForce, ValueVariant::Bool(true)),
	(StyleName::LyricsAlignVerseNumber, ValueVariant::Bool(true)),
	(StyleName::LyricsLineThickness, ValueVariant::Spatium(0.1)),
	(StyleName::LyricsMelismaAlign, ValueVariant::UInt((Align::LEFT | Align::BASELINE).into())),

	(StyleName::LyricsMelismaPad, ValueVariant::Spatium(0.10)), // the empty space before a melisma line
	(StyleName::LyricsDashPad, ValueVariant::Spatium(0.05)), // the min. empty space before and after a dash
	(StyleName::LyricsDashLineThickness, ValueVariant::Spatium(0.15)), // in sp. units
	(StyleName::LyricsDashYposRatio, ValueVariant::Float(0.67)), // the fraction of lyrics font x-height to raise the dashes above text base line

	(StyleName::LyricsOddFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::LyricsOddFontSize, ValueVariant::Float(11.0)),
	(StyleName::LyricsOddFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::LyricsOddFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::LyricsOddColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::LyricsOddAlign, ValueVariant::UInt((Align::HCENTER | Align::BASELINE).into())),
	(StyleName::LyricsOddFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::LyricsOddFramePadding, ValueVariant::Float(0.2)),
	(StyleName::LyricsOddFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::LyricsOddFrameRound, ValueVariant::Int(0)),
	(StyleName::LyricsOddFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::LyricsOddFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::LyricsEvenFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::LyricsEvenFontSize, ValueVariant::Float(11.0)),
	(StyleName::LyricsEvenFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::LyricsEvenFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::LyricsEvenColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::LyricsEvenAlign, ValueVariant::UInt((Align::HCENTER | Align::BASELINE).into())),
	(StyleName::LyricsEvenFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::LyricsEvenFramePadding, ValueVariant::Float(0.2)),
	(StyleName::LyricsEvenFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::LyricsEvenFrameRound, ValueVariant::Int(0)),
	(StyleName::LyricsEvenFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::LyricsEvenFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::FiguredBassFontFamily, ValueVariant::String("MScoreBC".to_string())),

	(StyleName::FiguredBassFontSize, ValueVariant::Float(8.0)),
	(StyleName::FiguredBassYOffset, ValueVariant::Float(6.0)),
	(StyleName::FiguredBassLineHeight, ValueVariant::Float(1.0)),
	(StyleName::FiguredBassAlignment, ValueVariant::Int(0)),
	(StyleName::FiguredBassStyle, ValueVariant::Int(0)),
	(StyleName::SystemFrameDistance, ValueVariant::Spatium(7.0)),
	(StyleName::FrameSystemDistance, ValueVariant::Spatium(7.0)),
	(StyleName::MinMeasureWidth, ValueVariant::Spatium(5.0)),
	(StyleName::BarWidth, ValueVariant::Spatium(0.16)),
	(StyleName::DoubleBarWidth, ValueVariant::Spatium(0.16)),

	(StyleName::EndBarWidth, ValueVariant::Spatium(0.5)),
	(StyleName::DoubleBarDistance, ValueVariant::Spatium(0.40 + 0.16)),
	(StyleName::EndBarDistance, ValueVariant::Spatium(0.40 + (0.16 + 0.50) * 0.5)),
	(StyleName::RepeatBarlineDotSeparation, ValueVariant::Spatium(0.40 + 0.46 * 0.5)),
	(StyleName::RepeatBarTips, ValueVariant::Bool(false)),
	(StyleName::StartBarlineSingle, ValueVariant::Bool(false)),
	(StyleName::StartBarlineMultiple, ValueVariant::Bool(true)),
	(StyleName::BracketWidth, ValueVariant::Spatium(0.45)),
	(StyleName::BracketDistance, ValueVariant::Spatium(0.1)),
	(StyleName::AkkoladeWidth, ValueVariant::Spatium(1.6)),
	(StyleName::AkkoladeBarDistance, ValueVariant::Spatium(0.4)),

	(StyleName::DividerLeft, ValueVariant::Bool(false)),
	(StyleName::DividerLeftSym, ValueVariant::String("systemDivider".to_string())),
	(StyleName::DividerLeftX, ValueVariant::Float(0.0)),
	(StyleName::DividerLeftY, ValueVariant::Float(0.0)),
	(StyleName::DividerRight, ValueVariant::Bool(false)),
	(StyleName::DividerRightSym, ValueVariant::String("systemDivider".to_string())),
	(StyleName::DividerRightX, ValueVariant::Float(0.0)),
	(StyleName::DividerRightY, ValueVariant::Float(0.0)),

	(StyleName::ClefLeftMargin, ValueVariant::Spatium(0.8)),     // 0.64 (gould: <= 1)
	(StyleName::KeysigLeftMargin, ValueVariant::Spatium(0.5)),
	(StyleName::AmbitusMargin, ValueVariant::Spatium(0.5)),

	(StyleName::TimesigLeftMargin, ValueVariant::Spatium(0.5)),
	(StyleName::TimesigScale, ValueVariant::Point(Point2F::new(1.0, 1.0))),
	(StyleName::MidClefKeyRightMargin, ValueVariant::Spatium(1.0)),
	(StyleName::ClefKeyRightMargin, ValueVariant::Spatium(0.8)),
	(StyleName::ClefKeyDistance, ValueVariant::Spatium(1.0)),   // gould: 1 - 1.25
	(StyleName::ClefTimesigDistance, ValueVariant::Spatium(1.0)),
	(StyleName::KeyTimesigDistance, ValueVariant::Spatium(1.0)),    // gould: 1 - 1.5
	(StyleName::KeyBarlineDistance, ValueVariant::Spatium(1.0)),
	(StyleName::SystemHeaderDistance, ValueVariant::Spatium(2.5)),     // gould: 2.5
	(StyleName::SystemHeaderTimeSigDistance, ValueVariant::Spatium(2.0)),  // gould: 2.0

	(StyleName::ClefBarlineDistance, ValueVariant::Spatium(0.5)),
	(StyleName::TimesigBarlineDistance, ValueVariant::Spatium(0.5)),
	(StyleName::StemWidth, ValueVariant::Spatium(0.13)),      // 0.09375
	(StyleName::ShortenStem, ValueVariant::Bool(true)),
	(StyleName::ShortStemProgression, ValueVariant::Spatium(0.25)),
	(StyleName::ShortestStem, ValueVariant::Spatium(2.25)),
	(StyleName::BeginRepeatLeftMargin, ValueVariant::Spatium(1.0)),
	(StyleName::MinNoteDistance, ValueVariant::Spatium(0.25)),      // 0.4
	(StyleName::BarNoteDistance, ValueVariant::Spatium(1.0)),     // was 1.2

	(StyleName::BarAccidentalDistance, ValueVariant::Spatium(0.3)),
	(StyleName::MultiMeasureRestMargin, ValueVariant::Spatium(1.2)),
	(StyleName::NoteBarDistance, ValueVariant::Spatium(1.0)),
	(StyleName::MeasureSpacing, ValueVariant::Float(1.2)),
	(StyleName::StaffLineWidth, ValueVariant::Spatium(0.08)),     // 0.09375
	(StyleName::LedgerLineWidth, ValueVariant::Spatium(0.16)),     // 0.1875
	(StyleName::LedgerLineLength, ValueVariant::Spatium(0.6)),     // notehead width + this value
	(StyleName::AccidentalDistance, ValueVariant::Spatium(0.22)),
	(StyleName::AccidentalNoteDistance, ValueVariant::Spatium(0.22)),

	(StyleName::BeamWidth, ValueVariant::Spatium(0.5)),     // was 0.48
	(StyleName::BeamDistance, ValueVariant::Float(0.5)),     // 0.25sp units
	(StyleName::BeamMinLen, ValueVariant::Spatium(1.32)),     // 1.316178 exactly notehead widthen beams
	(StyleName::BeamNoSlope, ValueVariant::Bool(false)),

	(StyleName::DotMag, ValueVariant::Float(1.0)),
	(StyleName::DotNoteDistance, ValueVariant::Spatium(0.35)),
	(StyleName::DotRestDistance, ValueVariant::Spatium(0.25)),
	(StyleName::DotDotDistance, ValueVariant::Spatium(0.5)),
	(StyleName::PropertyDistanceHead, ValueVariant::Spatium(1.0)),
	(StyleName::PropertyDistanceStem, ValueVariant::Spatium(1.8)),
	(StyleName::PropertyDistance, ValueVariant::Spatium(1.0)),

	(StyleName::ArticulationMag, ValueVariant::Float(1.0)),
	(StyleName::ArticulationPosAbove, ValueVariant::Point(Point2F::new(0.0, 0.0))),
	(StyleName::ArticulationAnchorDefault, ValueVariant::UInt(ArticulationAnchor::Chord as u32)),
	(StyleName::ArticulationAnchorLuteFingering, ValueVariant::UInt(ArticulationAnchor::BottomChord as u32)),
	(StyleName::ArticulationAnchorOther, ValueVariant::UInt(ArticulationAnchor::TopStaff as u32)),
	(StyleName::LastSystemFillLimit, ValueVariant::Float(0.3)),

	(StyleName::HairpinPlacement, ValueVariant::UInt(Placement::Below as u32)),
	(StyleName::HairpinPosAbove, ValueVariant::Point(Point2F::new(0.0, -3.5))),
	(StyleName::HairpinPosBelow, ValueVariant::Point(Point2F::new(0.0, 3.5))),
	(StyleName::HairpinLinePosAbove, ValueVariant::Point(Point2F::new(0.0, -3.0))),
	(StyleName::HairpinLinePosBelow, ValueVariant::Point(Point2F::new(0.0, 4.0))),
	(StyleName::HairpinHeight, ValueVariant::Spatium(1.2)),
	(StyleName::HairpinContHeight, ValueVariant::Spatium(0.5)),
	(StyleName::HairpinLineWidth, ValueVariant::Spatium(0.13)),
	(StyleName::HairpinFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::HairpinFontSize, ValueVariant::Float(12.0)),
	(StyleName::HairpinFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::HairpinFontStyle, ValueVariant::UInt(FontStyle::ITALIC.into())),
	(StyleName::HairpinColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::HairpinTextAlign, ValueVariant::UInt((Align::LEFT | Align::BASELINE).into())),
	(StyleName::HairpinFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::HairpinFramePadding, ValueVariant::Float(0.2)),
	(StyleName::HairpinFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::HairpinFrameRound, ValueVariant::Int(0)),
	(StyleName::HairpinFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::HairpinFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),
	(StyleName::HairpinText, ValueVariant::String("".to_string())),
	(StyleName::HairpinCrescText, ValueVariant::String("cresc.".to_string())),
	(StyleName::HairpinDecrescText, ValueVariant::String("dim.".to_string())),
	(StyleName::HairpinCrescContText, ValueVariant::String("(cresc.)".to_string())),
	(StyleName::HairpinDecrescContText, ValueVariant::String("(dim.)".to_string())),
	(StyleName::HairpinLineStyle, ValueVariant::UInt(LineStyle::SolidLine as u32)),
	(StyleName::HairpinLineLineStyle, ValueVariant::UInt(LineStyle::CustomDashLine as u32)),

	(StyleName::PedalPlacement, ValueVariant::UInt(Placement::Below as u32)),
	(StyleName::PedalPosAbove, ValueVariant::Point(Point2F::new(0.0, -4.))),
	(StyleName::PedalPosBelow, ValueVariant::Point(Point2F::new(0.0, 4.))),
	(StyleName::PedalLineWidth, ValueVariant::Spatium(0.15)),
	(StyleName::PedalLineStyle, ValueVariant::UInt(LineStyle::SolidLine as u32)),
	(StyleName::PedalBeginTextOffset, ValueVariant::Point(Point2F::new(0.0, 0.15))),
	(StyleName::PedalHookHeight, ValueVariant::Spatium(-1.2)),
	(StyleName::PedalFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::PedalFontSize, ValueVariant::Float(12.0)),
	(StyleName::PedalFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::PedalFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::PedalColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::PedalTextAlign, ValueVariant::UInt((Align::LEFT | Align::BASELINE).into())),
	(StyleName::PedalFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::PedalFramePadding, ValueVariant::Float(0.2)),
	(StyleName::PedalFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::PedalFrameRound, ValueVariant::Int(0)),
	(StyleName::PedalFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::PedalFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::TrillPlacement, ValueVariant::UInt(Placement::Above as u32)),
	(StyleName::TrillPosAbove, ValueVariant::Point(Point2F::new(0.0, -1.))),
	(StyleName::TrillPosBelow, ValueVariant::Point(Point2F::new(0.0, 1.))),

	(StyleName::VibratoPlacement, ValueVariant::UInt(Placement::Above as u32)),
	(StyleName::VibratoPosAbove, ValueVariant::Point(Point2F::new(0.0, -1.))),
	(StyleName::VibratoPosBelow, ValueVariant::Point(Point2F::new(0.0, 1.))),

	(StyleName::HarmonyFretDist, ValueVariant::Spatium(1.0)),
	(StyleName::MinHarmonyDistance, ValueVariant::Spatium(0.5)),
	(StyleName::MaxHarmonyBarDistance, ValueVariant::Spatium(3.0)),

	(StyleName::HarmonyPlacement, ValueVariant::UInt(Placement::Above as u32)),
	(StyleName::RomanNumeralPlacement, ValueVariant::UInt(Placement::Below as u32)),
	(StyleName::NashvilleNumberPlacement, ValueVariant::UInt(Placement::Above as u32)),

	(StyleName::ChordSymbolAPosAbove, ValueVariant::Point(Point2F::new(0.0, -2.5))),
	(StyleName::ChordSymbolAPosBelow, ValueVariant::Point(Point2F::new(0.0, 3.5))),

	(StyleName::ChordSymbolBPosAbove, ValueVariant::Point(Point2F::new(0.0, -5.0))),
	(StyleName::ChordSymbolBPosBelow, ValueVariant::Point(Point2F::new(0.0, 3.5))),

	(StyleName::RomanNumeralPosAbove, ValueVariant::Point(Point2F::new(0.0, -2.5))),
	(StyleName::RomanNumeralPosBelow, ValueVariant::Point(Point2F::new(0.0, 3.5))),

	(StyleName::NashvilleNumberPosAbove, ValueVariant::Point(Point2F::new(0.0, -2.5))),
	(StyleName::NashvilleNumberPosBelow, ValueVariant::Point(Point2F::new(0.0, 3.5))),

	(StyleName::ChordSymbolAFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::ChordSymbolAFontSize, ValueVariant::Float(12.0)),
	(StyleName::ChordSymbolAFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::ChordSymbolAFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::ChordSymbolAColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::ChordSymbolAAlign, ValueVariant::UInt((Align::LEFT | Align::BASELINE).into())),
	(StyleName::ChordSymbolAFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::ChordSymbolAFramePadding, ValueVariant::Float(0.2)),
	(StyleName::ChordSymbolAFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::ChordSymbolAFrameRound, ValueVariant::Int(0)),
	(StyleName::ChordSymbolAFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::ChordSymbolAFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::ChordSymbolBFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::ChordSymbolBFontSize, ValueVariant::Float(12.0)),
	(StyleName::ChordSymbolBFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::ChordSymbolBFontStyle, ValueVariant::UInt(FontStyle::ITALIC.into())),
	(StyleName::ChordSymbolBColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::ChordSymbolBAlign, ValueVariant::UInt((Align::LEFT | Align::BASELINE).into())),
	(StyleName::ChordSymbolBFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::ChordSymbolBFramePadding, ValueVariant::Float(0.2)),
	(StyleName::ChordSymbolBFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::ChordSymbolBFrameRound, ValueVariant::Int(0)),
	(StyleName::ChordSymbolBFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::ChordSymbolBFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::RomanNumeralFontFace, ValueVariant::String("Campania".to_string())),
	(StyleName::RomanNumeralFontSize, ValueVariant::Float(12.0)),
	(StyleName::RomanNumeralFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::RomanNumeralFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::RomanNumeralColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::RomanNumeralAlign, ValueVariant::UInt((Align::LEFT | Align::BASELINE).into())),
	(StyleName::RomanNumeralFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::RomanNumeralFramePadding, ValueVariant::Float(0.2)),
	(StyleName::RomanNumeralFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::RomanNumeralFrameRound, ValueVariant::Int(0)),
	(StyleName::RomanNumeralFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::RomanNumeralFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::NashvilleNumberFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::NashvilleNumberFontSize, ValueVariant::Float(12.0)),
	(StyleName::NashvilleNumberFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::NashvilleNumberFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::NashvilleNumberColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::NashvilleNumberAlign, ValueVariant::UInt((Align::LEFT | Align::BASELINE).into())),
	(StyleName::NashvilleNumberFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::NashvilleNumberFramePadding, ValueVariant::Float(0.2)),
	(StyleName::NashvilleNumberFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::NashvilleNumberFrameRound, ValueVariant::Int(0)),
	(StyleName::NashvilleNumberFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::NashvilleNumberFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::CapoPosition, ValueVariant::Int(0)),
	(StyleName::FretNumMag, ValueVariant::Float(2.0)),
	(StyleName::FretNumPos, ValueVariant::Int(0)),
	(StyleName::FretY, ValueVariant::Spatium(2.0)),
	(StyleName::FretMinDistance, ValueVariant::Spatium(0.5)),
	(StyleName::FretMag, ValueVariant::Float(1.0)),
	(StyleName::FretPlacement, ValueVariant::UInt(Placement::Above as u32)),
	(StyleName::FretStrings, ValueVariant::Int(6)),
	(StyleName::FretFrets, ValueVariant::Int(5)),
	(StyleName::FretNut, ValueVariant::Bool(true)),
	(StyleName::FretDotSize, ValueVariant::Float(1.0)),
	(StyleName::FretStringSpacing, ValueVariant::Spatium(0.7)),
	(StyleName::FretFretSpacing, ValueVariant::Spatium(0.8)),

	(StyleName::ShowPageNumber, ValueVariant::Bool(true)),
	(StyleName::ShowPageNumberOne, ValueVariant::Bool(false)),
	(StyleName::PageNumberOddEven, ValueVariant::Bool(true)),
	(StyleName::ShowMeasureNumber, ValueVariant::Bool(true)),
	(StyleName::ShowMeasureNumberOne, ValueVariant::Bool(false)),
	(StyleName::MeasureNumberInterval, ValueVariant::Int(5)),
	(StyleName::MeasureNumberSystem, ValueVariant::Bool(true)),
	(StyleName::MeasureNumberAllStaffs, ValueVariant::Bool(false)),
	(StyleName::SmallNoteMag, ValueVariant::Float(0.7)),
	(StyleName::GraceNoteMag, ValueVariant::Float(0.7)),
	(StyleName::SmallStaffMag, ValueVariant::Float(0.7)),
	(StyleName::SmallClefMag, ValueVariant::Float(0.8)),

	(StyleName::GenClef, ValueVariant::Bool(true)),
	(StyleName::GenKeysig, ValueVariant::Bool(true)),
	(StyleName::GenCourtesyTimesig, ValueVariant::Bool(true)),
	(StyleName::GenCourtesyKeysig, ValueVariant::Bool(true)),
	(StyleName::GenCourtesyClef, ValueVariant::Bool(true)),
	(StyleName::SwingRatio, ValueVariant::Int(60)),
	(StyleName::SwingUnit, ValueVariant::String("".to_string())),
	(StyleName::UseStandardNoteNames, ValueVariant::Bool(true)),
	(StyleName::UseGermanNoteNames, ValueVariant::Bool(false)),
	(StyleName::UseFullGermanNoteNames, ValueVariant::Bool(false)),

	(StyleName::UseSolfeggioNoteNames, ValueVariant::Bool(false)),
	(StyleName::UseFrenchNoteNames, ValueVariant::Bool(false)),
	(StyleName::AutomaticCapitalization, ValueVariant::Bool(true)),
	(StyleName::LowerCaseMinorChords, ValueVariant::Bool(false)),
	(StyleName::LowerCaseBassNotes, ValueVariant::Bool(false)),
	(StyleName::AllCapsNoteNames, ValueVariant::Bool(false)),
	(StyleName::ChordStyle, ValueVariant::String("std".to_string())),
	(StyleName::ChordsXmlFile, ValueVariant::Bool(false)),
	(StyleName::ChordDescriptionFile, ValueVariant::String("chords_std.xml".to_string())),
	(StyleName::ChordExtensionMag, ValueVariant::Float(1.0)),
	(StyleName::ChordExtensionAdjust, ValueVariant::Float(0.0)),
	(StyleName::ChordModifierMag, ValueVariant::Float(1.0)),
	(StyleName::ChordModifierAdjust, ValueVariant::Float(0.0)),
	(StyleName::ConcertPitch, ValueVariant::Bool(false)),

	(StyleName::CreateMultiMeasureRests, ValueVariant::Bool(false)),
	(StyleName::MinEmptyMeasures, ValueVariant::Int(2)),
	(StyleName::MinMMRestWidth, ValueVariant::Spatium(4.)),
	(StyleName::HideEmptyStaves, ValueVariant::Bool(false)),
	(StyleName::DontHideStavesInFirstSystem, ValueVariant::Bool(true)),
	(StyleName::HideInstrumentNameIfOneInstrument, ValueVariant::Bool(true)),
	(StyleName::GateTime, ValueVariant::Float(100.)),
	(StyleName::TenutoGateTime, ValueVariant::Float(100.)),
	(StyleName::StaccatoGateTime, ValueVariant::Int(50)),
	(StyleName::SlurGateTime, ValueVariant::Float(100.)),

	(StyleName::ArpeggioNoteDistance, ValueVariant::Spatium(0.5)),
	(StyleName::ArpeggioLineWidth, ValueVariant::Spatium(0.18)),
	(StyleName::ArpeggioHookLen, ValueVariant::Spatium(0.8)),
	(StyleName::ArpeggioHiddenInStdIfTab, ValueVariant::Bool(false)),
	(StyleName::SlurEndWidth, ValueVariant::Spatium(0.07)),
	(StyleName::SlurMidWidth, ValueVariant::Spatium(0.15)),
	(StyleName::SlurDottedWidth, ValueVariant::Spatium(0.10)),
	(StyleName::MinTieLength, ValueVariant::Spatium(1.0)),
	(StyleName::SlurMinDistance, ValueVariant::Spatium(0.5)),
	(StyleName::SectionPause, ValueVariant::Float(3.0)),
	(StyleName::MusicalSymbolFont, ValueVariant::String("Emmentaler".to_string())),
	(StyleName::MusicalTextFont, ValueVariant::String("MScore Text".to_string())),

	(StyleName::ShowHeader, ValueVariant::Bool(false)),
	(StyleName::HeaderFirstPage, ValueVariant::Bool(false)),
	(StyleName::HeaderOddEven, ValueVariant::Bool(true)),
	(StyleName::EvenHeaderL, ValueVariant::String("".to_string())),
	(StyleName::EvenHeaderC, ValueVariant::String("".to_string())),
	(StyleName::EvenHeaderR, ValueVariant::String("".to_string())),
	(StyleName::OddHeaderL, ValueVariant::String("".to_string())),
	(StyleName::OddHeaderC, ValueVariant::String("".to_string())),
	(StyleName::OddHeaderR, ValueVariant::String("".to_string())),
	(StyleName::ShowFooter, ValueVariant::Bool(true)),

	(StyleName::FooterFirstPage, ValueVariant::Bool(true)),
	(StyleName::FooterOddEven, ValueVariant::Bool(true)),
	(StyleName::EvenFooterL, ValueVariant::String("$p".to_string())),
	(StyleName::EvenFooterC, ValueVariant::String("$:copyright:".to_string())),
	(StyleName::EvenFooterR, ValueVariant::String("".to_string())),
	(StyleName::OddFooterL, ValueVariant::String("".to_string())),
	(StyleName::OddFooterC, ValueVariant::String("$:copyright:".to_string())),
	(StyleName::OddFooterR, ValueVariant::String("$p".to_string())),

	(StyleName::VoltaPosAbove, ValueVariant::Point(Point2F::new(0.0, -3.0))),
	(StyleName::VoltaHook, ValueVariant::Spatium(1.9)),
	(StyleName::VoltaLineWidth, ValueVariant::Spatium(0.1)),
	(StyleName::VoltaLineStyle, ValueVariant::UInt(LineStyle::SolidLine as u32)),
	(StyleName::VoltaFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::VoltaFontSize, ValueVariant::Float(11.0)),
	(StyleName::VoltaFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::VoltaFontStyle, ValueVariant::UInt(FontStyle::BOLD.into())),
	(StyleName::VoltaColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::VoltaAlign, ValueVariant::UInt((Align::LEFT | Align::BASELINE).into())),
	(StyleName::VoltaOffset, ValueVariant::Point(Point2F::new(0.5, 1.9))),
	(StyleName::VoltaFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::VoltaFramePadding, ValueVariant::Float(0.2)),
	(StyleName::VoltaFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::VoltaFrameRound, ValueVariant::Int(0)),
	(StyleName::VoltaFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::VoltaFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::Ottava8VAPlacement, ValueVariant::UInt(Placement::Above as u32)),
	(StyleName::Ottava8VBPlacement, ValueVariant::UInt(Placement::Below as u32)),
	(StyleName::Ottava15MAPlacement, ValueVariant::UInt(Placement::Above as u32)),
	(StyleName::Ottava15MBPlacement, ValueVariant::UInt(Placement::Below as u32)),
	(StyleName::Ottava22MAPlacement, ValueVariant::UInt(Placement::Above as u32)),
	(StyleName::Ottava22MBPlacement, ValueVariant::UInt(Placement::Below as u32)),

	(StyleName::Ottava8VAText, ValueVariant::String("<sym>ottavaAlta</sym>".to_string())),
	(StyleName::Ottava8VAContinueText, ValueVariant::String("<sym>ottavaAlta</sym>".to_string())),
	(StyleName::Ottava8VBText, ValueVariant::String("<sym>ottavaBassa</sym>".to_string())),
	(StyleName::Ottava8VBContinueText, ValueVariant::String("<sym>ottavaBassa</sym>".to_string())),
	(StyleName::Ottava15MAText, ValueVariant::String("<sym>quindicesimaAlta</sym>".to_string())),
	(StyleName::Ottava15MAContinueText, ValueVariant::String("<sym>quindicesimaAlta</sym>".to_string())),
	(StyleName::Ottava15MBText, ValueVariant::String("<sym>quindicesimaBassa</sym>".to_string())),
	(StyleName::Ottava15MBContinueText, ValueVariant::String("<sym>quindicesimaBassa</sym>".to_string())),
	(StyleName::Ottava22MAText, ValueVariant::String("<sym>ventiduesimaAlta</sym>".to_string())),
	(StyleName::Ottava22MAContinueText, ValueVariant::String("<sym>ventiduesimaAlta</sym>".to_string())),
	(StyleName::Ottava22MBText, ValueVariant::String("<sym>ventiduesimaBassa</sym>".to_string())),
	(StyleName::Ottava22MBContinueText, ValueVariant::String("<sym>ventiduesimaBassa</sym>".to_string())),

	(StyleName::Ottava8VAnoText, ValueVariant::String("<sym>ottava</sym>".to_string())),
	(StyleName::Ottava8VAnoContinueText, ValueVariant::String("<sym>ottava</sym>".to_string())),
	(StyleName::Ottava8VBnoText, ValueVariant::String("<sym>ottava</sym>".to_string())),
	(StyleName::Ottava8VBnoContinueText, ValueVariant::String("<sym>ottava</sym>".to_string())),
	(StyleName::Ottava15MAnoText, ValueVariant::String("<sym>quindicesima</sym>".to_string())),
	(StyleName::Ottava15MAnoContinueText, ValueVariant::String("<sym>quindicesima</sym>".to_string())),
	(StyleName::Ottava15MBnoText, ValueVariant::String("<sym>quindicesima</sym>".to_string())),
	(StyleName::Ottava15MBnoContinueText, ValueVariant::String("<sym>quindicesima</sym>".to_string())),
	(StyleName::Ottava22MAnoText, ValueVariant::String("<sym>ventiduesima</sym>".to_string())),
	(StyleName::Ottava22MAnoContinueText, ValueVariant::String("<sym>ventiduesima</sym>".to_string())),
	(StyleName::Ottava22MBnoText, ValueVariant::String("<sym>ventiduesima</sym>".to_string())),
	(StyleName::Ottava22MBnoContinueText, ValueVariant::String("<sym>ventiduesima</sym>".to_string())),

	(StyleName::OttavaPosAbove, ValueVariant::Point(Point2F::new(0.0, -3.0))),
	(StyleName::OttavaPosBelow, ValueVariant::Point(Point2F::new(0.0, 3.0))),
	(StyleName::OttavaHookAbove, ValueVariant::Spatium(1.9)),
	(StyleName::OttavaHookBelow, ValueVariant::Spatium(-1.9)),
	(StyleName::OttavaLineWidth, ValueVariant::Spatium(0.1)),
	(StyleName::OttavaLineStyle, ValueVariant::UInt(LineStyle::DashLine as u32)),
	(StyleName::OttavaNumbersOnly, ValueVariant::Bool(true)),
	(StyleName::OttavaFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::OttavaFontSize, ValueVariant::Float(12.0)),
	(StyleName::OttavaFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::OttavaFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::OttavaColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::OttavaTextAlign, ValueVariant::UInt((Align::LEFT | Align::VCENTER).into())),
	(StyleName::OttavaFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::OttavaFramePadding, ValueVariant::Float(0.2)),
	(StyleName::OttavaFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::OttavaFrameRound, ValueVariant::Int(0)),
	(StyleName::OttavaFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::OttavaFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::TabClef, ValueVariant::UInt(ClefType::Tab as u32)),

	(StyleName::TremoloWidth, ValueVariant::Spatium(1.2)),  // tremolo stroke width: notehead width
	(StyleName::TremoloBoxHeight, ValueVariant::Spatium(0.65)),
	(StyleName::TremoloStrokeWidth, ValueVariant::Spatium(0.5)),  // was 0.35
	(StyleName::TremoloDistance, ValueVariant::Spatium(0.8)),
	(StyleName::TremoloPlacement, ValueVariant::UInt(TremoloPlacement::Default as u32)),

	(StyleName::LinearStretch, ValueVariant::Float(1.5)),
	(StyleName::CrossMeasureValues, ValueVariant::Bool(false)),
	(StyleName::KeySigNaturals, ValueVariant::UInt(KeySigNatural::None as u32)),

	(StyleName::TupletMaxSlope, ValueVariant::Float(0.5)),
	(StyleName::TupletOufOfStaff, ValueVariant::Bool(true)),
	(StyleName::TupletVHeadDistance, ValueVariant::Spatium(0.5)),
	(StyleName::TupletVStemDistance, ValueVariant::Spatium(0.25)),
	(StyleName::TupletStemLeftDistance, ValueVariant::Spatium(0.5)),
	(StyleName::TupletStemRightDistance, ValueVariant::Spatium(0.5)),
	(StyleName::TupletNoteLeftDistance, ValueVariant::Spatium(0.0)),
	(StyleName::TupletNoteRightDistance, ValueVariant::Spatium(0.0)),
	(StyleName::TupletBracketWidth, ValueVariant::Spatium(0.1)),
	(StyleName::TupletDirection, ValueVariant::UInt(DirectionV::Auto as u32)),
	(StyleName::TupletNumberType, ValueVariant::UInt(TupletNumberType::ShowNumber as u32)),
	(StyleName::TupletBracketType, ValueVariant::UInt(TupletBracketType::AutoBracket as u32)),
	(StyleName::TupletFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::TupletFontSize, ValueVariant::Float(10.0)),
	(StyleName::TupletFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::TupletFontStyle, ValueVariant::UInt(FontStyle::ITALIC.into())),
	(StyleName::TupletColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::TupletAlign, ValueVariant::UInt((Align::CENTER).into())),
	(StyleName::TupletBracketHookHeight, ValueVariant::Spatium(1.0)),
	(StyleName::TupletOffset, ValueVariant::Point(Point2F::default())),
	(StyleName::TupletFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::TupletFramePadding, ValueVariant::Float(0.2)),
	(StyleName::TupletFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::TupletFrameRound, ValueVariant::Int(0)),
	(StyleName::TupletFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::TupletFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::BarreLineWidth, ValueVariant::Float(1.0)),
	(StyleName::ScaleBarlines, ValueVariant::Bool(true)),
	(StyleName::BarGraceDistance, ValueVariant::Spatium(0.6)),
	(StyleName::MinVerticalDistance, ValueVariant::Spatium(0.5)),
	(StyleName::OrnamentStyle, ValueVariant::UInt(OrnamentStyle::Default as u32)),
	(StyleName::Spatium, ValueVariant::Float(constants::SPATIUM20)),

	(StyleName::AutoplaceHairpinDynamicsDistance, ValueVariant::Spatium(0.5)),

	(StyleName::DynamicsPlacement, ValueVariant::UInt(Placement::Below as u32)),
	(StyleName::DynamicsPosAbove, ValueVariant::Point(Point2F::new(0.0, -3.0))),
	(StyleName::DynamicsPosBelow, ValueVariant::Point(Point2F::new(0.0, 4.0))),

	(StyleName::DynamicsMinDistance, ValueVariant::Spatium(0.5)),
	(StyleName::AutoplaceVerticalAlignRange, ValueVariant::UInt(VerticalAlignRange::System as u32)),

	(StyleName::TextLinePlacement, ValueVariant::UInt(Placement::Above as u32)),
	(StyleName::TextLinePosAbove, ValueVariant::Point(Point2F::new(0.0, -1.0))),
	(StyleName::TextLinePosBelow, ValueVariant::Point(Point2F::new(0.0, 1.0))),
	(StyleName::TextLineFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::TextLineFramePadding, ValueVariant::Float(0.2)),
	(StyleName::TextLineFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::TextLineFrameRound, ValueVariant::Int(0)),
	(StyleName::TextLineFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::TextLineFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::TremoloBarLineWidth, ValueVariant::Spatium(0.12)),
	(StyleName::JumpPosAbove, ValueVariant::Point(Point2F::new(0.0, -2.0))),
	(StyleName::MarkerPosAbove, ValueVariant::Point(Point2F::new(0.0, -2.0))),

	(StyleName::DefaultFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::DefaultFontSize, ValueVariant::Float(10.0)),
	(StyleName::DefaultFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::DefaultFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::DefaultColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::DefaultAlign, ValueVariant::UInt((Align::LEFT).into())),
	(StyleName::DefaultFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::DefaultFramePadding, ValueVariant::Float(0.2)),
	(StyleName::DefaultFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::DefaultFrameRound, ValueVariant::Int(0)),
	(StyleName::DefaultFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::DefaultFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),
	(StyleName::DefaultOffset, ValueVariant::Point(Point2F::default())),
	(StyleName::DefaultOffsetType, ValueVariant::UInt(OffsetType::Spatium as u32)),
	(StyleName::DefaultSystemFlag, ValueVariant::Bool(false)),
	(StyleName::DefaultText, ValueVariant::String("".to_string())),

	(StyleName::TitleFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::TitleFontSize, ValueVariant::Float(24.0)),
	(StyleName::TitleFontSpatiumDependent, ValueVariant::Bool(false)),
	(StyleName::TitleFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::TitleColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::TitleAlign, ValueVariant::UInt((Align::HCENTER | Align::TOP).into())),
	(StyleName::TitleOffset, ValueVariant::Point(Point2F::default())),
	(StyleName::TitleOffsetType, ValueVariant::UInt(OffsetType::Abs as u32)),
	(StyleName::TitleFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::TitleFramePadding, ValueVariant::Float(0.2)),
	(StyleName::TitleFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::TitleFrameRound, ValueVariant::Int(0)),
	(StyleName::TitleFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::TitleFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::SubTitleFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::SubTitleFontSize, ValueVariant::Float(14.0)),
	(StyleName::SubTitleFontSpatiumDependent, ValueVariant::Bool(false)),
	(StyleName::SubTitleFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::SubTitleColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::SubTitleAlign, ValueVariant::UInt((Align::HCENTER | Align::TOP).into())),
	(StyleName::SubTitleOffset, ValueVariant::Point(Point2F::new(0.0, 10.0))),
	(StyleName::SubTitleOffsetType, ValueVariant::UInt(OffsetType::Abs as u32)),
	(StyleName::SubTitleFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::SubTitleFramePadding, ValueVariant::Float(0.2)),
	(StyleName::SubTitleFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::SubTitleFrameRound, ValueVariant::Int(0)),
	(StyleName::SubTitleFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::SubTitleFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::ComposerFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::ComposerFontSize, ValueVariant::Float(12.0)),
	(StyleName::ComposerFontSpatiumDependent, ValueVariant::Bool(false)),
	(StyleName::ComposerFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::ComposerColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::ComposerAlign, ValueVariant::UInt((Align::RIGHT | Align::BOTTOM).into())),
	(StyleName::ComposerOffset, ValueVariant::Point(Point2F::default())),
	(StyleName::ComposerOffsetType, ValueVariant::UInt(OffsetType::Abs as u32)),
	(StyleName::ComposerFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::ComposerFramePadding, ValueVariant::Float(0.2)),
	(StyleName::ComposerFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::ComposerFrameRound, ValueVariant::Int(0)),
	(StyleName::ComposerFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::ComposerFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::LyricistFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::LyricistFontSize, ValueVariant::Float(12.0)),
	(StyleName::LyricistFontSpatiumDependent, ValueVariant::Bool(false)),
	(StyleName::LyricistFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::LyricistColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::LyricistAlign, ValueVariant::UInt((Align::LEFT | Align::BOTTOM).into())),
	(StyleName::LyricistOffset, ValueVariant::Point(Point2F::default())),
	(StyleName::LyricistOffsetType, ValueVariant::UInt(OffsetType::Abs as u32)),
	(StyleName::LyricistFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::LyricistFramePadding, ValueVariant::Float(0.2)),
	(StyleName::LyricistFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::LyricistFrameRound, ValueVariant::Int(0)),
	(StyleName::LyricistFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::LyricistFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::FingeringFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::FingeringFontSize, ValueVariant::Float(8.0)),
	(StyleName::FingeringFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::FingeringFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::FingeringColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::FingeringAlign, ValueVariant::UInt((Align::CENTER).into())),
	(StyleName::FingeringFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::FingeringFramePadding, ValueVariant::Float(0.2)),
	(StyleName::FingeringFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::FingeringFrameRound, ValueVariant::Int(0)),
	(StyleName::FingeringFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::FingeringFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),
	(StyleName::FingeringOffset, ValueVariant::Point(Point2F::default())),

	(StyleName::LhGuitarFingeringFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::LhGuitarFingeringFontSize, ValueVariant::Float(8.0)),
	(StyleName::LhGuitarFingeringFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::LhGuitarFingeringFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::LhGuitarFingeringColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::LhGuitarFingeringAlign, ValueVariant::UInt((Align::RIGHT | Align::VCENTER).into())),
	(StyleName::LhGuitarFingeringFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::LhGuitarFingeringFramePadding, ValueVariant::Float(0.2)),
	(StyleName::LhGuitarFingeringFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::LhGuitarFingeringFrameRound, ValueVariant::Int(0)),
	(StyleName::LhGuitarFingeringFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::LhGuitarFingeringFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),
	(StyleName::LhGuitarFingeringOffset, ValueVariant::Point(Point2F::new(-0.5, 0.0))),

	(StyleName::RhGuitarFingeringFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::RhGuitarFingeringFontSize, ValueVariant::Float(8.0)),
	(StyleName::RhGuitarFingeringFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::RhGuitarFingeringFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::RhGuitarFingeringColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::RhGuitarFingeringAlign, ValueVariant::UInt((Align::CENTER).into())),
	(StyleName::RhGuitarFingeringFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::RhGuitarFingeringFramePadding, ValueVariant::Float(0.2)),
	(StyleName::RhGuitarFingeringFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::RhGuitarFingeringFrameRound, ValueVariant::Int(0)),
	(StyleName::RhGuitarFingeringFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::RhGuitarFingeringFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),
	(StyleName::RhGuitarFingeringOffset, ValueVariant::Point(Point2F::default())),

	(StyleName::StringNumberFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::StringNumberFontSize, ValueVariant::Float(8.0)),
	(StyleName::StringNumberFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::StringNumberFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::StringNumberColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::StringNumberAlign, ValueVariant::UInt((Align::CENTER).into())),
	(StyleName::StringNumberFrameType, ValueVariant::UInt(FrameType::Circle as u32)),
	(StyleName::StringNumberFramePadding, ValueVariant::Float(0.2)),
	(StyleName::StringNumberFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::StringNumberFrameRound, ValueVariant::Int(0)),
	(StyleName::StringNumberFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::StringNumberFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),
	(StyleName::StringNumberOffset, ValueVariant::Point(Point2F::new(0.0, 0.0))),

	(StyleName::LongInstrumentFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::LongInstrumentFontSize, ValueVariant::Float(12.0)),
	(StyleName::LongInstrumentFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::LongInstrumentFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::LongInstrumentColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::LongInstrumentAlign, ValueVariant::UInt((Align::RIGHT | Align::VCENTER).into())),
	(StyleName::LongInstrumentOffset, ValueVariant::Point(Point2F::new(0.0, 0.0))),
	(StyleName::LongInstrumentFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::LongInstrumentFramePadding, ValueVariant::Float(0.2)),
	(StyleName::LongInstrumentFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::LongInstrumentFrameRound, ValueVariant::Int(0)),
	(StyleName::LongInstrumentFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::LongInstrumentFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::ShortInstrumentFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::ShortInstrumentFontSize, ValueVariant::Float(12.0)),
	(StyleName::ShortInstrumentFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::ShortInstrumentFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::ShortInstrumentColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::ShortInstrumentAlign, ValueVariant::UInt((Align::RIGHT | Align::VCENTER).into())),
	(StyleName::ShortInstrumentOffset, ValueVariant::Point(Point2F::new(0.0, 0.0))),
	(StyleName::ShortInstrumentFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::ShortInstrumentFramePadding, ValueVariant::Float(0.2)),
	(StyleName::ShortInstrumentFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::ShortInstrumentFrameRound, ValueVariant::Int(0)),
	(StyleName::ShortInstrumentFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::ShortInstrumentFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::PartInstrumentFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::PartInstrumentFontSize, ValueVariant::Float(18.0)),
	(StyleName::PartInstrumentFontSpatiumDependent, ValueVariant::Bool(false)),
	(StyleName::PartInstrumentFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::PartInstrumentColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::PartInstrumentAlign, ValueVariant::UInt((Align::LEFT).into())),
	(StyleName::PartInstrumentOffset, ValueVariant::Point(Point2F::default())),
	(StyleName::PartInstrumentFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::PartInstrumentFramePadding, ValueVariant::Float(0.2)),
	(StyleName::PartInstrumentFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::PartInstrumentFrameRound, ValueVariant::Int(0)),
	(StyleName::PartInstrumentFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::PartInstrumentFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::DynamicsFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::DynamicsFontSize, ValueVariant::Float(12.0)),
	(StyleName::DynamicsFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::DynamicsFontStyle, ValueVariant::UInt(FontStyle::ITALIC.into())),
	(StyleName::DynamicsColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::DynamicsAlign, ValueVariant::UInt((Align::HCENTER | Align::BASELINE).into())),
	(StyleName::DynamicsFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::DynamicsFramePadding, ValueVariant::Float(0.2)),
	(StyleName::DynamicsFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::DynamicsFrameRound, ValueVariant::Int(0)),
	(StyleName::DynamicsFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::DynamicsFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::ExpressionFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::ExpressionFontSize, ValueVariant::Float(11.0)),
	(StyleName::ExpressionFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::ExpressionFontStyle, ValueVariant::UInt(FontStyle::ITALIC.into())),
	(StyleName::ExpressionColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::ExpressionAlign, ValueVariant::UInt((Align::LEFT | Align::BASELINE).into())),
	(StyleName::ExpressionPlacement, ValueVariant::UInt(Placement::Below as u32)),
	(StyleName::ExpressionOffset, ValueVariant::Point(Point2F::new(0.0, 3.5))),
	(StyleName::ExpressionFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::ExpressionFramePadding, ValueVariant::Float(0.2)),
	(StyleName::ExpressionFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::ExpressionFrameRound, ValueVariant::Int(0)),
	(StyleName::ExpressionFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::ExpressionFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::TempoFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::TempoFontSize, ValueVariant::Float(12.0)),
	(StyleName::TempoFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::TempoFontStyle, ValueVariant::UInt(FontStyle::BOLD.into())),
	(StyleName::TempoColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::TempoAlign, ValueVariant::UInt((Align::LEFT | Align::BASELINE).into())),
	(StyleName::TempoSystemFlag, ValueVariant::Bool(true)),
	(StyleName::TempoPlacement, ValueVariant::UInt(Placement::Above as u32)),
	(StyleName::TempoPosAbove, ValueVariant::Point(Point2F::new(0.0, -2.0))),
	(StyleName::TempoPosBelow, ValueVariant::Point(Point2F::new(0.0, 3.0))),
	(StyleName::TempoMinDistance, ValueVariant::Spatium(0.5)),
	(StyleName::TempoFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::TempoFramePadding, ValueVariant::Float(0.2)),
	(StyleName::TempoFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::TempoFrameRound, ValueVariant::Int(0)),
	(StyleName::TempoFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::TempoFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::MetronomeFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::MetronomeFontSize, ValueVariant::Float(12.0)),
	(StyleName::MetronomeFontSpatiumDependent, ValueVariant::Bool(false)),
	(StyleName::MetronomeFontStyle, ValueVariant::UInt(FontStyle::BOLD.into())),
	(StyleName::MetronomeColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::MetronomePlacement, ValueVariant::UInt(Placement::Above as u32)),
	(StyleName::MetronomeAlign, ValueVariant::UInt((Align::LEFT).into())),
	(StyleName::MetronomeOffset, ValueVariant::Point(Point2F::default())),
	(StyleName::MetronomeFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::MetronomeFramePadding, ValueVariant::Float(0.2)),
	(StyleName::MetronomeFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::MetronomeFrameRound, ValueVariant::Int(0)),
	(StyleName::MetronomeFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::MetronomeFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::MeasureNumberFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::MeasureNumberFontSize, ValueVariant::Float(8.0)),
	(StyleName::MeasureNumberFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::MeasureNumberFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::MeasureNumberColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::MeasureNumberOffset, ValueVariant::Point(Point2F::new(0.0, -2.0))),
	(StyleName::MeasureNumberOffsetType, ValueVariant::UInt(OffsetType::Spatium as u32)),
	(StyleName::MeasureNumberAlign, ValueVariant::UInt((Align::HCENTER | Align::BASELINE).into())),
	(StyleName::MeasureNumberFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::MeasureNumberFramePadding, ValueVariant::Float(0.2)),
	(StyleName::MeasureNumberFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::MeasureNumberFrameRound, ValueVariant::Int(0)),
	(StyleName::MeasureNumberFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::MeasureNumberFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::TranslatorFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::TranslatorFontSize, ValueVariant::Float(11.0)),
	(StyleName::TranslatorFontSpatiumDependent, ValueVariant::Bool(false)),
	(StyleName::TranslatorFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::TranslatorColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::TranslatorAlign, ValueVariant::UInt((Align::LEFT).into())),
	(StyleName::TranslatorOffset, ValueVariant::Point(Point2F::default())),
	(StyleName::TranslatorFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::TranslatorFramePadding, ValueVariant::Float(0.2)),
	(StyleName::TranslatorFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::TranslatorFrameRound, ValueVariant::Int(0)),
	(StyleName::TranslatorFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::TranslatorFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::SystemTextFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::SystemTextFontSize, ValueVariant::Float(10.0)),
	(StyleName::SystemTextFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::SystemTextFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::SystemTextColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::SystemTextAlign, ValueVariant::UInt((Align::LEFT | Align::BASELINE).into())),
	(StyleName::SystemTextOffsetType, ValueVariant::UInt(OffsetType::Spatium as u32)),
	(StyleName::SystemTextPlacement, ValueVariant::UInt(Placement::Above as u32)),
	(StyleName::SystemTextPosAbove, ValueVariant::Point(Point2F::new(0.0, -2.0))),
	(StyleName::SystemTextPosBelow, ValueVariant::Point(Point2F::new(0.0, 3.5))),
	(StyleName::SystemTextMinDistance, ValueVariant::Spatium(0.5)),
	(StyleName::SystemTextFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::SystemTextFramePadding, ValueVariant::Float(0.2)),
	(StyleName::SystemTextFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::SystemTextFrameRound, ValueVariant::Int(0)),
	(StyleName::SystemTextFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::SystemTextFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::StaffTextFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::StaffTextFontSize, ValueVariant::Float(10.0)),
	(StyleName::StaffTextFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::StaffTextFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::StaffTextColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::StaffTextAlign, ValueVariant::UInt((Align::LEFT | Align::BASELINE).into())),
	(StyleName::StaffTextOffsetType, ValueVariant::UInt(OffsetType::Spatium as u32)),
	(StyleName::StaffTextPlacement, ValueVariant::UInt(Placement::Above as u32)),
	(StyleName::StaffTextPosAbove, ValueVariant::Point(Point2F::new(0.0, -2.0))),
	(StyleName::StaffTextPosBelow, ValueVariant::Point(Point2F::new(0.0, 3.5))),
	(StyleName::StaffTextMinDistance, ValueVariant::Spatium(0.5)),
	(StyleName::StaffTextFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::StaffTextFramePadding, ValueVariant::Float(0.2)),
	(StyleName::StaffTextFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::StaffTextFrameRound, ValueVariant::Int(0)),
	(StyleName::StaffTextFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::StaffTextFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::RehearsalMarkFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::RehearsalMarkFontSize, ValueVariant::Float(14.0)),
	(StyleName::RehearsalMarkFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::RehearsalMarkFontStyle, ValueVariant::UInt(FontStyle::BOLD.into())),
	(StyleName::RehearsalMarkColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::RehearsalMarkAlign, ValueVariant::UInt((Align::HCENTER | Align::BASELINE).into())),
	(StyleName::RehearsalMarkFrameType, ValueVariant::UInt(FrameType::Square as u32)),
	(StyleName::RehearsalMarkFramePadding, ValueVariant::Float(0.5)),
	(StyleName::RehearsalMarkFrameWidth, ValueVariant::Float(0.2)),
	(StyleName::RehearsalMarkFrameRound, ValueVariant::Int(20)),
	(StyleName::RehearsalMarkFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::RehearsalMarkFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),
	(StyleName::RehearsalMarkPlacement, ValueVariant::UInt(Placement::Above as u32)),
	(StyleName::RehearsalMarkPosAbove, ValueVariant::Point(Point2F::new(0.0, -3.0))),
	(StyleName::RehearsalMarkPosBelow, ValueVariant::Point(Point2F::new(0.0, 4.0))),
	(StyleName::RehearsalMarkMinDistance, ValueVariant::Spatium(0.5)),

	(StyleName::RepeatLeftFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::RepeatLeftFontSize, ValueVariant::Float(20.0)),
	(StyleName::RepeatLeftFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::RepeatLeftFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::RepeatLeftColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::RepeatLeftAlign, ValueVariant::UInt((Align::LEFT | Align::BASELINE).into())),
	(StyleName::RepeatLeftPlacement, ValueVariant::UInt(Placement::Above as u32)),
	(StyleName::RepeatLeftFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::RepeatLeftFramePadding, ValueVariant::Float(0.2)),
	(StyleName::RepeatLeftFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::RepeatLeftFrameRound, ValueVariant::Int(0)),
	(StyleName::RepeatLeftFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::RepeatLeftFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::RepeatRightFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::RepeatRightFontSize, ValueVariant::Float(12.0)),
	(StyleName::RepeatRightFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::RepeatRightFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::RepeatRightColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::RepeatRightAlign, ValueVariant::UInt((Align::RIGHT | Align::BASELINE).into())),
	(StyleName::RepeatRightPlacement, ValueVariant::UInt(Placement::Above as u32)),
	(StyleName::RepeatRightFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::RepeatRightFramePadding, ValueVariant::Float(0.2)),
	(StyleName::RepeatRightFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::RepeatRightFrameRound, ValueVariant::Int(0)),
	(StyleName::RepeatRightFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::RepeatRightFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::FrameFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::FrameFontSize, ValueVariant::Float(12.0)),
	(StyleName::FrameFontSpatiumDependent, ValueVariant::Bool(false)),
	(StyleName::FrameFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::FrameColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::FrameAlign, ValueVariant::UInt((Align::LEFT).into())),
	(StyleName::FrameOffset, ValueVariant::Point(Point2F::default())),
	(StyleName::FrameFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::FrameFramePadding, ValueVariant::Float(0.2)),
	(StyleName::FrameFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::FrameFrameRound, ValueVariant::Int(0)),
	(StyleName::FrameFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::FrameFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::TextLineFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::TextLineFontSize, ValueVariant::Float(12.0)),
	(StyleName::TextLineFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::TextLineFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::TextLineColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::TextLineTextAlign, ValueVariant::UInt((Align::LEFT | Align::VCENTER).into())),

	(StyleName::GlissandoFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::GlissandoFontSize, ValueVariant::Float(8.0)),
	(StyleName::GlissandoFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::GlissandoFontStyle, ValueVariant::UInt(FontStyle::ITALIC.into())),
	(StyleName::GlissandoColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::GlissandoAlign, ValueVariant::UInt((Align::LEFT).into())),
	(StyleName::GlissandoOffset, ValueVariant::Point(Point2F::default())),
	(StyleName::GlissandoFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::GlissandoFramePadding, ValueVariant::Float(0.2)),
	(StyleName::GlissandoFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::GlissandoFrameRound, ValueVariant::Int(0)),
	(StyleName::GlissandoFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::GlissandoFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),
	(StyleName::GlissandoLineWidth, ValueVariant::Spatium(0.15)),
	(StyleName::GlissandoText, ValueVariant::String("gliss.".to_string())),

	(StyleName::BendFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::BendFontSize, ValueVariant::Float(8.0)),
	(StyleName::BendFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::BendFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::BendColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::BendAlign, ValueVariant::UInt((Align::LEFT | Align::BASELINE).into())),
	(StyleName::BendOffset, ValueVariant::Point(Point2F::default())),
	(StyleName::BendFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::BendFramePadding, ValueVariant::Float(0.2)),
	(StyleName::BendFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::BendFrameRound, ValueVariant::Int(0)),
	(StyleName::BendFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::BendFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),
	(StyleName::BendLineWidth, ValueVariant::Spatium(0.15)),
	(StyleName::BendArrowWidth, ValueVariant::Spatium(0.5)),

	(StyleName::HeaderFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::HeaderFontSize, ValueVariant::Float(8.0)),
	(StyleName::HeaderFontSpatiumDependent, ValueVariant::Bool(false)),
	(StyleName::HeaderFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::HeaderColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::HeaderAlign, ValueVariant::UInt((Align::LEFT).into())),
	(StyleName::HeaderOffset, ValueVariant::Point(Point2F::default())),
	(StyleName::HeaderFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::HeaderFramePadding, ValueVariant::Float(0.2)),
	(StyleName::HeaderFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::HeaderFrameRound, ValueVariant::Int(0)),
	(StyleName::HeaderFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::HeaderFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::FooterFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::FooterFontSize, ValueVariant::Float(8.0)),
	(StyleName::FooterFontSpatiumDependent, ValueVariant::Bool(false)),
	(StyleName::FooterFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::FooterColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::FooterAlign, ValueVariant::UInt((Align::LEFT).into())),
	(StyleName::FooterOffset, ValueVariant::Point(Point2F::new(0.0, 5.0))),
	(StyleName::FooterFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::FooterFramePadding, ValueVariant::Float(0.2)),
	(StyleName::FooterFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::FooterFrameRound, ValueVariant::Int(0)),
	(StyleName::FooterFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::FooterFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::InstrumentChangeFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::InstrumentChangeFontSize, ValueVariant::Float(12.0)),
	(StyleName::InstrumentChangeFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::InstrumentChangeFontStyle, ValueVariant::UInt(FontStyle::BOLD.into())),
	(StyleName::InstrumentChangeColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::InstrumentChangeAlign, ValueVariant::UInt((Align::LEFT | Align::BASELINE).into())),
	(StyleName::InstrumentChangeOffset, ValueVariant::Point(Point2F::default())),
	(StyleName::InstrumentChangePlacement, ValueVariant::UInt(Placement::Above as u32)),
	(StyleName::InstrumentChangePosAbove, ValueVariant::Point(Point2F::new(0.0, -2.0))),
	(StyleName::InstrumentChangePosBelow, ValueVariant::Point(Point2F::new(0.0, 3.5))),
	(StyleName::InstrumentChangeMinDistance, ValueVariant::Spatium(0.5)),
	(StyleName::InstrumentChangeFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::InstrumentChangeFramePadding, ValueVariant::Float(0.2)),
	(StyleName::InstrumentChangeFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::InstrumentChangeFrameRound, ValueVariant::Int(0)),
	(StyleName::InstrumentChangeFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::InstrumentChangeFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::StickingFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::StickingFontSize, ValueVariant::Float(12.0)),
	(StyleName::StickingFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::StickingFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::StickingColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::StickingAlign, ValueVariant::UInt((Align::LEFT | Align::BASELINE).into())),
	(StyleName::StickingOffset, ValueVariant::Point(Point2F::default())),
	(StyleName::StickingPlacement, ValueVariant::UInt(Placement::Below as u32)),
	(StyleName::StickingPosAbove, ValueVariant::Point(Point2F::new(0.0, -2.0))),
	(StyleName::StickingPosBelow, ValueVariant::Point(Point2F::new(0.0, 2.0))),
	(StyleName::StickingMinDistance, ValueVariant::Spatium(0.5)),
	(StyleName::StickingFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::StickingFramePadding, ValueVariant::Float(0.2)),
	(StyleName::StickingFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::StickingFrameRound, ValueVariant::Int(0)),
	(StyleName::StickingFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::StickingFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::FiguredBassFontFace, ValueVariant::String("MScoreBC".to_string())),
	(StyleName::FiguredBassFontSize, ValueVariant::Float(8.0)),
	(StyleName::FiguredBassFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::FiguredBassFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::FiguredBassColor, ValueVariant::Color([0, 0, 0, 255])),

	(StyleName::User1Name, ValueVariant::String("".to_string())),
	(StyleName::User1FontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::User1FontSize, ValueVariant::Float(10.0)),
	(StyleName::User1FontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::User1FontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::User1Color, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::User1Align, ValueVariant::UInt((Align::LEFT | Align::TOP).into())),
	(StyleName::User1Offset, ValueVariant::Point(Point2F::default())),
	(StyleName::User1OffsetType, ValueVariant::UInt(OffsetType::Spatium as u32)),
	(StyleName::User1FrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::User1FramePadding, ValueVariant::Float(0.2)),
	(StyleName::User1FrameWidth, ValueVariant::Float(0.1)),
	(StyleName::User1FrameRound, ValueVariant::Int(0)),
	(StyleName::User1FrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::User1FrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::User2Name, ValueVariant::String("".to_string())),
	(StyleName::User2FontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::User2FontSize, ValueVariant::Float(10.0)),
	(StyleName::User2FontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::User2FontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::User2Color, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::User2Align, ValueVariant::UInt((Align::LEFT | Align::TOP).into())),
	(StyleName::User2Offset, ValueVariant::Point(Point2F::default())),
	(StyleName::User2OffsetType, ValueVariant::UInt(OffsetType::Spatium as u32)),
	(StyleName::User2FrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::User2FramePadding, ValueVariant::Float(0.2)),
	(StyleName::User2FrameWidth, ValueVariant::Float(0.1)),
	(StyleName::User2FrameRound, ValueVariant::Int(0)),
	(StyleName::User2FrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::User2FrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::User3Name, ValueVariant::String("".to_string())),
	(StyleName::User3FontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::User3FontSize, ValueVariant::Float(10.0)),
	(StyleName::User3FontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::User3FontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::User3Color, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::User3Align, ValueVariant::UInt((Align::LEFT | Align::TOP).into())),
	(StyleName::User3Offset, ValueVariant::Point(Point2F::default())),
	(StyleName::User3OffsetType, ValueVariant::UInt(OffsetType::Spatium as u32)),
	(StyleName::User3FrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::User3FramePadding, ValueVariant::Float(0.2)),
	(StyleName::User3FrameWidth, ValueVariant::Float(0.1)),
	(StyleName::User3FrameRound, ValueVariant::Int(0)),
	(StyleName::User3FrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::User3FrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::User4Name, ValueVariant::String("".to_string())),
	(StyleName::User4FontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::User4FontSize, ValueVariant::Float(10.0)),
	(StyleName::User4FontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::User4FontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::User4Color, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::User4Align, ValueVariant::UInt((Align::LEFT | Align::TOP).into())),
	(StyleName::User4Offset, ValueVariant::Point(Point2F::default())),
	(StyleName::User4OffsetType, ValueVariant::UInt(OffsetType::Spatium as u32)),
	(StyleName::User4FrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::User4FramePadding, ValueVariant::Float(0.2)),
	(StyleName::User4FrameWidth, ValueVariant::Float(0.1)),
	(StyleName::User4FrameRound, ValueVariant::Int(0)),
	(StyleName::User4FrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::User4FrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::User5Name, ValueVariant::String("".to_string())),
	(StyleName::User5FontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::User5FontSize, ValueVariant::Float(10.0)),
	(StyleName::User5FontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::User5FontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::User5Color, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::User5Align, ValueVariant::UInt((Align::LEFT | Align::TOP).into())),
	(StyleName::User5Offset, ValueVariant::Point(Point2F::default())),
	(StyleName::User5OffsetType, ValueVariant::UInt(OffsetType::Spatium as u32)),
	(StyleName::User5FrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::User5FramePadding, ValueVariant::Float(0.2)),
	(StyleName::User5FrameWidth, ValueVariant::Float(0.1)),
	(StyleName::User5FrameRound, ValueVariant::Int(0)),
	(StyleName::User5FrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::User5FrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::User6Name, ValueVariant::String("".to_string())),
	(StyleName::User6FontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::User6FontSize, ValueVariant::Float(10.0)),
	(StyleName::User6FontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::User6FontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::User6Color, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::User6Align, ValueVariant::UInt((Align::LEFT | Align::TOP).into())),
	(StyleName::User6Offset, ValueVariant::Point(Point2F::default())),
	(StyleName::User6OffsetType, ValueVariant::UInt(OffsetType::Spatium as u32)),
	(StyleName::User6FrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::User6FramePadding, ValueVariant::Float(0.2)),
	(StyleName::User6FrameWidth, ValueVariant::Float(0.1)),
	(StyleName::User6FrameRound, ValueVariant::Int(0)),
	(StyleName::User6FrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::User6FrameBgColor, ValueVariant::Color([255, 255, 255, 0])),

	(StyleName::LetRingFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::LetRingFontSize, ValueVariant::Float(10.0)),
	(StyleName::LetRingFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::LetRingFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::LetRingColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::LetRingTextAlign, ValueVariant::UInt((Align::LEFT | Align::VCENTER).into())),
	(StyleName::LetRingHookHeight, ValueVariant::Spatium(0.6)),
	(StyleName::LetRingPlacement, ValueVariant::UInt(Placement::Below as u32)),
	(StyleName::LetRingPosAbove, ValueVariant::Point(Point2F::new(0.0, 0.0))),
	(StyleName::LetRingPosBelow, ValueVariant::Point(Point2F::new(0.0, 0.0))),
	(StyleName::LetRingLineWidth, ValueVariant::Spatium(0.15)),
	(StyleName::LetRingLineStyle, ValueVariant::UInt(LineStyle::DashLine as u32)),
	(StyleName::LetRingBeginTextOffset, ValueVariant::Point(Point2F::new(0.0, 0.15))),
	(StyleName::LetRingText, ValueVariant::String("let ring".to_string())),
	(StyleName::LetRingFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::LetRingFramePadding, ValueVariant::Float(0.2)),
	(StyleName::LetRingFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::LetRingFrameRound, ValueVariant::Int(0)),
	(StyleName::LetRingFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::LetRingFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),
	(StyleName::LetRingEndHookType, ValueVariant::UInt(HookStyleType::Hook90T as u32)),

	(StyleName::PalmMuteFontFace, ValueVariant::String("FreeSerif".to_string())),
	(StyleName::PalmMuteFontSize, ValueVariant::Float(10.0)),
	(StyleName::PalmMuteFontSpatiumDependent, ValueVariant::Bool(true)),
	(StyleName::PalmMuteFontStyle, ValueVariant::UInt(FontStyle::NORMAL.into())),
	(StyleName::PalmMuteColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::PalmMuteTextAlign, ValueVariant::UInt((Align::LEFT | Align::VCENTER).into())),
	(StyleName::PalmMuteHookHeight, ValueVariant::Spatium(0.6)),
	(StyleName::PalmMutePlacement, ValueVariant::UInt(Placement::Below as u32)),
	(StyleName::PalmMutePosAbove, ValueVariant::Point(Point2F::new(0.0, -4.0))),
	(StyleName::PalmMutePosBelow, ValueVariant::Point(Point2F::new(0.0, 4.0))),
	(StyleName::PalmMuteLineWidth, ValueVariant::Spatium(0.15)),
	(StyleName::PalmMuteLineStyle, ValueVariant::UInt(LineStyle::DashLine as u32)),
	(StyleName::PalmMuteBeginTextOffset, ValueVariant::Point(Point2F::new(0.0, 0.15))),
	(StyleName::PalmMuteText, ValueVariant::String("P.M.".to_string())),
	(StyleName::PalmMuteFrameType, ValueVariant::UInt(FrameType::NoFrame as u32)),
	(StyleName::PalmMuteFramePadding, ValueVariant::Float(0.2)),
	(StyleName::PalmMuteFrameWidth, ValueVariant::Float(0.1)),
	(StyleName::PalmMuteFrameRound, ValueVariant::Int(0)),
	(StyleName::PalmMuteFrameFgColor, ValueVariant::Color([0, 0, 0, 255])),
	(StyleName::PalmMuteFrameBgColor, ValueVariant::Color([255, 255, 255, 0])),
	(StyleName::PalmMuteEndHookType, ValueVariant::UInt(HookStyleType::Hook90T as u32)),

	(StyleName::FermataPosAbove, ValueVariant::Point(Point2F::new(0.0, -1.0))),
	(StyleName::FermataPosBelow, ValueVariant::Point(Point2F::new(0.0, 1.0))),
	(StyleName::FermataMinDistance, ValueVariant::Spatium(0.4)),

	(StyleName::FingeringPlacement, ValueVariant::UInt(Placement::Above as u32)),

	(StyleName::ArticulationMinDistance, ValueVariant::Spatium(0.5)),
	(StyleName::FingeringMinDistance, ValueVariant::Spatium(0.5)),
	(StyleName::HairpinMinDistance, ValueVariant::Spatium(0.7)),
	(StyleName::LetRingMinDistance, ValueVariant::Spatium(0.7)),
	(StyleName::OttavaMinDistance, ValueVariant::Spatium(0.7)),
	(StyleName::PalmMuteMinDistance, ValueVariant::Spatium(0.7)),
	(StyleName::PedalMinDistance, ValueVariant::Spatium(0.7)),
	(StyleName::RepeatMinDistance, ValueVariant::Spatium(0.5)),
	(StyleName::TextLineMinDistance, ValueVariant::Spatium(0.7)),
	(StyleName::TrillMinDistance, ValueVariant::Spatium(1.0)),
	(StyleName::VibratoMinDistance, ValueVariant::Spatium(1.0)),
	(StyleName::VoltaMinDistance, ValueVariant::Spatium(1.0)),
	(StyleName::FiguredBassMinDistance, ValueVariant::Spatium(0.5)),
	(StyleName::TupletMinDistance, ValueVariant::Spatium(0.5)),

	(StyleName::AutoplaceEnabled, ValueVariant::Bool(true)),
]}

pub(super) const STYLE_NAMES: [&'static str; STYLE_COUNT] = {[
	"pageWidth",
	"pageHeight",
	"pagePrintableWidth",
	"pageEvenLeftMargin",
	"pageOddLeftMargin",
	"pageEvenTopMargin",
	"pageEvenBottomMargin",
	"pageOddTopMargin",
	"pageOddBottomMargin",
	"pageTwosided",
	"staffUpperBorder",
	"staffLowerBorder",
	"staffDistance",
	"akkoladeDistance",
	"minSystemDistance",
	"maxSystemDistance",
	"lyricsPlacement",
	"lyricsPosAbove",
	"lyricsPosBelow",
	"lyricsMinTopDistance",
	"lyricsMinBottomDistance",
	"lyricsMinDistance",
	"lyricsLineHeight",
	"lyricsDashMinLength",
	"lyricsDashMaxLegth",
	"lyricsDashMaxDistance",
	"lyricsDashForce",
	"lyricsAlignVerseNumber",
	"lyricsLineThickness",
	"lyricsMelismaAlign",
	"lyricsMelismaPad",
	"lyricsDashPad",
	"lyricsDashLineThickness",
	"lyricsDashYposRatio",
	"lyricsOddFontFace",
	"lyricsOddFontSize",
	"lyricsOddFontSpatiumDependent",
	"lyricsOddFontStyle",
	"lyricsOddColor",
	"lyricsOddAlign",
	"lyricsOddFrameType",
	"lyricsOddFramePadding",
	"lyricsOddFrameWidth",
	"lyricsOddFrameRound",
	"lyricsOddFrameFgColor",
	"lyricsOddFrameBgColor",
	"lyricsEvenFontFace",
	"lyricsEvenFontSize",
	"lyricsEvenFontSpatiumDependent",
	"lyricsEvenFontStyle",
	"lyricsEvenColor",
	"lyricsEvenAlign",
	"lyricsEvenFrameType",
	"lyricsEvenFramePadding",
	"lyricsEvenFrameWidth",
	"lyricsEvenFrameRound",
	"lyricsEvenFrameFgColor",
	"lyricsEvenFrameBgColor",
	"figuredBassFontFamily",
	"figuredBassFontSize",
	"figuredBassYOffset",
	"figuredBassLineHeight",
	"figuredBassAlignment",
	"figuredBassStyle",
	"systemFrameDistance",
	"frameSystemDistance",
	"minMeasureWidth",
	"barWidth",
	"doubleBarWidth",
	"endBarWidth",
	"doubleBarDistance",
	"endBarDistance",
	"repeatBarlineDotSeparation",
	"repeatBarTips",
	"startBarlineSingle",
	"startBarlineMultiple",
	"bracketWidth",
	"bracketDistance",
	"akkoladeWidth",
	"akkoladeBarDistance",
	"dividerLeft",
	"dividerLeftSym",
	"dividerLeftX",
	"dividerLeftY",
	"dividerRight",
	"dividerRightSym",
	"dividerRightX",
	"dividerRightY",
	"clefLeftMargin",
	"keysigLeftMargin",
	"ambitusMargin",
	"timesigLeftMargin",
	"timesigScale",
	"midClefKeyRightMargin",
	"clefKeyRightMargin",
	"clefKeyDistance",
	"clefTimesigDistance",
	"keyTimesigDistance",
	"keyTimesigDistance",
	"systemHeaderDistance",
	"systemHeaderTimeSigDistance",
	"clefBarlineDistance",
	"timesigBarlineDistance",
	"stemWidth",
	"shortenStem",
	"shortStemProgression",
	"shortestStem",
	"beginRepeatLeftMargin",
	"minNoteDistance",
	"barNoteDistance",
	"barAccidentalDistance",
	"multiMeasureRestMargin",
	"noteBarDistance",
	"measureSpacing",
	"staffLineWidth",
	"ledgerLineWidth",
	"ledgerLineLength",
	"accidentalDistance",
	"accidentalNoteDistance",
	"beamWidth",
	"beamDistance",
	"beamMinLen",
	"beamNoSlope",
	"dotMag",
	"dotNoteDistance",
	"dotRestDistance",
	"dotDotDistance",
	"propertyDistanceHead",
	"propertyDistanceStem",
	"propertyDistance",
	"articulationMag",
	"articulationPosAbove",
	"articulationAnchorDefault",
	"articulationAnchorLuteFingering",
	"articulationAnchorOther",
	"lastSystemFillLimit",
	"hairpinPlacement",
	"hairpinPosAbove",
	"hairpinPosBelow",
	"hairpinLinePosAbove",
	"hairpinLinePosBelow",
	"hairpinHeight",
	"hairpinContHeight",
	"hairpinWidth",
	"hairpinFontFace",
	"hairpinFontSize",
	"hairpinFontSpatiumDependent",
	"hairpinFontStyle",
	"hairpinColor",
	"hairpinTextAlign",
	"hairpinFrameType",
	"hairpinFramePadding",
	"hairpinFrameWidth",
	"hairpinFrameRound",
	"hairpinFrameFgColor",
	"hairpinFrameBgColor",
	"hairpinText",
	"hairpinCrescText",
	"hairpinDecrescText",
	"hairpinCrescContText",
	"hairpinDecrescContText",
	"hairpinLineStyle",
	"hairpinLineLineStyle",
	"pedalPlacement",
	"pedalPosAbove",
	"pedalPosBelow",
	"pedalLineWidth",
	"pedalListStyle",
	"pedalBeginTextOffset",
	"pedalHookHeight",
	"pedalFontFace",
	"pedalFontSize",
	"pedalFontSpatiumDependent",
	"pedalFontStyle",
	"pedalColor",
	"pedalTextAlign",
	"pedalFrameType",
	"pedalFramePadding",
	"pedalFrameWidth",
	"pedalFrameRound",
	"pedalFrameFgColor",
	"pedalFrameBgColor",
	"trillPlacement",
	"trillPosAbove",
	"trillPosBelow",
	"vibratoPlacement",
	"vibratoPosAbove",
	"vibratoPosBelow",
	"harmonyFretDist",
	"minHarmonyDistance",
	"maxHarmonyBarDistance",
	"harmonyPlacement",
	"romanNumeralPlacement",
	"nashvilleNumberPlacement",
	"chordSymbolPosAbove",
	"chordSymbolPosBelow",
	"chordSymbolBPosAbove",
	"chordSymbolBPosBelow",
	"romanNumeralPosAbove",
	"romanNumeralPosBelow",
	"nashvilleNumberPosAbove",
	"nashvilleNumberPosBelow",
	"chordSymbolAFontFace",
	"chordSymbolAFontSize",
	"chordSymbolAFontSpatiumDependent",
	"chordSymbolAFontStyle",
	"chordSymbolAColor",
	"chordSymbolAAlign",
	"chordSymbolAFrameType",
	"chordSymbolAFramePadding",
	"chordSymbolAFrameWidth",
	"chordSymbolAFrameRound",
	"chordSymbolAFrameFgColor",
	"chordSymbolAFrameBgColor",
	"chordSymbolBFontFace",
	"chordSymbolBFontSize",
	"chordSymbolBFontSpatiumDependent",
	"chordSymbolBFontStyle",
	"chordSymbolBColor",
	"chordSymbolBAlign",
	"chordSymbolBFrameType",
	"chordSymbolBFramePadding",
	"chordSymbolBFrameWidth",
	"chordSymbolBFrameRound",
	"chordSymbolBFrameFgColor",
	"chordSymbolBFrameBgColor",
	"romanNumeralFontFace",
	"romanNumeralFontSize",
	"romanNumeralFontSpatiumDependent",
	"romanNumeralFontStyle",
	"romanNumeralColor",
	"romanNumeralAlign",
	"romanNumeralFrameType",
	"romanNumeralFramePadding",
	"romanNumeralFrameWidth",
	"romanNumeralFrameRound",
	"romanNumeralFrameFgColor",
	"romanNumeralFrameBgColor",
	"nashvilleNumberFontFace",
	"nashvilleNumberFontSize",
	"nashvilleNumberFontSpatiumDependent",
	"nashvilleNumberFontStyle",
	"nashvilleNumberColor",
	"nashvilleNumberAlign",
	"nashvilleNumberFrameType",
	"nashvilleNumberFramePadding",
	"nashvilleNumberFrameWidth",
	"nashvilleNumberFrameRound",
	"nashvilleNumberFrameFgColor",
	"nashvilleNumberFrameBgColor",
	"capoPosition",
	"fretNumMag",
	"fretNumPos",
	"fretY",
	"fretMinDistance",
	"fretMag",
	"fretPlacement",
	"fretStrings",
	"fretFrets",
	"fretNut",
	"fretDotSize",
	"fretStringSpacing",
	"fretFretSpacing",
	"showPageNumber",
	"showPageNumberOne",
	"pageNumberOddEven",
	"showMeasureNumber",
	"showMeasureNumberOne",
	"measureNumberInterval",
	"measureNumberSystem",
	"measureNumberAllStaffs",
	"smallNoteMag",
	"graceNoteMag",
	"smallStaffMag",
	"smallClefMag",
	"genClef",
	"genKeysig",
	"genCourtesyTimesig",
	"genCourtesyKeysig",
	"genCourtesyClef",
	"swingRatio",
	"swingUnit",
	"useStandardNoteNames",
	"useGermanNoteNames",
	"useFullGermanNoteNames",
	"useSolfeggioNoteNames",
	"useFrenchNoteNames",
	"automaticCapitalization",
	"lowerCaseMinorChords",
	"lowerCaseBassNotes",
	"allCapsNoteNames",
	"chordStyle",
	"chordsXmlFile",
	"chordDescriptionFile",
	"chordExtensionMag",
	"chordExtensionAdjust",
	"chordModifierMag",
	"chordModifierAdjust",
	"concertPitch",
	"createMultiMeasureRests",
	"minEmptyMeasures",
	"minMMRestWidth",
	"hideEmptyStaves",
	"dontHidStavesInFirstSystm",
	"hideInstrumentNameIfOneInstrument",
	"gateTime",
	"tenutoGateTime",
	"staccatoGateTime",
	"slurGateTime",
	"ArpeggioNoteDistance",
	"ArpeggioLineWidth",
	"ArpeggioHookLen",
	"ArpeggioHiddenInStdIfTab",
	"slurEndWidth",
	"slurMidWidth",
	"slurDottedWidth",
	"minTieLength",
	"slurMinDistance",
	"sectionPause",
	"musicalSymbolFont",
	"musicalTextFont",
	"showHeader",
	"headerFirstPage",
	"headerOddEven",
	"evenHeaderL",
	"evenHeaderC",
	"evenHeaderR",
	"oddHeaderL",
	"oddHeaderC",
	"oddHeaderR",
	"showFooter",
	"footerFirstPage",
	"footerOddEven",
	"evenFooterL",
	"evenFooterC",
	"evenFooterR",
	"oddFooterL",
	"oddFooterC",
	"oddFooterR",
	"voltaPosAbove",
	"voltaHook",
	"voltaLineWidth",
	"voltaLineStyle",
	"voltaFontFace",
	"voltaFontSize",
	"voltaFontSpatiumDependent",
	"voltaFontStyle",
	"voltaColor",
	"voltaAlign",
	"voltaOffset",
	"voltaFrameType",
	"voltaFramePadding",
	"voltaFrameWidth",
	"voltaFrameRound",
	"voltaFrameFgColor",
	"voltaFrameBgColor",
	"ottava8VAPlacement",
	"ottava8VBPlacement",
	"ottava15MAPlacement",
	"ottava15MBPlacement",
	"ottava22MAPlacement",
	"ottava22MBPlacement",
	"ottava8VAText",
	"ottava8VAContinueText",
	"ottava8VBText",
	"ottava8VBContinueText",
	"ottava15MAText",
	"ottava15MAContinueText",
	"ottava15MBText",
	"ottava15MBContinueText",
	"ottava22MAText",
	"ottava22MAContinueText",
	"ottava22MBText",
	"ottava22MBContinueText",
	"ottava8VAnoText",
	"ottava8VAnoContinueText",
	"ottava8VBnoText",
	"ottava8VBnoContinueText",
	"ottava15MAnoText",
	"ottava15MAnoContinueText",
	"ottava15MBnoText",
	"ottava15MBnoContinueText",
	"ottava22MAnoText",
	"ottava22MAnoContinueText",
	"ottava22MBnoText",
	"ottava22MBnoContinueText",
	"ottavaPosAbove",
	"ottavaPosBelow",
	"ottavaHookAbove",
	"ottavaHookBelow",
	"ottavaLineWidth",
	"ottavaLineStyle",
	"ottavaNumbersOnly",
	"ottavaFontFace",
	"ottavaFontSize",
	"ottavaFontSpatiumDependent",
	"ottavaFontStyle",
	"ottavaColor",
	"ottavaTextAlign",
	"ottavaFrameType",
	"ottavaFramePadding",
	"ottavaFrameWidth",
	"ottavaFrameRound",
	"ottavaFrameFgColor",
	"ottavaFrameBgColor",
	"tabClef",
	"tremoloWidth",
	"tremoloBoxHeight",
	"tremoloLineWidth",
	"tremoloDistance",
	"tremoloPlacement",
	"linearStretch",
	"crossMeasureValues",
	"keySigNaturals",
	"tupletMaxSlope",
	"tupletOufOfStaff",
	"tupletVHeadDistance",
	"tupletVStemDistance",
	"tupletStemLeftDistance",
	"tupletStemRightDistance",
	"tupletNoteLeftDistance",
	"tupletNoteRightDistance",
	"tupletBracketWidth",
	"tupletDirection",
	"tupletNumberType",
	"tupletBracketType",
	"tupletFontFace",
	"tupletFontSize",
	"tupletFontSpatiumDependent",
	"tupletFontStyle",
	"tupletColor",
	"tupletAlign",
	"tupletBracketHookHeight",
	"tupletOffset",
	"tupletFrameType",
	"tupletFramePadding",
	"tupletFrameWidth",
	"tupletFrameRound",
	"tupletFrameFgColor",
	"tupletFrameBgColor",
	"barreLineWidth",
	"scaleBarlines",
	"barGraceDistance",
	"minVerticalDistance",
	"ornamentStyle",
	"Spatium",
	"autoplaceHairpinDynamicsDistance",
	"dynamicsPlacement",
	"dynamicsPosAbove",
	"dynamicsPosBelow",
	"dynamicsMinDistance",
	"autoplaceVerticalAlignRange",
	"textLinePlacement",
	"textLinePosAbove",
	"textLinePosBelow",
	"textLineFrameType",
	"textLineFramePadding",
	"textLineFrameWidth",
	"textLineFrameRound",
	"textLineFrameFgColor",
	"textLineFrameBgColor",
	"tremoloBarLineWidth",
	"jumpPosAbove",
	"markerPosAbove",
	"defaultFontFace",
	"defaultFontSize",
	"defaultFontSpatiumDependent",
	"defaultFontStyle",
	"defaultColor",
	"defaultAlign",
	"defaultFrameType",
	"defaultFramePadding",
	"defaultFrameWidth",
	"defaultFrameRound",
	"defaultFrameFgColor",
	"defaultFrameBgColor",
	"defaultOffset",
	"defaultOffsetType",
	"defaultSystemFlag",
	"defaultText",
	"titleFontFace",
	"titleFontSize",
	"titleFontSpatiumDependent",
	"titleFontStyle",
	"titleColor",
	"titleAlign",
	"titleOffset",
	"titleOffsetType",
	"titleFrameType",
	"titleFramePadding",
	"titleFrameWidth",
	"titleFrameRound",
	"titleFrameFgColor",
	"titleFrameBgColor",
	"subTitleFontFace",
	"subTitleFontSize",
	"subTitleFontSpatiumDependent",
	"subTitleFontStyle",
	"subTitleColor",
	"subTitleAlign",
	"subTitleOffset",
	"subTitleOffsetType",
	"subTitleFrameType",
	"subTitleFramePadding",
	"subTitleFrameWidth",
	"subTitleFrameRound",
	"subTitleFrameFgColor",
	"subTitleFrameBgColor",
	"composerFontFace",
	"composerFontSize",
	"composerFontSpatiumDependent",
	"composerFontStyle",
	"composerColor",
	"composerAlign",
	"composerOffset",
	"composerOffsetType",
	"composerFrameType",
	"composerFramePadding",
	"composerFrameWidth",
	"composerFrameRound",
	"composerFrameFgColor",
	"composerFrameBgColor",
	"lyricistFontFace",
	"lyricistFontSize",
	"lyricistFontSpatiumDependent",
	"lyricistFontStyle",
	"lyricistColor",
	"lyricistAlign",
	"lyricistOffset",
	"lyricistOffsetType",
	"lyricistFrameType",
	"lyricistFramePadding",
	"lyricistFrameWidth",
	"lyricistFrameRound",
	"lyricistFrameFgColor",
	"lyricistFrameBgColor",
	"fingeringFontFace",
	"fingeringFontSize",
	"fingeringFontSpatiumDependent",
	"fingeringFontStyle",
	"fingeringColor",
	"fingeringAlign",
	"fingeringFrameType",
	"fingeringFramePadding",
	"fingeringFrameWidth",
	"fingeringFrameRound",
	"fingeringFrameFgColor",
	"fingeringFrameBgColor",
	"fingeringOffset",
	"lhGuitarFingeringFontFace",
	"lhGuitarFingeringFontSize",
	"lhGuitarFingeringFontSpatiumDependent",
	"lhGuitarFingeringFontStyle",
	"lhGuitarFingeringColor",
	"lhGuitarFingeringAlign",
	"lhGuitarFingeringFrameType",
	"lhGuitarFingeringFramePadding",
	"lhGuitarFingeringFrameWidth",
	"lhGuitarFingeringFrameRound",
	"lhGuitarFingeringFrameFgColor",
	"lhGuitarFingeringFrameBgColor",
	"lhGuitarFingeringOffset",
	"rhGuitarFingeringFontFace",
	"rhGuitarFingeringFontSize",
	"rhGuitarFingeringFontSpatiumDependent",
	"rhGuitarFingeringFontStyle",
	"rhGuitarFingeringColor",
	"rhGuitarFingeringAlign",
	"rhGuitarFingeringFrameType",
	"rhGuitarFingeringFramePadding",
	"rhGuitarFingeringFrameWidth",
	"rhGuitarFingeringFrameRound",
	"rhGuitarFingeringFrameFgColor",
	"rhGuitarFingeringFrameBgColor",
	"rhGuitarFingeringOffset",
	"stringNumberFontFace",
	"stringNumberFontSize",
	"stringNumberFontSpatiumDependent",
	"stringNumberFontStyle",
	"stringNumberColor",
	"stringNumberAlign",
	"stringNumberFrameType",
	"stringNumberFramePadding",
	"stringNumberFrameWidth",
	"stringNumberFrameRound",
	"stringNumberFrameFgColor",
	"stringNumberFrameBgColor",
	"stringNumberOffset",
	"longInstrumentFontFace",
	"longInstrumentFontSize",
	"longInstrumentFontSpatiumDependent",
	"longInstrumentFontStyle",
	"longInstrumentColor",
	"longInstrumentAlign",
	"longInstrumentOffset",
	"longInstrumentFrameType",
	"longInstrumentFramePadding",
	"longInstrumentFrameWidth",
	"longInstrumentFrameRound",
	"longInstrumentFrameFgColor",
	"longInstrumentFrameBgColor",
	"shortInstrumentFontFace",
	"shortInstrumentFontSize",
	"shortInstrumentFontSpatiumDependent",
	"shortInstrumentFontStyle",
	"shortInstrumentColor",
	"shortInstrumentAlign",
	"shortInstrumentOffset",
	"shortInstrumentFrameType",
	"shortInstrumentFramePadding",
	"shortInstrumentFrameWidth",
	"shortInstrumentFrameRound",
	"shortInstrumentFrameFgColor",
	"shortInstrumentFrameBgColor",
	"partInstrumentFontFace",
	"partInstrumentFontSize",
	"partInstrumentFontSpatiumDependent",
	"partInstrumentFontStyle",
	"partInstrumentColor",
	"partInstrumentAlign",
	"partInstrumentOffset",
	"partInstrumentFrameType",
	"partInstrumentFramePadding",
	"partInstrumentFrameWidth",
	"partInstrumentFrameRound",
	"partInstrumentFrameFgColor",
	"partInstrumentFrameBgColor",
	"dynamicsFontFace",
	"dynamicsFontSize",
	"dynamicsFontSpatiumDependent",
	"dynamicsFontStyle",
	"dynamicsColor",
	"dynamicsAlign",
	"dynamicsFrameType",
	"dynamicsFramePadding",
	"dynamicsFrameWidth",
	"dynamicsFrameRound",
	"dynamicsFrameFgColor",
	"dynamicsFrameBgColor",
	"expressionFontFace",
	"expressionFontSize",
	"expressionFontSpatiumDependent",
	"expressionFontStyle",
	"expressionColor",
	"expressionAlign",
	"expressionPlacement",
	"expressionOffset",
	"expressionFrameType",
	"expressionFramePadding",
	"expressionFrameWidth",
	"expressionFrameRound",
	"expressionFrameFgColor",
	"expressionFrameBgColor",
	"tempoFontFace",
	"tempoFontSize",
	"tempoFontSpatiumDependent",
	"tempoFontStyle",
	"tempoColor",
	"tempoAlign",
	"tempoSystemFlag",
	"tempoPlacement",
	"tempoPosAbove",
	"tempoPosBelow",
	"tempoMinDistance",
	"tempoFrameType",
	"tempoFramePadding",
	"tempoFrameWidth",
	"tempoFrameRound",
	"tempoFrameFgColor",
	"tempoFrameBgColor",
	"metronomeFontFace",
	"metronomeFontSize",
	"metronomeFontSpatiumDependent",
	"metronomeFontStyle",
	"metronomeColor",
	"metronomePlacement",
	"metronomeAlign",
	"metronomeOffset",
	"metronomeFrameType",
	"metronomeFramePadding",
	"metronomeFrameWidth",
	"metronomeFrameRound",
	"metronomeFrameFgColor",
	"metronomeFrameBgColor",
	"measureNumberFontFace",
	"measureNumberFontSize",
	"measureNumberFontSpatiumDependent",
	"measureNumberFontStyle",
	"measureNumberColor",
	"measureNumberOffset",
	"measureNumberOffsetType",
	"measureNumberAlign",
	"measureNumberFrameType",
	"measureNumberFramePadding",
	"measureNumberFrameWidth",
	"measureNumberFrameRound",
	"measureNumberFrameFgColor",
	"measureNumberFrameBgColor",
	"translatorFontFace",
	"translatorFontSize",
	"translatorFontSpatiumDependent",
	"translatorFontStyle",
	"translatorColor",
	"translatorAlign",
	"translatorOffset",
	"translatorFrameType",
	"translatorFramePadding",
	"translatorFrameWidth",
	"translatorFrameRound",
	"translatorFrameFgColor",
	"translatorFrameBgColor",
	"systemFontFace",
	"systemFontSize",
	"systemFontSpatiumDependent",
	"systemFontStyle",
	"systemTextColor",
	"systemAlign",
	"systemOffsetType",
	"systemPlacement",
	"systemPosAbove",
	"systemPosBelow",
	"systemMinDistance",
	"systemFrameType",
	"systemFramePadding",
	"systemFrameWidth",
	"systemFrameRound",
	"systemFrameFgColor",
	"systemFrameBgColor",
	"staffFontFace",
	"staffFontSize",
	"staffFontSpatiumDependent",
	"staffFontStyle",
	"staffTextColor",
	"staffAlign",
	"systemOffsetType",
	"staffPlacement",
	"staffPosAbove",
	"staffPosBelow",
	"staffMinDistance",
	"staffFrameType",
	"staffFramePadding",
	"staffFrameWidth",
	"staffFrameRound",
	"staffFrameFgColor",
	"staffFrameBgColor",
	"rehearsalMarkFontFace",
	"rehearsalMarkFontSize",
	"rehearsalMarkFontSpatiumDependent",
	"rehearsalMarkFontStyle",
	"rehearsalMarkColor",
	"rehearsalMarkAlign",
	"rehearsalMarkFrameType",
	"rehearsalMarkFramePadding",
	"rehearsalMarkFrameWidth",
	"rehearsalMarkFrameRound",
	"rehearsalMarkFrameFgColor",
	"rehearsalMarkFrameBgColor",
	"rehearsalMarkPlacement",
	"rehearsalMarkPosAbove",
	"rehearsalMarkPosBelow",
	"rehearsalMarkMinDistance",
	"repeatLeftFontFace",
	"repeatLeftFontSize",
	"repeatLeftFontSpatiumDependent",
	"repeatLeftFontStyle",
	"repeatLeftColor",
	"repeatLeftAlign",
	"repeatLeftPlacement",
	"repeatLeftFrameType",
	"repeatLeftFramePadding",
	"repeatLeftFrameWidth",
	"repeatLeftFrameRound",
	"repeatLeftFrameFgColor",
	"repeatLeftFrameBgColor",
	"repeatRightFontFace",
	"repeatRightFontSize",
	"repeatRightFontSpatiumDependent",
	"repeatRightFontStyle",
	"repeatRightColor",
	"repeatRightAlign",
	"repeatRightPlacement",
	"repeatRightFrameType",
	"repeatRightFramePadding",
	"repeatRightFrameWidth",
	"repeatRightFrameRound",
	"repeatRightFrameFgColor",
	"repeatRightFrameBgColor",
	"frameFontFace",
	"frameFontSize",
	"frameFontSpatiumDependent",
	"frameFontStyle",
	"frameColor",
	"frameAlign",
	"frameOffset",
	"frameFrameType",
	"frameFramePadding",
	"frameFrameWidth",
	"frameFrameRound",
	"frameFrameFgColor",
	"frameFrameBgColor",
	"textLineFontFace",
	"textLineFontSize",
	"textLineFontSpatiumDependent",
	"textLineFontStyle",
	"textLineColor",
	"textLineTextAlign",
	"glissandoFontFace",
	"glissandoFontSize",
	"glissandoFontSpatiumDependent",
	"glissandoFontStyle",
	"glissandoColor",
	"glissandoAlign",
	"glissandoOffset",
	"glissandoFrameType",
	"glissandoFramePadding",
	"glissandoFrameWidth",
	"glissandoFrameRound",
	"glissandoFrameFgColor",
	"glissandoFrameBgColor",
	"glissandoLineWidth",
	"glissandoText",
	"bendFontFace",
	"bendFontSize",
	"bendFontSpatiumDependent",
	"bendFontStyle",
	"bendColor",
	"bendAlign",
	"bendOffset",
	"bendFrameType",
	"bendFramePadding",
	"bendFrameWidth",
	"bendFrameRound",
	"bendFrameFgColor",
	"bendFrameBgColor",
	"bendLineWidth",
	"bendArrowWidth",
	"headerFontFace",
	"headerFontSize",
	"headerFontSpatiumDependent",
	"headerFontStyle",
	"headerColor",
	"headerAlign",
	"headerOffset",
	"headerFrameType",
	"headerFramePadding",
	"headerFrameWidth",
	"headerFrameRound",
	"headerFrameFgColor",
	"headerFrameBgColor",
	"footerFontFace",
	"footerFontSize",
	"footerFontSpatiumDependent",
	"footerFontStyle",
	"footerColor",
	"footerAlign",
	"footerOffset",
	"footerFrameType",
	"footerFramePadding",
	"footerFrameWidth",
	"footerFrameRound",
	"footerFrameFgColor",
	"footerFrameBgColor",
	"instrumentChangeFontFace",
	"instrumentChangeFontSize",
	"instrumentChangeFontSpatiumDependent",
	"instrumentChangeFontStyle",
	"instrumentChangeColor",
	"instrumentChangeAlign",
	"instrumentChangeOffset",
	"instrumentChangePlacement",
	"instrumentChangePosAbove",
	"instrumentChangePosBelow",
	"instrumentChangeMinDistance",
	"instrumentChangeFrameType",
	"instrumentChangeFramePadding",
	"instrumentChangeFrameWidth",
	"instrumentChangeFrameRound",
	"instrumentChangeFrameFgColor",
	"instrumentChangeFrameBgColor",
	"stickingFontFace",
	"stickingFontSize",
	"stickingFontSpatiumDependent",
	"stickingFontStyle",
	"stickingColor",
	"stickingAlign",
	"stickingOffset",
	"stickingPlacement",
	"stickingPosAbove",
	"stickingPosBelow",
	"stickingMinDistance",
	"stickingFrameType",
	"stickingFramePadding",
	"stickingFrameWidth",
	"stickingFrameRound",
	"stickingFrameFgColor",
	"stickingFrameBgColor",
	"figuredBassFontFace",
	"figuredBassFontSize",
	"figuredBassFontSpatiumDependent",
	"figuredBassFontStyle",
	"figuredBassColor",
	"user1Name",
	"user1FontFace",
	"user1FontSize",
	"user1FontSpatiumDependent",
	"user1FontStyle",
	"user1Color",
	"user1Align",
	"user1Offset",
	"user1OffsetType",
	"user1FrameType",
	"user1FramePadding",
	"user1FrameWidth",
	"user1FrameRound",
	"user1FrameFgColor",
	"user1FrameBgColor",
	"user2Name",
	"user2FontFace",
	"user2FontSize",
	"user2FontSpatiumDependent",
	"user2FontStyle",
	"user2Color",
	"user2Align",
	"user2Offset",
	"user2OffsetType",
	"user2FrameType",
	"user2FramePadding",
	"user2FrameWidth",
	"user2FrameRound",
	"user2FrameFgColor",
	"user2FrameBgColor",
	"user3Name",
	"user3FontFace",
	"user3FontSize",
	"user3FontSpatiumDependent",
	"user3FontStyle",
	"user3Color",
	"user3Align",
	"user3Offset",
	"user3OffsetType",
	"user3FrameType",
	"user3FramePadding",
	"user3FrameWidth",
	"user3FrameRound",
	"user3FrameFgColor",
	"user3FrameBgColor",
	"user4Name",
	"user4FontFace",
	"user4FontSize",
	"user4FontSpatiumDependent",
	"user4FontStyle",
	"user4Color",
	"user4Align",
	"user4Offset",
	"user4OffsetType",
	"user4FrameType",
	"user4FramePadding",
	"user4FrameWidth",
	"user4FrameRound",
	"user4FrameFgColor",
	"user4FrameBgColor",
	"user5Name",
	"user5FontFace",
	"user5FontSize",
	"user5FontSpatiumDependent",
	"user5FontStyle",
	"user5Color",
	"user5Align",
	"user5Offset",
	"user5OffsetType",
	"user5FrameType",
	"user5FramePadding",
	"user5FrameWidth",
	"user5FrameRound",
	"user5FrameFgColor",
	"user5FrameBgColor",
	"user6Name",
	"user6FontFace",
	"user6FontSize",
	"user6FontSpatiumDependent",
	"user6FontStyle",
	"user6Color",
	"user6Align",
	"user6Offset",
	"user6OffsetType",
	"user6FrameType",
	"user6FramePadding",
	"user6FrameWidth",
	"user6FrameRound",
	"user6FrameFgColor",
	"user6FrameBgColor",
	"letRingFontFace",
	"letRingFontSize",
	"letRingFontSpatiumDependent",
	"letRingFontStyle",
	"letRingColor",
	"letRingTextAlign",
	"letRingHookHeight",
	"letRingPlacement",
	"letRingPosAbove",
	"letRingPosBelow",
	"letRingLineWidth",
	"letRingLineStyle",
	"letRingBeginTextOffset",
	"letRingText",
	"letRingFrameType",
	"letRingFramePadding",
	"letRingFrameWidth",
	"letRingFrameRound",
	"letRingFrameFgColor",
	"letRingFrameBgColor",
	"letRingEndHookType",
	"palmMuteFontFace",
	"palmMuteFontSize",
	"palmMuteFontSpatiumDependent",
	"palmMuteFontStyle",
	"palmMuteColor",
	"palmMuteTextAlign",
	"palmMuteHookHeight",
	"palmMutePlacement",
	"palmMutePosAbove",
	"palmMutePosBelow",
	"palmMuteLineWidth",
	"palmMuteLineStyle",
	"palmMuteBeginTextOffset",
	"palmMuteText",
	"palmMuteFrameType",
	"palmMuteFramePadding",
	"palmMuteFrameWidth",
	"palmMuteFrameRound",
	"palmMuteFrameFgColor",
	"palmMuteFrameBgColor",
	"palmMuteEndHookType",
	"fermataPosAbove",
	"fermataPosBelow",
	"fermataMinDistance",
	"fingeringPlacement",
	"articulationMinDistance",
	"fingeringMinDistance",
	"hairpinMinDistance",
	"letRingMinDistance",
	"ottavaMinDistance",
	"palmMuteMinDistance",
	"pedalMinDistance",
	"repeatMinDistance",
	"textLineMinDistance",
	"trillMinDistance",
	"vibratoMinDistance",
	"voltaMinDistance",
	"figuredBassMinDistance",
	"tupletMinDistance",
	"autoplaceEnabled",
]};
