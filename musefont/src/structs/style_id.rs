use crate::*;
use crate::num_traits::FromPrimitive;

pub type SId = u32;

#[derive(Clone, Copy, Debug, Primitive, PartialEq, Eq, Hash)]
pub enum StyleId {
	NoStyle = 0,

	PageWidth = 1,
	PageHeight = 2,
	PagePrintableWidth = 3,
	PageEvenLeftMargin = 4,
	PageOddLeftMargin = 5,
	PageEvenTopMargin = 6,
	PageEvenBottomMargin = 7,
	PageOddTopMargin = 8,
	PageOddBottomMargin = 9,
	PageTwosided = 10,

	StaffUpperBorder = 11,
	StaffLowerBorder = 12,
	StaffDistance = 13,
	AkkoladeDistance = 14,

	MinSystemDistance = 15,
	MaxSystemDistance = 16,

	LyricsPlacement = 17,
	LyricsPosAbove = 18,
	LyricsPosBelow = 19,
	LyricsMinTopDistance = 20,
	LyricsMinBottomDistance = 21,
	LyricsMinDistance = 22,
	LyricsLineHeight = 23,
	LyricsDashMinLength = 24,
	LyricsDashMaxLength = 25,
	LyricsDashMaxDistance = 26,
	LyricsDashForce = 27,
	LyricsAlignVerseNumber = 28,
	LyricsLineThickness = 29,
	LyricsMelismaAlign = 30,
	LyricsMelismaPad = 31,
	LyricsDashPad = 32,
	LyricsDashLineThickness = 33,
	LyricsDashYposRatio = 34,

	LyricsOddFontFace = 35,
	LyricsOddFontSize = 36,
	LyricsOddFontSpatiumDependent = 37,
	LyricsOddFontStyle = 38,
	LyricsOddColor = 39,
	LyricsOddAlign = 40,
	LyricsOddFrameType = 41,
	LyricsOddFramePadding = 42,
	LyricsOddFrameWidth = 43,
	LyricsOddFrameRound = 44,
	LyricsOddFrameFgColor = 45,
	LyricsOddFrameBgColor = 46,

	LyricsEvenFontFace = 47,
	LyricsEvenFontSize = 48,
	LyricsEvenFontSpatiumDependent = 49,
	LyricsEvenFontStyle = 50,
	LyricsEvenColor = 51,
	LyricsEvenAlign = 52,
	LyricsEvenFrameType = 53,
	LyricsEvenFramePadding = 54,
	LyricsEvenFrameWidth = 55,
	LyricsEvenFrameRound = 56,
	LyricsEvenFrameFgColor = 57,
	LyricsEvenFrameBgColor = 58,

	FiguredBassFontFamily = 59,
	FiguredBassYOffset = 60,
	FiguredBassLineHeight = 61,
	FiguredBassAlignment = 62,
	FiguredBassStyle = 63,
	SystemFrameDistance = 64,
	FrameSystemDistance = 65,
	MinMeasureWidth = 66,

	BarWidth = 67,
	DoubleBarWidth = 68,
	EndBarWidth = 69,
	DoubleBarDistance = 70,
	EndBarDistance = 71,
	RepeatBarlineDotSeparation = 72,
	RepeatBarTips = 73,
	StartBarlineSingle = 74,
	StartBarlineMultiple = 75,

	BracketWidth = 76,
	BracketDistance = 77,
	AkkoladeWidth = 78,
	AkkoladeBarDistance = 79,
	DividerLeft = 80,
	DividerLeftSym = 81,
	DividerLeftX = 82,
	DividerLeftY = 83,
	DividerRight = 84,
	DividerRightSym = 85,
	DividerRightX = 86,
	DividerRightY = 87,

	ClefLeftMargin = 88,
	KeysigLeftMargin = 89,
	AmbitusMargin = 90,
	TimesigLeftMargin = 91,
	TimesigScale = 92,

	MidClefKeyRightMargin = 93,
	ClefKeyRightMargin = 94,
	ClefKeyDistance = 95,
	ClefTimesigDistance = 96,
	KeyTimesigDistance = 97,
	KeyBarlineDistance = 98,
	SystemHeaderDistance = 99,
	SystemHeaderTimeSigDistance = 100,

	ClefBarlineDistance = 101,
	TimesigBarlineDistance = 102,

	StemWidth = 103,
	ShortenStem = 104,
	ShortStemProgression = 105,
	ShortestStem = 106,
	BeginRepeatLeftMargin = 107,
	MinNoteDistance = 108,
	BarNoteDistance = 109,
	BarAccidentalDistance = 110,
	MultiMeasureRestMargin = 111,
	NoteBarDistance = 112,

	MeasureSpacing = 113,
	StaffLineWidth = 114,
	LedgerLineWidth = 115,
	LedgerLineLength = 116,
	AccidentalDistance = 117,
	AccidentalNoteDistance = 118,
	BeamWidth = 119,
	BeamDistance = 120,
	BeamMinLen = 121,
	BeamNoSlope = 122,

	DotMag = 123,
	DotNoteDistance = 124,
	DotRestDistance = 125,
	DotDotDistance = 126,
	PropertyDistanceHead = 127,
	PropertyDistanceStem = 128,
	PropertyDistance = 129,
	ArticulationMag = 130,
	ArticulationPosAbove = 131,
	ArticulationAnchorDefault = 132,
	ArticulationAnchorLuteFingering = 133,
	ArticulationAnchorOther = 134,
	LastSystemFillLimit = 135,

	HairpinPlacement = 136,
	HairpinPosAbove = 137,
	HairpinPosBelow = 138,
	HairpinLinePosAbove = 139,
	HairpinLinePosBelow = 140,
	HairpinHeight = 141,
	HairpinContHeight = 142,
	HairpinLineWidth = 143,
	HairpinFontFace = 144,
	HairpinFontSize = 145,
	HairpinFontSpatiumDependent = 146,
	HairpinFontStyle = 147,
	HairpinColor = 148,
	HairpinTextAlign = 149,
	HairpinFrameType = 150,
	HairpinFramePadding = 151,
	HairpinFrameWidth = 152,
	HairpinFrameRound = 153,
	HairpinFrameFgColor = 154,
	HairpinFrameBgColor = 155,
	HairpinText = 156,
	HairpinCrescText = 157,
	HairpinDecrescText = 158,
	HairpinCrescContText = 159,
	HairpinDecrescContText = 160,
	HairpinLineStyle = 161,
	HairpinLineLineStyle = 162,

	PedalPlacement = 163,
	PedalPosAbove = 164,
	PedalPosBelow = 165,
	PedalLineWidth = 166,
	PedalLineStyle = 167,
	PedalBeginTextOffset = 168,
	PedalHookHeight = 169,
	PedalFontFace = 170,
	PedalFontSize = 171,
	PedalFontSpatiumDependent = 172,
	PedalFontStyle = 173,
	PedalColor = 174,
	PedalTextAlign = 175,
	PedalFrameType = 176,
	PedalFramePadding = 177,
	PedalFrameWidth = 178,
	PedalFrameRound = 179,
	PedalFrameFgColor = 180,
	PedalFrameBgColor = 181,

	TrillPlacement = 182,
	TrillPosAbove = 183,
	TrillPosBelow = 184,

	VibratoPlacement = 185,
	VibratoPosAbove = 186,
	VibratoPosBelow = 187,

	HarmonyFretDist = 188,
	MinHarmonyDistance = 189,
	MaxHarmonyBarDistance = 190,
	HarmonyPlacement = 191,
	RomanNumeralPlacement = 192,
	NashvilleNumberPlacement = 193,

	ChordSymbolAPosAbove = 194,
	ChordSymbolAPosBelow = 195,

	ChordSymbolBPosAbove = 196,
	ChordSymbolBPosBelow = 197,

	RomanNumeralPosAbove = 198,
	RomanNumeralPosBelow = 199,

	NashvilleNumberPosAbove = 200,
	NashvilleNumberPosBelow = 201,

	ChordSymbolAFontFace = 202,
	ChordSymbolAFontSize = 203,
	ChordSymbolAFontSpatiumDependent = 204,
	ChordSymbolAFontStyle = 205,
	ChordSymbolAColor = 206,
	ChordSymbolAAlign = 207,
	ChordSymbolAFrameType = 208,
	ChordSymbolAFramePadding = 209,
	ChordSymbolAFrameWidth = 210,
	ChordSymbolAFrameRound = 211,
	ChordSymbolAFrameFgColor = 212,
	ChordSymbolAFrameBgColor = 213,

	ChordSymbolBFontFace = 214,
	ChordSymbolBFontSize = 215,
	ChordSymbolBFontSpatiumDependent = 216,
	ChordSymbolBFontStyle = 217,
	ChordSymbolBColor = 218,
	ChordSymbolBAlign = 219,
	ChordSymbolBFrameType = 220,
	ChordSymbolBFramePadding = 221,
	ChordSymbolBFrameWidth = 222,
	ChordSymbolBFrameRound = 223,
	ChordSymbolBFrameFgColor = 224,
	ChordSymbolBFrameBgColor = 225,

	RomanNumeralFontFace = 226,
	RomanNumeralFontSize = 227,
	RomanNumeralFontSpatiumDependent = 228,
	RomanNumeralFontStyle = 229,
	RomanNumeralColor = 230,
	RomanNumeralAlign = 231,
	RomanNumeralFrameType = 232,
	RomanNumeralFramePadding = 233,
	RomanNumeralFrameWidth = 234,
	RomanNumeralFrameRound = 235,
	RomanNumeralFrameFgColor = 236,
	RomanNumeralFrameBgColor = 237,

	NashvilleNumberFontFace = 238,
	NashvilleNumberFontSize = 239,
	NashvilleNumberFontSpatiumDependent = 240,
	NashvilleNumberFontStyle = 241,
	NashvilleNumberColor = 242,
	NashvilleNumberAlign = 243,
	NashvilleNumberFrameType = 244,
	NashvilleNumberFramePadding = 245,
	NashvilleNumberFrameWidth = 246,
	NashvilleNumberFrameRound = 247,
	NashvilleNumberFrameFgColor = 248,
	NashvilleNumberFrameBgColor = 249,

	CapoPosition = 250,
	FretNumMag = 251,
	FretNumPos = 252,
	FretY = 253,
	FretMinDistance = 254,
	FretMag = 255,
	FretPlacement = 256,
	FretStrings = 257,
	FretFrets = 258,
	FretNut = 259,
	FretDotSize = 260,
	FretStringSpacing = 261,
	FretFretSpacing = 262,

	ShowPageNumber = 263,
	ShowPageNumberOne = 264,
	PageNumberOddEven = 265,
	ShowMeasureNumber = 266,
	ShowMeasureNumberOne = 267,
	MeasureNumberInterval = 268,
	MeasureNumberSystem = 269,

	MeasureNumberAllStaffs = 270,
	SmallNoteMag = 271,
	GraceNoteMag = 272,
	SmallStaffMag = 273,
	SmallClefMag = 274,
	GenClef = 275,
	GenKeysig = 276,
	GenCourtesyTimesig = 277,
	GenCourtesyKeysig = 278,
	GenCourtesyClef = 279,

	SwingRatio = 280,
	SwingUnit = 281,

	UseStandardNoteNames = 282,
	UseGermanNoteNames = 283,
	UseFullGermanNoteNames = 284,
	UseSolfeggioNoteNames = 285,
	UseFrenchNoteNames = 286,
	AutomaticCapitalization = 287,
	LowerCaseMinorChords = 288,
	LowerCaseBassNotes = 289,
	AllCapsNoteNames = 290,
	ChordStyle = 291,
	ChordsXmlFile = 292,
	ChordDescriptionFile = 293,
	ChordExtensionMag = 294,
	ChordExtensionAdjust = 295,
	ChordModifierMag = 296,
	ChordModifierAdjust = 297,
	ConcertPitch = 298,
	CreateMultiMeasureRests = 299,
	MinEmptyMeasures = 300,
	MinMMRestWidth = 301,
	HideEmptyStaves = 302,
	DontHideStavesInFirstSystem = 303,
	HideInstrumentNameIfOneInstrument = 304,
	GateTime = 305,
	TenutoGateTime = 306,
	StaccatoGateTime = 307,
	SlurGateTime = 308,

	ArpeggioNoteDistance = 309,
	ArpeggioLineWidth = 310,
	ArpeggioHookLen = 311,
	ArpeggioHiddenInStdIfTab = 312,

	SlurEndWidth = 313,
	SlurMidWidth = 314,
	SlurDottedWidth = 315,
	MinTieLength = 316,
	SlurMinDistance = 317,

	SectionPause = 318,
	MusicalSymbolFont = 319,
	MusicalTextFont = 320,

	ShowHeader = 321,
	HeaderFirstPage = 322,
	HeaderOddEven = 323,
	EvenHeaderL = 324,
	EvenHeaderC = 325,
	EvenHeaderR = 326,
	OddHeaderL = 327,
	OddHeaderC = 328,
	OddHeaderR = 329,

	ShowFooter = 330,
	FooterFirstPage = 331,
	FooterOddEven = 332,
	EvenFooterL = 333,
	EvenFooterC = 334,
	EvenFooterR = 335,
	OddFooterL = 336,
	OddFooterC = 337,
	OddFooterR = 338,

	VoltaPosAbove = 339,
	VoltaHook = 340,
	VoltaLineWidth = 341,
	VoltaLineStyle = 342,
	VoltaFontFace = 343,
	VoltaFontSize = 344,
	VoltaFontSpatiumDependent = 345,
	VoltaFontStyle = 346,
	VoltaColor = 347,
	VoltaAlign = 348,
	VoltaOffset = 349,
	VoltaFrameType = 350,
	VoltaFramePadding = 351,
	VoltaFrameWidth = 352,
	VoltaFrameRound = 353,
	VoltaFrameFgColor = 354,
	VoltaFrameBgColor = 355,

	Ottava8VAPlacement = 356,
	Ottava8VBPlacement = 357,
	Ottava15MAPlacement = 358,
	Ottava15MBPlacement = 359,
	Ottava22MAPlacement = 360,
	Ottava22MBPlacement = 361,

	Ottava8VAText = 362,
	Ottava8VAContinueText = 363,
	Ottava8VBText = 364,
	Ottava8VBContinueText = 365,
	Ottava15MAText = 366,
	Ottava15MAContinueText = 367,
	Ottava15MBText = 368,
	Ottava15MBContinueText = 369,
	Ottava22MAText = 370,
	Ottava22MAContinueText = 371,
	Ottava22MBText = 372,
	Ottava22MBContinueText = 373,

	Ottava8VAnoText = 374,
	Ottava8VAnoContinueText = 375,
	Ottava8VBnoText = 376,
	Ottava8VBnoContinueText = 377,
	Ottava15MAnoText = 378,
	Ottava15MAnoContinueText = 379,
	Ottava15MBnoText = 380,
	Ottava15MBnoContinueText = 381,
	Ottava22MAnoText = 382,
	Ottava22MAnoContinueText = 383,
	Ottava22MBnoText = 384,
	Ottava22MBnoContinueText = 385,

	OttavaPosAbove = 386,
	OttavaPosBelow = 387,
	OttavaHookAbove = 388,
	OttavaHookBelow = 389,
	OttavaLineWidth = 390,
	OttavaLineStyle = 391,
	OttavaNumbersOnly = 392,
	OttavaFontFace = 393,
	OttavaFontSize = 394,
	OttavaFontSpatiumDependent = 395,
	OttavaFontStyle = 396,
	OttavaColor = 397,
	OttavaTextAlign = 398,
	OttavaFrameType = 399,
	OttavaFramePadding = 400,
	OttavaFrameWidth = 401,
	OttavaFrameRound = 402,
	OttavaFrameFgColor = 403,
	OttavaFrameBgColor = 404,

	TabClef = 405,

	TremoloWidth = 406,
	TremoloBoxHeight = 407,
	TremoloStrokeWidth = 408,
	TremoloDistance = 409,
	TremoloPlacement = 410,
// TODO tremoloBeamLengthMultiplier
// TODO tremoloMaxBeamLength

	LinearStretch = 411,
	CrossMeasureValues = 412,
	KeySigNaturals = 413,

	TupletMaxSlope = 414,
	TupletOufOfStaff = 415,
	TupletVHeadDistance = 416,
	TupletVStemDistance = 417,
	TupletStemLeftDistance = 418,
	TupletStemRightDistance = 419,
	TupletNoteLeftDistance = 420,
	TupletNoteRightDistance = 421,
	TupletBracketWidth = 422,
	TupletDirection = 423,
	TupletNumberType = 424,
	TupletBracketType = 425,
	TupletFontFace = 426,
	TupletFontSize = 427,
	TupletFontSpatiumDependent = 428,
	TupletFontStyle = 429,
	TupletColor = 430,
	TupletAlign = 431,
	TupletBracketHookHeight = 432,
	TupletOffset = 433,
	TupletFrameType = 434,
	TupletFramePadding = 435,
	TupletFrameWidth = 436,
	TupletFrameRound = 437,
	TupletFrameFgColor = 438,
	TupletFrameBgColor = 439,

	BarreLineWidth = 440,
	ScaleBarlines = 441,
	BarGraceDistance = 442,

	MinVerticalDistance = 443,
	OrnamentStyle = 444,
	Spatium = 445,

	AutoplaceHairpinDynamicsDistance = 446,

	DynamicsPlacement = 447,
	DynamicsPosAbove = 448,
	DynamicsPosBelow = 449,

	DynamicsMinDistance = 450,
	AutoplaceVerticalAlignRange = 451,

	TextLinePlacement = 452,
	TextLinePosAbove = 453,
	TextLinePosBelow = 454,
	TextLineFrameType = 455,
	TextLineFramePadding = 456,
	TextLineFrameWidth = 457,
	TextLineFrameRound = 458,
	TextLineFrameFgColor = 459,
	TextLineFrameBgColor = 460,

	TremoloBarLineWidth = 461,
	JumpPosAbove = 462,
	MarkerPosAbove = 463,

	DefaultFontFace = 464,
	DefaultFontSize = 465,
	DefaultFontSpatiumDependent = 466,
	DefaultFontStyle = 467,
	DefaultColor = 468,
	DefaultAlign = 469,
	DefaultFrameType = 470,
	DefaultFramePadding = 471,
	DefaultFrameWidth = 472,
	DefaultFrameRound = 473,
	DefaultFrameFgColor = 474,
	DefaultFrameBgColor = 475,
	DefaultOffset = 476,
	DefaultOffsetType = 477,
	DefaultSystemFlag = 478,
	DefaultText = 479,

	TitleFontFace = 480,
	TitleFontSize = 481,
	TitleFontSpatiumDependent = 482,
	TitleFontStyle = 483,
	TitleColor = 484,
	TitleAlign = 485,
	TitleOffset = 486,
	TitleOffsetType = 487,
	TitleFrameType = 488,
	TitleFramePadding = 489,
	TitleFrameWidth = 490,
	TitleFrameRound = 491,
	TitleFrameFgColor = 492,
	TitleFrameBgColor = 493,

	SubTitleFontFace = 494,
	SubTitleFontSize = 495,
	SubTitleFontSpatiumDependent = 496,
	SubTitleFontStyle = 497,
	SubTitleColor = 498,
	SubTitleAlign = 499,
	SubTitleOffset = 500,
	SubTitleOffsetType = 501,
	SubTitleFrameType = 502,
	SubTitleFramePadding = 503,
	SubTitleFrameWidth = 504,
	SubTitleFrameRound = 505,
	SubTitleFrameFgColor = 506,
	SubTitleFrameBgColor = 507,

	ComposerFontFace = 508,
	ComposerFontSize = 509,
	ComposerFontSpatiumDependent = 510,
	ComposerFontStyle = 511,
	ComposerColor = 512,
	ComposerAlign = 513,
	ComposerOffset = 514,
	ComposerOffsetType = 515,
	ComposerFrameType = 516,
	ComposerFramePadding = 517,
	ComposerFrameWidth = 518,
	ComposerFrameRound = 519,
	ComposerFrameFgColor = 520,
	ComposerFrameBgColor = 521,

	LyricistFontFace = 522,
	LyricistFontSize = 523,
	LyricistFontSpatiumDependent = 524,
	LyricistFontStyle = 525,
	LyricistColor = 526,
	LyricistAlign = 527,
	LyricistOffset = 528,
	LyricistOffsetType = 529,
	LyricistFrameType = 530,
	LyricistFramePadding = 531,
	LyricistFrameWidth = 532,
	LyricistFrameRound = 533,
	LyricistFrameFgColor = 534,
	LyricistFrameBgColor = 535,

	FingeringFontFace = 536,
	FingeringFontSize = 537,
	FingeringFontSpatiumDependent = 538,
	FingeringFontStyle = 539,
	FingeringColor = 540,
	FingeringAlign = 541,
	FingeringFrameType = 542,
	FingeringFramePadding = 543,
	FingeringFrameWidth = 544,
	FingeringFrameRound = 545,
	FingeringFrameFgColor = 546,
	FingeringFrameBgColor = 547,
	FingeringOffset = 548,

	LhGuitarFingeringFontFace = 549,
	LhGuitarFingeringFontSize = 550,
	LhGuitarFingeringFontSpatiumDependent = 551,
	LhGuitarFingeringFontStyle = 552,
	LhGuitarFingeringColor = 553,
	LhGuitarFingeringAlign = 554,
	LhGuitarFingeringFrameType = 555,
	LhGuitarFingeringFramePadding = 556,
	LhGuitarFingeringFrameWidth = 557,
	LhGuitarFingeringFrameRound = 558,
	LhGuitarFingeringFrameFgColor = 559,
	LhGuitarFingeringFrameBgColor = 560,
	LhGuitarFingeringOffset = 561,

	RhGuitarFingeringFontFace = 562,
	RhGuitarFingeringFontSize = 563,
	RhGuitarFingeringFontSpatiumDependent = 564,
	RhGuitarFingeringFontStyle = 565,
	RhGuitarFingeringColor = 566,
	RhGuitarFingeringAlign = 567,
	RhGuitarFingeringFrameType = 568,
	RhGuitarFingeringFramePadding = 569,
	RhGuitarFingeringFrameWidth = 570,
	RhGuitarFingeringFrameRound = 571,
	RhGuitarFingeringFrameFgColor = 572,
	RhGuitarFingeringFrameBgColor = 573,
	RhGuitarFingeringOffset = 574,

	StringNumberFontFace = 575,
	StringNumberFontSize = 576,
	StringNumberFontSpatiumDependent = 577,
	StringNumberFontStyle = 578,
	StringNumberColor = 579,
	StringNumberAlign = 580,
	StringNumberFrameType = 581,
	StringNumberFramePadding = 582,
	StringNumberFrameWidth = 583,
	StringNumberFrameRound = 584,
	StringNumberFrameFgColor = 585,
	StringNumberFrameBgColor = 586,
	StringNumberOffset = 587,

	LongInstrumentFontFace = 588,
	LongInstrumentFontSize = 589,
	LongInstrumentFontSpatiumDependent = 590,
	LongInstrumentFontStyle = 591,
	LongInstrumentColor = 592,
	LongInstrumentAlign = 593,
	LongInstrumentOffset = 594,
	LongInstrumentFrameType = 595,
	LongInstrumentFramePadding = 596,
	LongInstrumentFrameWidth = 597,
	LongInstrumentFrameRound = 598,
	LongInstrumentFrameFgColor = 599,
	LongInstrumentFrameBgColor = 600,

	ShortInstrumentFontFace = 601,
	ShortInstrumentFontSize = 602,
	ShortInstrumentFontSpatiumDependent = 603,
	ShortInstrumentFontStyle = 604,
	ShortInstrumentColor = 605,
	ShortInstrumentAlign = 606,
	ShortInstrumentOffset = 607,
	ShortInstrumentFrameType = 608,
	ShortInstrumentFramePadding = 609,
	ShortInstrumentFrameWidth = 610,
	ShortInstrumentFrameRound = 611,
	ShortInstrumentFrameFgColor = 612,
	ShortInstrumentFrameBgColor = 613,

	PartInstrumentFontFace = 614,
	PartInstrumentFontSize = 615,
	PartInstrumentFontSpatiumDependent = 616,
	PartInstrumentFontStyle = 617,
	PartInstrumentColor = 618,
	PartInstrumentAlign = 619,
	PartInstrumentOffset = 620,
	PartInstrumentFrameType = 621,
	PartInstrumentFramePadding = 622,
	PartInstrumentFrameWidth = 623,
	PartInstrumentFrameRound = 624,
	PartInstrumentFrameFgColor = 625,
	PartInstrumentFrameBgColor = 626,

	DynamicsFontFace = 627,
	DynamicsFontSize = 628,
	DynamicsFontSpatiumDependent = 629,
	DynamicsFontStyle = 630,
	DynamicsColor = 631,
	DynamicsAlign = 632,
	DynamicsFrameType = 633,
	DynamicsFramePadding = 634,
	DynamicsFrameWidth = 635,
	DynamicsFrameRound = 636,
	DynamicsFrameFgColor = 637,
	DynamicsFrameBgColor = 638,

	ExpressionFontFace = 639,
	ExpressionFontSize = 640,
	ExpressionFontSpatiumDependent = 641,
	ExpressionFontStyle = 642,
	ExpressionColor = 643,
	ExpressionAlign = 644,
	ExpressionPlacement = 645,
	ExpressionOffset = 646,
	ExpressionFrameType = 647,
	ExpressionFramePadding = 648,
	ExpressionFrameWidth = 649,
	ExpressionFrameRound = 650,
	ExpressionFrameFgColor = 651,
	ExpressionFrameBgColor = 652,

	TempoFontFace = 653,
	TempoFontSize = 654,
	TempoFontSpatiumDependent = 655,
	TempoFontStyle = 656,
	TempoColor = 657,
	TempoAlign = 658,
	TempoSystemFlag = 659,
	TempoPlacement = 660,
	TempoPosAbove = 661,
	TempoPosBelow = 662,
	TempoMinDistance = 663,
	TempoFrameType = 664,
	TempoFramePadding = 665,
	TempoFrameWidth = 666,
	TempoFrameRound = 667,
	TempoFrameFgColor = 668,
	TempoFrameBgColor = 669,

	MetronomeFontFace = 670,
	MetronomeFontSize = 671,
	MetronomeFontSpatiumDependent = 672,
	MetronomeFontStyle = 673,
	MetronomeColor = 674,
	MetronomePlacement = 675,
	MetronomeAlign = 676,
	MetronomeOffset = 677,
	MetronomeFrameType = 678,
	MetronomeFramePadding = 679,
	MetronomeFrameWidth = 680,
	MetronomeFrameRound = 681,
	MetronomeFrameFgColor = 682,
	MetronomeFrameBgColor = 683,

	MeasureNumberFontFace = 684,
	MeasureNumberFontSize = 685,
	MeasureNumberFontSpatiumDependent = 686,
	MeasureNumberFontStyle = 687,
	MeasureNumberColor = 688,
	MeasureNumberOffset = 689,
	MeasureNumberOffsetType = 690,
	MeasureNumberAlign = 691,
	MeasureNumberFrameType = 692,
	MeasureNumberFramePadding = 693,
	MeasureNumberFrameWidth = 694,
	MeasureNumberFrameRound = 695,
	MeasureNumberFrameFgColor = 696,
	MeasureNumberFrameBgColor = 697,

	TranslatorFontFace = 698,
	TranslatorFontSize = 699,
	TranslatorFontSpatiumDependent = 700,
	TranslatorFontStyle = 701,
	TranslatorColor = 702,
	TranslatorAlign = 703,
	TranslatorOffset = 704,
	TranslatorFrameType = 705,
	TranslatorFramePadding = 706,
	TranslatorFrameWidth = 707,
	TranslatorFrameRound = 708,
	TranslatorFrameFgColor = 709,
	TranslatorFrameBgColor = 710,

	SystemTextFontFace = 711,
	SystemTextFontSize = 712,
	SystemTextFontSpatiumDependent = 713,
	SystemTextFontStyle = 714,
	SystemTextColor = 715,
	SystemTextAlign = 716,
	SystemTextOffsetType = 717,
	SystemTextPlacement = 718,
	SystemTextPosAbove = 719,
	SystemTextPosBelow = 720,
	SystemTextMinDistance = 721,
	SystemTextFrameType = 722,
	SystemTextFramePadding = 723,
	SystemTextFrameWidth = 724,
	SystemTextFrameRound = 725,
	SystemTextFrameFgColor = 726,
	SystemTextFrameBgColor = 727,

	StaffTextFontFace = 728,
	StaffTextFontSize = 729,
	StaffTextFontSpatiumDependent = 730,
	StaffTextFontStyle = 731,
	StaffTextColor = 732,
	StaffTextAlign = 733,
	StaffTextOffsetType = 734,
	StaffTextPlacement = 735,
	StaffTextPosAbove = 736,
	StaffTextPosBelow = 737,
	StaffTextMinDistance = 738,
	StaffTextFrameType = 739,
	StaffTextFramePadding = 740,
	StaffTextFrameWidth = 741,
	StaffTextFrameRound = 742,
	StaffTextFrameFgColor = 743,
	StaffTextFrameBgColor = 744,

	RehearsalMarkFontFace = 745,
	RehearsalMarkFontSize = 746,
	RehearsalMarkFontSpatiumDependent = 747,
	RehearsalMarkFontStyle = 748,
	RehearsalMarkColor = 749,
	RehearsalMarkAlign = 750,
	RehearsalMarkFrameType = 751,
	RehearsalMarkFramePadding = 752,
	RehearsalMarkFrameWidth = 753,
	RehearsalMarkFrameRound = 754,
	RehearsalMarkFrameFgColor = 755,
	RehearsalMarkFrameBgColor = 756,
	RehearsalMarkPlacement = 757,
	RehearsalMarkPosAbove = 758,
	RehearsalMarkPosBelow = 759,
	RehearsalMarkMinDistance = 760,

	RepeatLeftFontFace = 761,
	RepeatLeftFontSize = 762,
	RepeatLeftFontSpatiumDependent = 763,
	RepeatLeftFontStyle = 764,
	RepeatLeftColor = 765,
	RepeatLeftAlign = 766,
	RepeatLeftPlacement = 767,
	RepeatLeftFrameType = 768,
	RepeatLeftFramePadding = 769,
	RepeatLeftFrameWidth = 770,
	RepeatLeftFrameRound = 771,
	RepeatLeftFrameFgColor = 772,
	RepeatLeftFrameBgColor = 773,

	RepeatRightFontFace = 774,
	RepeatRightFontSize = 775,
	RepeatRightFontSpatiumDependent = 776,
	RepeatRightFontStyle = 777,
	RepeatRightColor = 778,
	RepeatRightAlign = 779,
	RepeatRightPlacement = 780,
	RepeatRightFrameType = 781,
	RepeatRightFramePadding = 782,
	RepeatRightFrameWidth = 783,
	RepeatRightFrameRound = 784,
	RepeatRightFrameFgColor = 785,
	RepeatRightFrameBgColor = 786,

	FrameFontFace = 787,
	FrameFontSize = 788,
	FrameFontSpatiumDependent = 789,
	FrameFontStyle = 790,
	FrameColor = 791,
	FrameAlign = 792,
	FrameOffset = 793,
	FrameFrameType = 794,
	FrameFramePadding = 795,
	FrameFrameWidth = 796,
	FrameFrameRound = 797,
	FrameFrameFgColor = 798,
	FrameFrameBgColor = 799,

	TextLineFontFace = 800,
	TextLineFontSize = 801,
	TextLineFontSpatiumDependent = 802,
	TextLineFontStyle = 803,
	TextLineColor = 804,
	TextLineTextAlign = 805,

	GlissandoFontFace = 806,
	GlissandoFontSize = 807,
	GlissandoFontSpatiumDependent = 808,
	GlissandoFontStyle = 809,
	GlissandoColor = 810,
	GlissandoAlign = 811,
	GlissandoOffset = 812,
	GlissandoFrameType = 813,
	GlissandoFramePadding = 814,
	GlissandoFrameWidth = 815,
	GlissandoFrameRound = 816,
	GlissandoFrameFgColor = 817,
	GlissandoFrameBgColor = 818,
	GlissandoLineWidth = 819,
	GlissandoText = 820,

	BendFontFace = 821,
	BendFontSize = 822,
	BendFontSpatiumDependent = 823,
	BendFontStyle = 824,
	BendColor = 825,
	BendAlign = 826,
	BendOffset = 827,
	BendFrameType = 828,
	BendFramePadding = 829,
	BendFrameWidth = 830,
	BendFrameRound = 831,
	BendFrameFgColor = 832,
	BendFrameBgColor = 833,
	BendLineWidth = 834,
	BendArrowWidth = 835,

	HeaderFontFace = 836,
	HeaderFontSize = 837,
	HeaderFontSpatiumDependent = 838,
	HeaderFontStyle = 839,
	HeaderColor = 840,
	HeaderAlign = 841,
	HeaderOffset = 842,
	HeaderFrameType = 843,
	HeaderFramePadding = 844,
	HeaderFrameWidth = 845,
	HeaderFrameRound = 846,
	HeaderFrameFgColor = 847,
	HeaderFrameBgColor = 848,

	FooterFontFace = 849,
	FooterFontSize = 850,
	FooterFontSpatiumDependent = 851,
	FooterFontStyle = 852,
	FooterColor = 853,
	FooterAlign = 854,
	FooterOffset = 855,
	FooterFrameType = 856,
	FooterFramePadding = 857,
	FooterFrameWidth = 858,
	FooterFrameRound = 859,
	FooterFrameFgColor = 860,
	FooterFrameBgColor = 861,

	InstrumentChangeFontFace = 862,
	InstrumentChangeFontSize = 863,
	InstrumentChangeFontSpatiumDependent = 864,
	InstrumentChangeFontStyle = 865,
	InstrumentChangeColor = 866,
	InstrumentChangeAlign = 867,
	InstrumentChangeOffset = 868,
	InstrumentChangePlacement = 869,
	InstrumentChangePosAbove = 870,
	InstrumentChangePosBelow = 871,
	InstrumentChangeMinDistance = 872,
	InstrumentChangeFrameType = 873,
	InstrumentChangeFramePadding = 874,
	InstrumentChangeFrameWidth = 875,
	InstrumentChangeFrameRound = 876,
	InstrumentChangeFrameFgColor = 877,
	InstrumentChangeFrameBgColor = 878,

	StickingFontFace = 879,
	StickingFontSize = 880,
	StickingFontSpatiumDependent = 881,
	StickingFontStyle = 882,
	StickingColor = 883,
	StickingAlign = 884,
	StickingOffset = 885,
	StickingPlacement = 886,
	StickingPosAbove = 887,
	StickingPosBelow = 888,
	StickingMinDistance = 889,
	StickingFrameType = 890,
	StickingFramePadding = 891,
	StickingFrameWidth = 892,
	StickingFrameRound = 893,
	StickingFrameFgColor = 894,
	StickingFrameBgColor = 895,

	FiguredBassFontFace = 896,
	FiguredBassFontSize = 897,
	FiguredBassFontSpatiumDependent = 898,
	FiguredBassFontStyle = 899,
	FiguredBassColor = 900,

	User1Name = 901,
	User1FontFace = 902,
	User1FontSize = 903,
	User1FontSpatiumDependent = 904,
	User1FontStyle = 905,
	User1Color = 906,
	User1Align = 907,
	User1Offset = 908,
	User1OffsetType = 909,
	User1FrameType = 910,
	User1FramePadding = 911,
	User1FrameWidth = 912,
	User1FrameRound = 913,
	User1FrameFgColor = 914,
	User1FrameBgColor = 915,

	User2Name = 916,
	User2FontFace = 917,
	User2FontSize = 918,
	User2FontSpatiumDependent = 919,
	User2FontStyle = 920,
	User2Color = 921,
	User2Align = 922,
	User2Offset = 923,
	User2OffsetType = 924,
	User2FrameType = 925,
	User2FramePadding = 926,
	User2FrameWidth = 927,
	User2FrameRound = 928,
	User2FrameFgColor = 929,
	User2FrameBgColor = 930,

	User3Name = 931,
	User3FontFace = 932,
	User3FontSize = 933,
	User3FontSpatiumDependent = 934,
	User3FontStyle = 935,
	User3Color = 936,
	User3Align = 937,
	User3Offset = 938,
	User3OffsetType = 939,
	User3FrameType = 940,
	User3FramePadding = 941,
	User3FrameWidth = 942,
	User3FrameRound = 943,
	User3FrameFgColor = 944,
	User3FrameBgColor = 945,

	User4Name = 946,
	User4FontFace = 947,
	User4FontSize = 948,
	User4FontSpatiumDependent = 949,
	User4FontStyle = 950,
	User4Color = 951,
	User4Align = 952,
	User4Offset = 953,
	User4OffsetType = 954,
	User4FrameType = 955,
	User4FramePadding = 956,
	User4FrameWidth = 957,
	User4FrameRound = 958,
	User4FrameFgColor = 959,
	User4FrameBgColor = 960,

	User5Name = 961,
	User5FontFace = 962,
	User5FontSize = 963,
	User5FontSpatiumDependent = 964,
	User5FontStyle = 965,
	User5Color = 966,
	User5Align = 967,
	User5Offset = 968,
	User5OffsetType = 969,
	User5FrameType = 970,
	User5FramePadding = 971,
	User5FrameWidth = 972,
	User5FrameRound = 973,
	User5FrameFgColor = 974,
	User5FrameBgColor = 975,

	User6Name = 976,
	User6FontFace = 977,
	User6FontSize = 978,
	User6FontSpatiumDependent = 979,
	User6FontStyle = 980,
	User6Color = 981,
	User6Align = 982,
	User6Offset = 983,
	User6OffsetType = 984,
	User6FrameType = 985,
	User6FramePadding = 986,
	User6FrameWidth = 987,
	User6FrameRound = 988,
	User6FrameFgColor = 989,
	User6FrameBgColor = 990,

	LetRingFontFace = 991,
	LetRingFontSize = 992,
	LetRingFontSpatiumDependent = 993,
	LetRingFontStyle = 994,
	LetRingColor = 995,
	LetRingTextAlign = 996,
	LetRingHookHeight = 997,
	LetRingPlacement = 998,
	LetRingPosAbove = 999,
	LetRingPosBelow = 1000,
	LetRingLineWidth = 1001,
	LetRingLineStyle = 1002,
	LetRingBeginTextOffset = 1003,
	LetRingText = 1004,
	LetRingFrameType = 1005,
	LetRingFramePadding = 1006,
	LetRingFrameWidth = 1007,
	LetRingFrameRound = 1008,
	LetRingFrameFgColor = 1009,
	LetRingFrameBgColor = 1010,
	LetRingEndHookType = 1011,

	PalmMuteFontFace = 1012,
	PalmMuteFontSize = 1013,
	PalmMuteFontSpatiumDependent = 1014,
	PalmMuteFontStyle = 1015,
	PalmMuteColor = 1016,
	PalmMuteTextAlign = 1017,
	PalmMuteHookHeight = 1018,
	PalmMutePlacement = 1019,
	PalmMutePosAbove = 1020,
	PalmMutePosBelow = 1021,
	PalmMuteLineWidth = 1022,
	PalmMuteLineStyle = 1023,
	PalmMuteBeginTextOffset = 1024,
	PalmMuteText = 1025,
	PalmMuteFrameType = 1026,
	PalmMuteFramePadding = 1027,
	PalmMuteFrameWidth = 1028,
	PalmMuteFrameRound = 1029,
	PalmMuteFrameFgColor = 1030,
	PalmMuteFrameBgColor = 1031,
	PalmMuteEndHookType = 1032,

	FermataPosAbove = 1033,
	FermataPosBelow = 1034,
	FermataMinDistance = 1035,

	FingeringPlacement = 1036,

	ArticulationMinDistance = 1037,
	FingeringMinDistance = 1038,
	HairpinMinDistance = 1039,
	LetRingMinDistance = 1040,
	OttavaMinDistance = 1041,
	PalmMuteMinDistance = 1042,
	PedalMinDistance = 1043,
	RepeatMinDistance = 1044,
	TextLineMinDistance = 1045,
	TrillMinDistance = 1046,
	VibratoMinDistance = 1047,
	VoltaMinDistance = 1048,
	FiguredBassMinDistance = 1049,
	TupletMinDistance = 1050,

	AutoplaceEnabled = 1051,
	LastStyle = 1052,
}

impl StyleId {
	pub fn name(self) -> &'static str { STYLE_NAMES[self as usize] }

	pub fn id(self) -> u32 { self as u32 }
}

impl PartialEq<u32> for StyleId {
	fn eq(&self, other: &u32) -> bool { self.id() == *other }
}

impl Into<u32> for StyleId {
	fn into(self) -> u32 { self as u32 }
}

impl From<u32> for StyleId {
	fn from(i: u32) -> Self { Self::from_u32(i).unwrap_or(StyleId::NoStyle) }
}

pub const STYLE_COUNT: usize = StyleId::LastStyle as usize;

#[derive(Clone, Copy, Debug, Primitive, PartialEq, Eq, Hash)]
pub enum Placement {
	Above = 0,
	Below = 1,
}

pub const ALIGN_LEFT: u32     = 0;
pub const ALIGN_RIGHT: u32    = 1;
pub const ALIGN_HCENTER: u32  = 2;
pub const ALIGN_TOP: u32      = 0;
pub const ALIGN_BOTTOM: u32   = 4;
pub const ALIGN_VCENTER: u32  = 8;
pub const ALIGN_BASELINE: u32 = 16;
pub const ALIGN_CENTER: u32 = ALIGN_HCENTER | ALIGN_VCENTER;
pub const ALIGN_HMASK: u32  = ALIGN_LEFT    | ALIGN_RIGHT    | ALIGN_HCENTER;
pub const ALIGN_VMASK: u32  = ALIGN_TOP     | ALIGN_BOTTOM   | ALIGN_VCENTER | ALIGN_BASELINE;

#[derive(Clone, Copy, Debug, Primitive, PartialEq, Eq, Hash)]
pub enum FontStyle {
	Normal = 0, 
	Bold = 1, 
	Italic = 2, 
	Underline = 4
}

#[derive(Clone, Copy, Debug, Primitive, PartialEq, Eq, Hash)]
pub enum FrameType {
	NoFrame = 0, 
	Square = 1, 
	Circle = 2,
}

#[derive(Clone, Copy, Debug, Primitive, PartialEq, Eq, Hash)]
pub enum ArticulationAnchor {
	TopStaff = 0,      // anchor is always placed at top of staff
	BottomStaff = 1,   // anchor is always placed at bottom of staff
	Chord = 2,          // anchor depends on chord direction, away from stem
	TopChord = 3,      // attribute is always placed at top of chord
	BottomChord = 4,   // attribute is placed at bottom of chord
}

#[derive(Clone, Copy, Debug, Primitive, PartialEq, Eq, Hash)]
pub enum HookStyleType {
	None = 0,
	Hook90 = 1,
	Hook45 = 2,
	Hook90T = 3,
}

#[derive(Clone, Copy, Debug, Primitive, PartialEq, Eq, Hash)]
pub enum LineStyle { // pen style
	NoPen = 0,
	SolidLine = 1,
	DashLine = 2,
	DotLine = 3,
	DashDotLine = 4,
	DashDotDotLine = 5,
	CustomDashLine = 6,
}

#[derive(Clone, Copy, Debug, Primitive, PartialEq, Eq, Hash)]
pub enum TremoloPlacement {
	Default = 0,
	StemCenter = 1,
}

#[derive(Clone, Copy, Debug, Primitive, PartialEq, Eq, Hash)]
pub enum KeySigNatural {
	None = 0,             // no naturals, except for change to CMaj/Amin
	Before = 1,             // naturals before accidentals
	After = 2,              // naturals after accidentals (but always before if going sharps <=> flats)
}

#[derive(Clone, Copy, Debug, Primitive, PartialEq, Eq, Hash)]
pub enum TupletNumberType {
	ShowNumber = 0,
	ShowRelation = 1,
	NoText = 2,
}

#[derive(Clone, Copy, Debug, Primitive, PartialEq, Eq, Hash)]
pub enum TupletBracketType {
	AutoBracket = 0,
	ShowBracket = 1,
	ShowNoBracket = 2,
}

#[derive(Clone, Copy, Debug, Primitive, PartialEq, Eq, Hash)]
pub enum OffsetType {
	/// offset in point units
	Abs = 1,
	/// offset in staff space units
	Spatium = 2,
}

#[derive(Clone, Copy, Debug, Primitive, PartialEq, Eq, Hash)]
pub enum VerticalAlignRange {
	Segment = 0,
	Measure = 1,
	System = 2,
}

#[derive(Clone, Copy, Debug, Primitive, PartialEq, Eq, Hash)]
pub enum OrnamentStyle {
	Default = 0,
	Baroque = 1,
}

pub(super) fn style_default_values() -> [(StyleId, StyleValue); STYLE_COUNT] {[
	(StyleId::PageWidth,                   StyleValue::Float(210.0/INCH)),
	(StyleId::PageHeight,                  StyleValue::Float(297.0/INCH)), // A4
	(StyleId::PagePrintableWidth,          StyleValue::Float(190.0/INCH)),
	(StyleId::PageEvenLeftMargin,          StyleValue::Float(10.0/INCH)),
	(StyleId::PageOddLeftMargin,           StyleValue::Float(10.0/INCH)),
	(StyleId::PageEvenTopMargin,           StyleValue::Float(10.0/INCH)),
	(StyleId::PageEvenBottomMargin,        StyleValue::Float(20.0/INCH)),
	(StyleId::PageOddTopMargin,            StyleValue::Float(10.0/INCH)),
	(StyleId::PageOddBottomMargin,         StyleValue::Float(20.0/INCH)),
	(StyleId::PageTwosided,                StyleValue::Bool(true)),

	(StyleId::StaffUpperBorder,            StyleValue::Spatium(7.0)),
	(StyleId::StaffLowerBorder,            StyleValue::Spatium(7.0)),
	(StyleId::StaffDistance,               StyleValue::Spatium(6.5)),
	(StyleId::AkkoladeDistance,            StyleValue::Spatium(6.5)),
	(StyleId::MinSystemDistance,           StyleValue::Spatium(8.5)),
	(StyleId::MaxSystemDistance,           StyleValue::Spatium(15.0)),

	(StyleId::LyricsPlacement,             StyleValue::UInt(Placement::Below as u32)),
	(StyleId::LyricsPosAbove,              StyleValue::Point(Point2F::new(0.0, -2.0))),
	(StyleId::LyricsPosBelow,              StyleValue::Point(Point2F::new(0.0, 3.0))),
	(StyleId::LyricsMinTopDistance,        StyleValue::Spatium(1.0)),
	(StyleId::LyricsMinBottomDistance,     StyleValue::Spatium(2.0)),
	(StyleId::LyricsMinDistance,           StyleValue::Spatium(0.0)),
	(StyleId::LyricsLineHeight,            StyleValue::Float(1.0)),
	(StyleId::LyricsDashMinLength,         StyleValue::Spatium(0.4)),
	(StyleId::LyricsDashMaxLength,         StyleValue::Spatium(0.8)),
	(StyleId::LyricsDashMaxDistance,       StyleValue::Spatium(16.0)),
	(StyleId::LyricsDashForce,             StyleValue::Bool(true)),
	(StyleId::LyricsAlignVerseNumber,      StyleValue::Bool(true)),
	(StyleId::LyricsLineThickness,         StyleValue::Spatium(0.1)),
	(StyleId::LyricsMelismaAlign,          StyleValue::UInt(ALIGN_LEFT | ALIGN_BASELINE)),

	(StyleId::LyricsMelismaPad,            StyleValue::Spatium(0.10)), // the empty space before a melisma line
	(StyleId::LyricsDashPad,               StyleValue::Spatium(0.05)), // the min. empty space before and after a dash
	(StyleId::LyricsDashLineThickness,     StyleValue::Spatium(0.15)), // in sp. units
	(StyleId::LyricsDashYposRatio,         StyleValue::Float(0.67)), // the fraction of lyrics font x-height to raise the dashes above text base line

	(StyleId::LyricsOddFontFace,           StyleValue::String("FreeSerif".to_string())),
	(StyleId::LyricsOddFontSize,           StyleValue::Float(11.0)),
	(StyleId::LyricsOddFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::LyricsOddFontStyle,          StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::LyricsOddColor,              StyleValue::Color([0, 0, 0, 255])),
	(StyleId::LyricsOddAlign,              StyleValue::UInt(ALIGN_HCENTER | ALIGN_BASELINE)),
	(StyleId::LyricsOddFrameType,          StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::LyricsOddFramePadding,       StyleValue::Float(0.2)),
	(StyleId::LyricsOddFrameWidth,         StyleValue::Float(0.1)),
	(StyleId::LyricsOddFrameRound,         StyleValue::Int(0)),
	(StyleId::LyricsOddFrameFgColor,       StyleValue::Color([0, 0, 0, 255])),
	(StyleId::LyricsOddFrameBgColor,       StyleValue::Color([255, 255, 255, 0])),

	(StyleId::LyricsEvenFontFace,          StyleValue::String("FreeSerif".to_string())),
	(StyleId::LyricsEvenFontSize,          StyleValue::Float(11.0)),
	(StyleId::LyricsEvenFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::LyricsEvenFontStyle,         StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::LyricsEvenColor,             StyleValue::Color([0, 0, 0, 255])),
	(StyleId::LyricsEvenAlign,             StyleValue::UInt(ALIGN_HCENTER | ALIGN_BASELINE)),
	(StyleId::LyricsEvenFrameType,         StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::LyricsEvenFramePadding,      StyleValue::Float(0.2)),
	(StyleId::LyricsEvenFrameWidth,        StyleValue::Float(0.1)),
	(StyleId::LyricsEvenFrameRound,        StyleValue::Int(0)),
	(StyleId::LyricsEvenFrameFgColor,      StyleValue::Color([0, 0, 0, 255])),
	(StyleId::LyricsEvenFrameBgColor,      StyleValue::Color([255, 255, 255, 0])),

	(StyleId::FiguredBassFontFamily,       StyleValue::String("MScoreBC".to_string())),

	(StyleId::FiguredBassFontSize,         StyleValue::Float(8.0)),
	(StyleId::FiguredBassYOffset,          StyleValue::Float(6.0)),
	(StyleId::FiguredBassLineHeight,       StyleValue::Float(1.0)),
	(StyleId::FiguredBassAlignment,        StyleValue::Int(0)),
	(StyleId::FiguredBassStyle,            StyleValue::Int(0)),
	(StyleId::SystemFrameDistance,         StyleValue::Spatium(7.0)),
	(StyleId::FrameSystemDistance,         StyleValue::Spatium(7.0)),
	(StyleId::MinMeasureWidth,             StyleValue::Spatium(5.0)),
	(StyleId::BarWidth,                    StyleValue::Spatium(0.16)),
	(StyleId::DoubleBarWidth,              StyleValue::Spatium(0.16)),

	(StyleId::EndBarWidth,                 StyleValue::Spatium(0.5)),
	(StyleId::DoubleBarDistance,           StyleValue::Spatium(0.40 + 0.16)),
	(StyleId::EndBarDistance,              StyleValue::Spatium(0.40 + (0.16 + 0.50) * 0.5)),
	(StyleId::RepeatBarlineDotSeparation,  StyleValue::Spatium(0.40 + 0.46 * 0.5)),
	(StyleId::RepeatBarTips,               StyleValue::Bool(false)),
	(StyleId::StartBarlineSingle,          StyleValue::Bool(false)),
	(StyleId::StartBarlineMultiple,        StyleValue::Bool(true)),
	(StyleId::BracketWidth,                StyleValue::Spatium(0.45)),
	(StyleId::BracketDistance,             StyleValue::Spatium(0.1)),
	(StyleId::AkkoladeWidth,               StyleValue::Spatium(1.6)),
	(StyleId::AkkoladeBarDistance,         StyleValue::Spatium(0.4)),

	(StyleId::DividerLeft,                 StyleValue::Bool(false)),
	(StyleId::DividerLeftSym,              StyleValue::String("systemDivider".to_string())),
	(StyleId::DividerLeftX,                StyleValue::Float(0.0)),
	(StyleId::DividerLeftY,                StyleValue::Float(0.0)),
	(StyleId::DividerRight,                StyleValue::Bool(false)),
	(StyleId::DividerRightSym,             StyleValue::String("systemDivider".to_string())),
	(StyleId::DividerRightX,               StyleValue::Float(0.0)),
	(StyleId::DividerRightY,               StyleValue::Float(0.0)),

	(StyleId::ClefLeftMargin,              StyleValue::Spatium(0.8)),     // 0.64 (gould: <= 1)
	(StyleId::KeysigLeftMargin,            StyleValue::Spatium(0.5)),
	(StyleId::AmbitusMargin,               StyleValue::Spatium(0.5)),

	(StyleId::TimesigLeftMargin,           StyleValue::Spatium(0.5)),
	(StyleId::TimesigScale,                StyleValue::Point(Point2F::new(1.0, 1.0))),
	(StyleId::MidClefKeyRightMargin,       StyleValue::Spatium(1.0)),
	(StyleId::ClefKeyRightMargin,          StyleValue::Spatium(0.8)),
	(StyleId::ClefKeyDistance,             StyleValue::Spatium(1.0)),   // gould: 1 - 1.25
	(StyleId::ClefTimesigDistance,         StyleValue::Spatium(1.0)),
	(StyleId::KeyTimesigDistance,          StyleValue::Spatium(1.0)),    // gould: 1 - 1.5
	(StyleId::KeyBarlineDistance,          StyleValue::Spatium(1.0)),
	(StyleId::SystemHeaderDistance,        StyleValue::Spatium(2.5)),     // gould: 2.5
	(StyleId::SystemHeaderTimeSigDistance, StyleValue::Spatium(2.0)),  // gould: 2.0

	(StyleId::ClefBarlineDistance,         StyleValue::Spatium(0.5)),
	(StyleId::TimesigBarlineDistance,      StyleValue::Spatium(0.5)),
	(StyleId::StemWidth,                   StyleValue::Spatium(0.13)),      // 0.09375
	(StyleId::ShortenStem,                 StyleValue::Bool(true)),
	(StyleId::ShortStemProgression,        StyleValue::Spatium(0.25)),
	(StyleId::ShortestStem,                StyleValue::Spatium(2.25)),
	(StyleId::BeginRepeatLeftMargin,       StyleValue::Spatium(1.0)),
	(StyleId::MinNoteDistance,             StyleValue::Spatium(0.25)),      // 0.4
	(StyleId::BarNoteDistance,             StyleValue::Spatium(1.0)),     // was 1.2

	(StyleId::BarAccidentalDistance,       StyleValue::Spatium(0.3)),
	(StyleId::MultiMeasureRestMargin,      StyleValue::Spatium(1.2)),
	(StyleId::NoteBarDistance,             StyleValue::Spatium(1.0)),
	(StyleId::MeasureSpacing,              StyleValue::Float(1.2)),
	(StyleId::StaffLineWidth,              StyleValue::Spatium(0.08)),     // 0.09375
	(StyleId::LedgerLineWidth,             StyleValue::Spatium(0.16)),     // 0.1875
	(StyleId::LedgerLineLength,            StyleValue::Spatium(0.6)),     // notehead width + this value
	(StyleId::AccidentalDistance,          StyleValue::Spatium(0.22)),
	(StyleId::AccidentalNoteDistance,      StyleValue::Spatium(0.22)),

	(StyleId::BeamWidth,                   StyleValue::Spatium(0.5)),     // was 0.48
	(StyleId::BeamDistance,                StyleValue::Float(0.5)),     // 0.25sp units
	(StyleId::BeamMinLen,                  StyleValue::Spatium(1.32)),     // 1.316178 exactly notehead widthen beams
	(StyleId::BeamNoSlope,                 StyleValue::Bool(false)),

	(StyleId::DotMag,                      StyleValue::Float(1.0)),
	(StyleId::DotNoteDistance,             StyleValue::Spatium(0.35)),
	(StyleId::DotRestDistance,             StyleValue::Spatium(0.25)),
	(StyleId::DotDotDistance,              StyleValue::Spatium(0.5)),
	(StyleId::PropertyDistanceHead,        StyleValue::Spatium(1.0)),
	(StyleId::PropertyDistanceStem,        StyleValue::Spatium(1.8)),
	(StyleId::PropertyDistance,            StyleValue::Spatium(1.0)),

	(StyleId::ArticulationMag,             StyleValue::Float(1.0)),
	(StyleId::ArticulationPosAbove,        StyleValue::Point(Point2F::new(0.0, 0.0))),
	(StyleId::ArticulationAnchorDefault,   StyleValue::UInt(ArticulationAnchor::Chord as u32)),
	(StyleId::ArticulationAnchorLuteFingering,StyleValue::UInt(ArticulationAnchor::BottomChord as u32)),
	(StyleId::ArticulationAnchorOther,     StyleValue::UInt(ArticulationAnchor::TopStaff as u32)),
	(StyleId::LastSystemFillLimit,         StyleValue::Float(0.3)),

	(StyleId::HairpinPlacement,            StyleValue::UInt(Placement::Below as u32)),
	(StyleId::HairpinPosAbove,             StyleValue::Point(Point2F::new(0.0, -3.5))),
	(StyleId::HairpinPosBelow,             StyleValue::Point(Point2F::new(0.0, 3.5))),
	(StyleId::HairpinLinePosAbove,         StyleValue::Point(Point2F::new(0.0, -3.0))),
	(StyleId::HairpinLinePosBelow,         StyleValue::Point(Point2F::new(0.0, 4.0))),
	(StyleId::HairpinHeight,               StyleValue::Spatium(1.2)),
	(StyleId::HairpinContHeight,           StyleValue::Spatium(0.5)),
	(StyleId::HairpinLineWidth,            StyleValue::Spatium(0.13)),
	(StyleId::HairpinFontFace,             StyleValue::String("FreeSerif".to_string())),
	(StyleId::HairpinFontSize,             StyleValue::Float(12.0)),
	(StyleId::HairpinFontSpatiumDependent, StyleValue::Bool(true)),
	(StyleId::HairpinFontStyle,            StyleValue::UInt(FontStyle::Italic as u32)),
	(StyleId::HairpinColor,                StyleValue::Color([0, 0, 0, 255])),
	(StyleId::HairpinTextAlign,            StyleValue::UInt(ALIGN_LEFT | ALIGN_BASELINE)),
	(StyleId::HairpinFrameType,            StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::HairpinFramePadding,         StyleValue::Float(0.2)),
	(StyleId::HairpinFrameWidth,           StyleValue::Float(0.1)),
	(StyleId::HairpinFrameRound,           StyleValue::Int(0)),
	(StyleId::HairpinFrameFgColor,         StyleValue::Color([0, 0, 0, 255])),
	(StyleId::HairpinFrameBgColor,         StyleValue::Color([255, 255, 255, 0])),
	(StyleId::HairpinText,                 StyleValue::String("".to_string())),
	(StyleId::HairpinCrescText,            StyleValue::String("cresc.".to_string())),
	(StyleId::HairpinDecrescText,          StyleValue::String("dim.".to_string())),
	(StyleId::HairpinCrescContText,        StyleValue::String("(cresc.)".to_string())),
	(StyleId::HairpinDecrescContText,      StyleValue::String("(dim.)".to_string())),
	(StyleId::HairpinLineStyle,            StyleValue::UInt(LineStyle::SolidLine as u32)),
	(StyleId::HairpinLineLineStyle,        StyleValue::UInt(LineStyle::CustomDashLine as u32)),

	(StyleId::PedalPlacement,              StyleValue::UInt(Placement::Below as u32)),
	(StyleId::PedalPosAbove,               StyleValue::Point(Point2F::new(0.0, -4.))),
	(StyleId::PedalPosBelow,               StyleValue::Point(Point2F::new(0.0, 4.))),
	(StyleId::PedalLineWidth,              StyleValue::Spatium(0.15)),
	(StyleId::PedalLineStyle,              StyleValue::UInt(LineStyle::SolidLine as u32)),
	(StyleId::PedalBeginTextOffset,        StyleValue::Point(Point2F::new(0.0, 0.15))),
	(StyleId::PedalHookHeight,             StyleValue::Spatium(-1.2)),
	(StyleId::PedalFontFace,               StyleValue::String("FreeSerif".to_string())),
	(StyleId::PedalFontSize,               StyleValue::Float(12.0)),
	(StyleId::PedalFontSpatiumDependent,   StyleValue::Bool(true)),
	(StyleId::PedalFontStyle,              StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::PedalColor,                  StyleValue::Color([0, 0, 0, 255])),
	(StyleId::PedalTextAlign,              StyleValue::UInt(ALIGN_LEFT | ALIGN_BASELINE)),
	(StyleId::PedalFrameType,              StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::PedalFramePadding,           StyleValue::Float(0.2)),
	(StyleId::PedalFrameWidth,             StyleValue::Float(0.1)),
	(StyleId::PedalFrameRound,             StyleValue::Int(0)),
	(StyleId::PedalFrameFgColor,           StyleValue::Color([0, 0, 0, 255])),
	(StyleId::PedalFrameBgColor,           StyleValue::Color([255, 255, 255, 0])),

	(StyleId::TrillPlacement,              StyleValue::UInt(Placement::Above as u32)),
	(StyleId::TrillPosAbove,               StyleValue::Point(Point2F::new(0.0, -1.))),
	(StyleId::TrillPosBelow,               StyleValue::Point(Point2F::new(0.0, 1.))),

	(StyleId::VibratoPlacement,            StyleValue::UInt(Placement::Above as u32)),
	(StyleId::VibratoPosAbove,             StyleValue::Point(Point2F::new(0.0, -1.))),
	(StyleId::VibratoPosBelow,             StyleValue::Point(Point2F::new(0.0, 1.))),

	(StyleId::HarmonyFretDist,             StyleValue::Spatium(1.0)),
	(StyleId::MinHarmonyDistance,          StyleValue::Spatium(0.5)),
	(StyleId::MaxHarmonyBarDistance,       StyleValue::Spatium(3.0)),

	(StyleId::HarmonyPlacement,            StyleValue::UInt(Placement::Above as u32)),
	(StyleId::RomanNumeralPlacement,       StyleValue::UInt(Placement::Below as u32)),
	(StyleId::NashvilleNumberPlacement,    StyleValue::UInt(Placement::Above as u32)),

	(StyleId::ChordSymbolAPosAbove,        StyleValue::Point(Point2F::new(0.0, -2.5))),
	(StyleId::ChordSymbolAPosBelow,        StyleValue::Point(Point2F::new(0.0, 3.5))),

	(StyleId::ChordSymbolBPosAbove,        StyleValue::Point(Point2F::new(0.0, -5.0))),
	(StyleId::ChordSymbolBPosBelow,        StyleValue::Point(Point2F::new(0.0, 3.5))),

	(StyleId::RomanNumeralPosAbove,        StyleValue::Point(Point2F::new(0.0, -2.5))),
	(StyleId::RomanNumeralPosBelow,        StyleValue::Point(Point2F::new(0.0, 3.5))),

	(StyleId::NashvilleNumberPosAbove,     StyleValue::Point(Point2F::new(0.0, -2.5))),
	(StyleId::NashvilleNumberPosBelow,     StyleValue::Point(Point2F::new(0.0, 3.5))),

	(StyleId::ChordSymbolAFontFace,        StyleValue::String("FreeSerif".to_string())),
	(StyleId::ChordSymbolAFontSize,        StyleValue::Float(12.0)),
	(StyleId::ChordSymbolAFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::ChordSymbolAFontStyle,       StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::ChordSymbolAColor,           StyleValue::Color([0, 0, 0, 255])),
	(StyleId::ChordSymbolAAlign,           StyleValue::UInt(ALIGN_LEFT | ALIGN_BASELINE)),
	(StyleId::ChordSymbolAFrameType,       StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::ChordSymbolAFramePadding,    StyleValue::Float(0.2)),
	(StyleId::ChordSymbolAFrameWidth,      StyleValue::Float(0.1)),
	(StyleId::ChordSymbolAFrameRound,      StyleValue::Int(0)),
	(StyleId::ChordSymbolAFrameFgColor,    StyleValue::Color([0, 0, 0, 255])),
	(StyleId::ChordSymbolAFrameBgColor,    StyleValue::Color([255, 255, 255, 0])),

	(StyleId::ChordSymbolBFontFace,        StyleValue::String("FreeSerif".to_string())),
	(StyleId::ChordSymbolBFontSize,        StyleValue::Float(12.0)),
	(StyleId::ChordSymbolBFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::ChordSymbolBFontStyle,       StyleValue::UInt(FontStyle::Italic as u32)),
	(StyleId::ChordSymbolBColor,           StyleValue::Color([0, 0, 0, 255])),
	(StyleId::ChordSymbolBAlign,           StyleValue::UInt(ALIGN_LEFT | ALIGN_BASELINE)),
	(StyleId::ChordSymbolBFrameType,       StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::ChordSymbolBFramePadding,    StyleValue::Float(0.2)),
	(StyleId::ChordSymbolBFrameWidth,      StyleValue::Float(0.1)),
	(StyleId::ChordSymbolBFrameRound,      StyleValue::Int(0)),
	(StyleId::ChordSymbolBFrameFgColor,    StyleValue::Color([0, 0, 0, 255])),
	(StyleId::ChordSymbolBFrameBgColor,    StyleValue::Color([255, 255, 255, 0])),

	(StyleId::RomanNumeralFontFace,        StyleValue::String("Campania".to_string())),
	(StyleId::RomanNumeralFontSize,        StyleValue::Float(12.0)),
	(StyleId::RomanNumeralFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::RomanNumeralFontStyle,       StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::RomanNumeralColor,           StyleValue::Color([0, 0, 0, 255])),
	(StyleId::RomanNumeralAlign,           StyleValue::UInt(ALIGN_LEFT | ALIGN_BASELINE)),
	(StyleId::RomanNumeralFrameType,       StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::RomanNumeralFramePadding,    StyleValue::Float(0.2)),
	(StyleId::RomanNumeralFrameWidth,      StyleValue::Float(0.1)),
	(StyleId::RomanNumeralFrameRound,      StyleValue::Int(0)),
	(StyleId::RomanNumeralFrameFgColor,    StyleValue::Color([0, 0, 0, 255])),
	(StyleId::RomanNumeralFrameBgColor,    StyleValue::Color([255, 255, 255, 0])),

	(StyleId::NashvilleNumberFontFace,     StyleValue::String("FreeSerif".to_string())),
	(StyleId::NashvilleNumberFontSize,     StyleValue::Float(12.0)),
	(StyleId::NashvilleNumberFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::NashvilleNumberFontStyle,    StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::NashvilleNumberColor,        StyleValue::Color([0, 0, 0, 255])),
	(StyleId::NashvilleNumberAlign,        StyleValue::UInt(ALIGN_LEFT | ALIGN_BASELINE)),
	(StyleId::NashvilleNumberFrameType,    StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::NashvilleNumberFramePadding, StyleValue::Float(0.2)),
	(StyleId::NashvilleNumberFrameWidth,   StyleValue::Float(0.1)),
	(StyleId::NashvilleNumberFrameRound,   StyleValue::Int(0)),
	(StyleId::NashvilleNumberFrameFgColor, StyleValue::Color([0, 0, 0, 255])),
	(StyleId::NashvilleNumberFrameBgColor, StyleValue::Color([255, 255, 255, 0])),

	(StyleId::CapoPosition,                StyleValue::Int(0)),
	(StyleId::FretNumMag,                  StyleValue::Float(2.0)),
	(StyleId::FretNumPos,                  StyleValue::Int(0)),
	(StyleId::FretY,                       StyleValue::Spatium(2.0)),
	(StyleId::FretMinDistance,             StyleValue::Spatium(0.5)),
	(StyleId::FretMag,                     StyleValue::Float(1.0)),
	(StyleId::FretPlacement,               StyleValue::UInt(Placement::Above as u32)),
	(StyleId::FretStrings,                 StyleValue::Int(6)),
	(StyleId::FretFrets,                   StyleValue::Int(5)),
	(StyleId::FretNut,                     StyleValue::Bool(true)),
	(StyleId::FretDotSize,                 StyleValue::Float(1.0)),
	(StyleId::FretStringSpacing,           StyleValue::Spatium(0.7)),
	(StyleId::FretFretSpacing,             StyleValue::Spatium(0.8)),

	(StyleId::ShowPageNumber,              StyleValue::Bool(true)),
	(StyleId::ShowPageNumberOne,           StyleValue::Bool(false)),
	(StyleId::PageNumberOddEven,           StyleValue::Bool(true)),
	(StyleId::ShowMeasureNumber,           StyleValue::Bool(true)),
	(StyleId::ShowMeasureNumberOne,        StyleValue::Bool(false)),
	(StyleId::MeasureNumberInterval,       StyleValue::Int(5)),
	(StyleId::MeasureNumberSystem,         StyleValue::Bool(true)),
	(StyleId::MeasureNumberAllStaffs,      StyleValue::Bool(false)),
	(StyleId::SmallNoteMag,                StyleValue::Float(0.7)),
	(StyleId::GraceNoteMag,                StyleValue::Float(0.7)),
	(StyleId::SmallStaffMag,               StyleValue::Float(0.7)),
	(StyleId::SmallClefMag,                StyleValue::Float(0.8)),

	(StyleId::GenClef,                     StyleValue::Bool(true)),
	(StyleId::GenKeysig,                   StyleValue::Bool(true)),
	(StyleId::GenCourtesyTimesig,          StyleValue::Bool(true)),
	(StyleId::GenCourtesyKeysig,           StyleValue::Bool(true)),
	(StyleId::GenCourtesyClef,             StyleValue::Bool(true)),
	(StyleId::SwingRatio,                  StyleValue::Int(60)),
	(StyleId::SwingUnit,                   StyleValue::String("".to_string())),
	(StyleId::UseStandardNoteNames,        StyleValue::Bool(true)),
	(StyleId::UseGermanNoteNames,          StyleValue::Bool(false)),
	(StyleId::UseFullGermanNoteNames,      StyleValue::Bool(false)),

	(StyleId::UseSolfeggioNoteNames,       StyleValue::Bool(false)),
	(StyleId::UseFrenchNoteNames,          StyleValue::Bool(false)),
	(StyleId::AutomaticCapitalization,     StyleValue::Bool(true)),
	(StyleId::LowerCaseMinorChords,        StyleValue::Bool(false)),
	(StyleId::LowerCaseBassNotes,          StyleValue::Bool(false)),
	(StyleId::AllCapsNoteNames,            StyleValue::Bool(false)),
	(StyleId::ChordStyle,                  StyleValue::String("std".to_string())),
	(StyleId::ChordsXmlFile,               StyleValue::Bool(false)),
	(StyleId::ChordDescriptionFile,        StyleValue::String("chords_std.xml".to_string())),
	(StyleId::ChordExtensionMag,           StyleValue::Float(1.0)),
	(StyleId::ChordExtensionAdjust,        StyleValue::Float(0.0)),
	(StyleId::ChordModifierMag,            StyleValue::Float(1.0)),
	(StyleId::ChordModifierAdjust,         StyleValue::Float(0.0)),
	(StyleId::ConcertPitch,                StyleValue::Bool(false)),

	(StyleId::CreateMultiMeasureRests,     StyleValue::Bool(false)),
	(StyleId::MinEmptyMeasures,            StyleValue::Int(2)),
	(StyleId::MinMMRestWidth,              StyleValue::Spatium(4.)),
	(StyleId::HideEmptyStaves,             StyleValue::Bool(false)),
	(StyleId::DontHideStavesInFirstSystem, StyleValue::Bool(true)),
	(StyleId::HideInstrumentNameIfOneInstrument,StyleValue::Bool(true)),
	(StyleId::GateTime,                    StyleValue::Float(100.)),
	(StyleId::TenutoGateTime,              StyleValue::Float(100.)),
	(StyleId::StaccatoGateTime,            StyleValue::Int(50)),
	(StyleId::SlurGateTime,                StyleValue::Float(100.)),

	(StyleId::ArpeggioNoteDistance,        StyleValue::Spatium(0.5)),
	(StyleId::ArpeggioLineWidth,           StyleValue::Spatium(0.18)),
	(StyleId::ArpeggioHookLen,             StyleValue::Spatium(0.8)),
	(StyleId::ArpeggioHiddenInStdIfTab,    StyleValue::Bool(false)),
	(StyleId::SlurEndWidth,                StyleValue::Spatium(0.07)),
	(StyleId::SlurMidWidth,                StyleValue::Spatium(0.15)),
	(StyleId::SlurDottedWidth,             StyleValue::Spatium(0.10)),
	(StyleId::MinTieLength,                StyleValue::Spatium(1.0)),
	(StyleId::SlurMinDistance,             StyleValue::Spatium(0.5)),
	(StyleId::SectionPause,                StyleValue::Float(3.0)),
	(StyleId::MusicalSymbolFont,           StyleValue::String("Emmentaler".to_string())),
	(StyleId::MusicalTextFont,             StyleValue::String("MScore Text".to_string())),

	(StyleId::ShowHeader,                  StyleValue::Bool(false)),
	(StyleId::HeaderFirstPage,             StyleValue::Bool(false)),
	(StyleId::HeaderOddEven,               StyleValue::Bool(true)),
	(StyleId::EvenHeaderL,                 StyleValue::String("".to_string())),
	(StyleId::EvenHeaderC,                 StyleValue::String("".to_string())),
	(StyleId::EvenHeaderR,                 StyleValue::String("".to_string())),
	(StyleId::OddHeaderL,                  StyleValue::String("".to_string())),
	(StyleId::OddHeaderC,                  StyleValue::String("".to_string())),
	(StyleId::OddHeaderR,                  StyleValue::String("".to_string())),
	(StyleId::ShowFooter,                  StyleValue::Bool(true)),

	(StyleId::FooterFirstPage,             StyleValue::Bool(true)),
	(StyleId::FooterOddEven,               StyleValue::Bool(true)),
	(StyleId::EvenFooterL,                 StyleValue::String("$p".to_string())),
	(StyleId::EvenFooterC,                 StyleValue::String("$:copyright:".to_string())),
	(StyleId::EvenFooterR,                 StyleValue::String("".to_string())),
	(StyleId::OddFooterL,                  StyleValue::String("".to_string())),
	(StyleId::OddFooterC,                  StyleValue::String("$:copyright:".to_string())),
	(StyleId::OddFooterR,                  StyleValue::String("$p".to_string())),

	(StyleId::VoltaPosAbove,               StyleValue::Point(Point2F::new(0.0, -3.0))),
	(StyleId::VoltaHook,                   StyleValue::Spatium(1.9)),
	(StyleId::VoltaLineWidth,              StyleValue::Spatium(0.1)),
	(StyleId::VoltaLineStyle,              StyleValue::UInt(LineStyle::SolidLine as u32)),
	(StyleId::VoltaFontFace,               StyleValue::String("FreeSerif".to_string())),
	(StyleId::VoltaFontSize,               StyleValue::Float(11.0)),
	(StyleId::VoltaFontSpatiumDependent,   StyleValue::Bool(true)),
	(StyleId::VoltaFontStyle,              StyleValue::UInt(FontStyle::Bold as u32)),
	(StyleId::VoltaColor,                  StyleValue::Color([0, 0, 0, 255])),
	(StyleId::VoltaAlign,                  StyleValue::UInt(ALIGN_LEFT | ALIGN_BASELINE)),
	(StyleId::VoltaOffset,                 StyleValue::Point(Point2F::new(0.5, 1.9))),
	(StyleId::VoltaFrameType,              StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::VoltaFramePadding,           StyleValue::Float(0.2)),
	(StyleId::VoltaFrameWidth,             StyleValue::Float(0.1)),
	(StyleId::VoltaFrameRound,             StyleValue::Int(0)),
	(StyleId::VoltaFrameFgColor,           StyleValue::Color([0, 0, 0, 255])),
	(StyleId::VoltaFrameBgColor,           StyleValue::Color([255, 255, 255, 0])),

	(StyleId::Ottava8VAPlacement,          StyleValue::UInt(Placement::Above as u32)),
	(StyleId::Ottava8VBPlacement,          StyleValue::UInt(Placement::Below as u32)),
	(StyleId::Ottava15MAPlacement,         StyleValue::UInt(Placement::Above as u32)),
	(StyleId::Ottava15MBPlacement,         StyleValue::UInt(Placement::Below as u32)),
	(StyleId::Ottava22MAPlacement,         StyleValue::UInt(Placement::Above as u32)),
	(StyleId::Ottava22MBPlacement,         StyleValue::UInt(Placement::Below as u32)),

	(StyleId::Ottava8VAText,               StyleValue::String("<sym>ottavaAlta</sym>".to_string())),
	(StyleId::Ottava8VAContinueText,       StyleValue::String("<sym>ottavaAlta</sym>".to_string())),
	(StyleId::Ottava8VBText,               StyleValue::String("<sym>ottavaBassa</sym>".to_string())),
	(StyleId::Ottava8VBContinueText,       StyleValue::String("<sym>ottavaBassa</sym>".to_string())),
	(StyleId::Ottava15MAText,              StyleValue::String("<sym>quindicesimaAlta</sym>".to_string())),
	(StyleId::Ottava15MAContinueText,      StyleValue::String("<sym>quindicesimaAlta</sym>".to_string())),
	(StyleId::Ottava15MBText,              StyleValue::String("<sym>quindicesimaBassa</sym>".to_string())),
	(StyleId::Ottava15MBContinueText,      StyleValue::String("<sym>quindicesimaBassa</sym>".to_string())),
	(StyleId::Ottava22MAText,              StyleValue::String("<sym>ventiduesimaAlta</sym>".to_string())),
	(StyleId::Ottava22MAContinueText,      StyleValue::String("<sym>ventiduesimaAlta</sym>".to_string())),
	(StyleId::Ottava22MBText,              StyleValue::String("<sym>ventiduesimaBassa</sym>".to_string())),
	(StyleId::Ottava22MBContinueText,      StyleValue::String("<sym>ventiduesimaBassa</sym>".to_string())),

	(StyleId::Ottava8VAnoText,             StyleValue::String("<sym>ottava</sym>".to_string())),
	(StyleId::Ottava8VAnoContinueText,     StyleValue::String("<sym>ottava</sym>".to_string())),
	(StyleId::Ottava8VBnoText,             StyleValue::String("<sym>ottava</sym>".to_string())),
	(StyleId::Ottava8VBnoContinueText,     StyleValue::String("<sym>ottava</sym>".to_string())),
	(StyleId::Ottava15MAnoText,            StyleValue::String("<sym>quindicesima</sym>".to_string())),
	(StyleId::Ottava15MAnoContinueText,    StyleValue::String("<sym>quindicesima</sym>".to_string())),
	(StyleId::Ottava15MBnoText,            StyleValue::String("<sym>quindicesima</sym>".to_string())),
	(StyleId::Ottava15MBnoContinueText,    StyleValue::String("<sym>quindicesima</sym>".to_string())),
	(StyleId::Ottava22MAnoText,            StyleValue::String("<sym>ventiduesima</sym>".to_string())),
	(StyleId::Ottava22MAnoContinueText,    StyleValue::String("<sym>ventiduesima</sym>".to_string())),
	(StyleId::Ottava22MBnoText,            StyleValue::String("<sym>ventiduesima</sym>".to_string())),
	(StyleId::Ottava22MBnoContinueText,    StyleValue::String("<sym>ventiduesima</sym>".to_string())),

	(StyleId::OttavaPosAbove,              StyleValue::Point(Point2F::new(0.0, -3.0))),
	(StyleId::OttavaPosBelow,              StyleValue::Point(Point2F::new(0.0, 3.0))),
	(StyleId::OttavaHookAbove,             StyleValue::Spatium(1.9)),
	(StyleId::OttavaHookBelow,             StyleValue::Spatium(-1.9)),
	(StyleId::OttavaLineWidth,             StyleValue::Spatium(0.1)),
	(StyleId::OttavaLineStyle,             StyleValue::UInt(LineStyle::DashLine as u32)),
	(StyleId::OttavaNumbersOnly,           StyleValue::Bool(true)),
	(StyleId::OttavaFontFace,              StyleValue::String("FreeSerif".to_string())),
	(StyleId::OttavaFontSize,              StyleValue::Float(12.0)),
	(StyleId::OttavaFontSpatiumDependent,  StyleValue::Bool(true)),
	(StyleId::OttavaFontStyle,             StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::OttavaColor,                 StyleValue::Color([0, 0, 0, 255])),
	(StyleId::OttavaTextAlign,             StyleValue::UInt(ALIGN_LEFT | ALIGN_VCENTER)),
	(StyleId::OttavaFrameType,             StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::OttavaFramePadding,          StyleValue::Float(0.2)),
	(StyleId::OttavaFrameWidth,            StyleValue::Float(0.1)),
	(StyleId::OttavaFrameRound,            StyleValue::Int(0)),
	(StyleId::OttavaFrameFgColor,          StyleValue::Color([0, 0, 0, 255])),
	(StyleId::OttavaFrameBgColor,          StyleValue::Color([255, 255, 255, 0])),

	(StyleId::TabClef,                     StyleValue::UInt(ClefType::Tab as u32)),

	(StyleId::TremoloWidth,                StyleValue::Spatium(1.2)),  // tremolo stroke width: notehead width
	(StyleId::TremoloBoxHeight,            StyleValue::Spatium(0.65)),
	(StyleId::TremoloStrokeWidth,          StyleValue::Spatium(0.5)),  // was 0.35
	(StyleId::TremoloDistance,             StyleValue::Spatium(0.8)),
	(StyleId::TremoloPlacement,            StyleValue::UInt(TremoloPlacement::Default as u32)),

	(StyleId::LinearStretch,               StyleValue::Float(1.5)),
	(StyleId::CrossMeasureValues,          StyleValue::Bool(false)),
	(StyleId::KeySigNaturals,              StyleValue::UInt(KeySigNatural::None as u32)),

	(StyleId::TupletMaxSlope,              StyleValue::Float(0.5)),
	(StyleId::TupletOufOfStaff,            StyleValue::Bool(true)),
	(StyleId::TupletVHeadDistance,         StyleValue::Spatium(0.5)),
	(StyleId::TupletVStemDistance,         StyleValue::Spatium(0.25)),
	(StyleId::TupletStemLeftDistance,      StyleValue::Spatium(0.5)),
	(StyleId::TupletStemRightDistance,     StyleValue::Spatium(0.5)),
	(StyleId::TupletNoteLeftDistance,      StyleValue::Spatium(0.0)),
	(StyleId::TupletNoteRightDistance,     StyleValue::Spatium(0.0)),
	(StyleId::TupletBracketWidth,          StyleValue::Spatium(0.1)),
	(StyleId::TupletDirection,             StyleValue::UInt(DirectionV::Auto as u32)),
	(StyleId::TupletNumberType,            StyleValue::UInt(TupletNumberType::ShowNumber as u32)),
	(StyleId::TupletBracketType,           StyleValue::UInt(TupletBracketType::AutoBracket as u32)),
	(StyleId::TupletFontFace,              StyleValue::String("FreeSerif".to_string())),
	(StyleId::TupletFontSize,              StyleValue::Float(10.0)),
	(StyleId::TupletFontSpatiumDependent,  StyleValue::Bool(true)),
	(StyleId::TupletFontStyle,             StyleValue::UInt(FontStyle::Italic as u32)),
	(StyleId::TupletColor,                 StyleValue::Color([0, 0, 0, 255])),
	(StyleId::TupletAlign,                 StyleValue::UInt(ALIGN_CENTER as u32)),
	(StyleId::TupletBracketHookHeight,     StyleValue::Spatium(1.0)),
	(StyleId::TupletOffset,                StyleValue::Point(Point2F::default())),
	(StyleId::TupletFrameType,             StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::TupletFramePadding,          StyleValue::Float(0.2)),
	(StyleId::TupletFrameWidth,            StyleValue::Float(0.1)),
	(StyleId::TupletFrameRound,            StyleValue::Int(0)),
	(StyleId::TupletFrameFgColor,          StyleValue::Color([0, 0, 0, 255])),
	(StyleId::TupletFrameBgColor,          StyleValue::Color([255, 255, 255, 0])),

	(StyleId::BarreLineWidth,              StyleValue::Float(1.0)),
	(StyleId::ScaleBarlines,               StyleValue::Bool(true)),
	(StyleId::BarGraceDistance,            StyleValue::Spatium(0.6)),
	(StyleId::MinVerticalDistance,         StyleValue::Spatium(0.5)),
	(StyleId::OrnamentStyle,               StyleValue::UInt(OrnamentStyle::Default as u32)),
	(StyleId::Spatium,                     StyleValue::Float(SPATIUM20)),

	(StyleId::AutoplaceHairpinDynamicsDistance,StyleValue::Spatium(0.5)),

	(StyleId::DynamicsPlacement,           StyleValue::UInt(Placement::Below as u32)),
	(StyleId::DynamicsPosAbove,            StyleValue::Point(Point2F::new(0.0, -3.0))),
	(StyleId::DynamicsPosBelow,            StyleValue::Point(Point2F::new(0.0, 4.0))),

	(StyleId::DynamicsMinDistance,         StyleValue::Spatium(0.5)),
	(StyleId::AutoplaceVerticalAlignRange, StyleValue::UInt(VerticalAlignRange::System as u32)),

	(StyleId::TextLinePlacement,           StyleValue::UInt(Placement::Above as u32)),
	(StyleId::TextLinePosAbove,            StyleValue::Point(Point2F::new(0.0, -1.0))),
	(StyleId::TextLinePosBelow,            StyleValue::Point(Point2F::new(0.0, 1.0))),
	(StyleId::TextLineFrameType,           StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::TextLineFramePadding,        StyleValue::Float(0.2)),
	(StyleId::TextLineFrameWidth,          StyleValue::Float(0.1)),
	(StyleId::TextLineFrameRound,          StyleValue::Int(0)),
	(StyleId::TextLineFrameFgColor,        StyleValue::Color([0, 0, 0, 255])),
	(StyleId::TextLineFrameBgColor,        StyleValue::Color([255, 255, 255, 0])),

	(StyleId::TremoloBarLineWidth,         StyleValue::Spatium(0.12)),
	(StyleId::JumpPosAbove,                StyleValue::Point(Point2F::new(0.0, -2.0))),
	(StyleId::MarkerPosAbove,              StyleValue::Point(Point2F::new(0.0, -2.0))),

	(StyleId::DefaultFontFace,             StyleValue::String("FreeSerif".to_string())),
	(StyleId::DefaultFontSize,             StyleValue::Float(10.0)),
	(StyleId::DefaultFontSpatiumDependent, StyleValue::Bool(true)),
	(StyleId::DefaultFontStyle,            StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::DefaultColor,                StyleValue::Color([0, 0, 0, 255])),
	(StyleId::DefaultAlign,                StyleValue::UInt(ALIGN_LEFT)),
	(StyleId::DefaultFrameType,            StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::DefaultFramePadding,         StyleValue::Float(0.2)),
	(StyleId::DefaultFrameWidth,           StyleValue::Float(0.1)),
	(StyleId::DefaultFrameRound,           StyleValue::Int(0)),
	(StyleId::DefaultFrameFgColor,         StyleValue::Color([0, 0, 0, 255])),
	(StyleId::DefaultFrameBgColor,         StyleValue::Color([255, 255, 255, 0])),
	(StyleId::DefaultOffset,               StyleValue::Point(Point2F::default())),
	(StyleId::DefaultOffsetType,           StyleValue::UInt(OffsetType::Spatium as u32)),
	(StyleId::DefaultSystemFlag,           StyleValue::Bool(false)),
	(StyleId::DefaultText,                 StyleValue::String("".to_string())),

	(StyleId::TitleFontFace,               StyleValue::String("FreeSerif".to_string())),
	(StyleId::TitleFontSize,               StyleValue::Float(24.0)),
	(StyleId::TitleFontSpatiumDependent,   StyleValue::Bool(false)),
	(StyleId::TitleFontStyle,              StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::TitleColor,                  StyleValue::Color([0, 0, 0, 255])),
	(StyleId::TitleAlign,                  StyleValue::UInt(ALIGN_HCENTER | ALIGN_TOP as u32)),
	(StyleId::TitleOffset,                 StyleValue::Point(Point2F::default())),
	(StyleId::TitleOffsetType,             StyleValue::UInt(OffsetType::Abs as u32)),
	(StyleId::TitleFrameType,              StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::TitleFramePadding,           StyleValue::Float(0.2)),
	(StyleId::TitleFrameWidth,             StyleValue::Float(0.1)),
	(StyleId::TitleFrameRound,             StyleValue::Int(0)),
	(StyleId::TitleFrameFgColor,           StyleValue::Color([0, 0, 0, 255])),
	(StyleId::TitleFrameBgColor,           StyleValue::Color([255, 255, 255, 0])),

	(StyleId::SubTitleFontFace,            StyleValue::String("FreeSerif".to_string())),
	(StyleId::SubTitleFontSize,            StyleValue::Float(14.0)),
	(StyleId::SubTitleFontSpatiumDependent,StyleValue::Bool(false)),
	(StyleId::SubTitleFontStyle,           StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::SubTitleColor,               StyleValue::Color([0, 0, 0, 255])),
	(StyleId::SubTitleAlign,               StyleValue::UInt(ALIGN_HCENTER | ALIGN_TOP)),
	(StyleId::SubTitleOffset,              StyleValue::Point(Point2F::new(0.0, 10.0))),
	(StyleId::SubTitleOffsetType,          StyleValue::UInt(OffsetType::Abs as u32)),
	(StyleId::SubTitleFrameType,           StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::SubTitleFramePadding,        StyleValue::Float(0.2)),
	(StyleId::SubTitleFrameWidth,          StyleValue::Float(0.1)),
	(StyleId::SubTitleFrameRound,          StyleValue::Int(0)),
	(StyleId::SubTitleFrameFgColor,        StyleValue::Color([0, 0, 0, 255])),
	(StyleId::SubTitleFrameBgColor,        StyleValue::Color([255, 255, 255, 0])),

	(StyleId::ComposerFontFace,            StyleValue::String("FreeSerif".to_string())),
	(StyleId::ComposerFontSize,            StyleValue::Float(12.0)),
	(StyleId::ComposerFontSpatiumDependent,StyleValue::Bool(false)),
	(StyleId::ComposerFontStyle,           StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::ComposerColor,               StyleValue::Color([0, 0, 0, 255])),
	(StyleId::ComposerAlign,               StyleValue::UInt(ALIGN_RIGHT | ALIGN_BOTTOM)),
	(StyleId::ComposerOffset,              StyleValue::Point(Point2F::default())),
	(StyleId::ComposerOffsetType,          StyleValue::UInt(OffsetType::Abs as u32)),
	(StyleId::ComposerFrameType,           StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::ComposerFramePadding,        StyleValue::Float(0.2)),
	(StyleId::ComposerFrameWidth,          StyleValue::Float(0.1)),
	(StyleId::ComposerFrameRound,          StyleValue::Int(0)),
	(StyleId::ComposerFrameFgColor,        StyleValue::Color([0, 0, 0, 255])),
	(StyleId::ComposerFrameBgColor,        StyleValue::Color([255, 255, 255, 0])),

	(StyleId::LyricistFontFace,            StyleValue::String("FreeSerif".to_string())),
	(StyleId::LyricistFontSize,            StyleValue::Float(12.0)),
	(StyleId::LyricistFontSpatiumDependent,StyleValue::Bool(false)),
	(StyleId::LyricistFontStyle,           StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::LyricistColor,               StyleValue::Color([0, 0, 0, 255])),
	(StyleId::LyricistAlign,               StyleValue::UInt(ALIGN_LEFT | ALIGN_BOTTOM)),
	(StyleId::LyricistOffset,              StyleValue::Point(Point2F::default())),
	(StyleId::LyricistOffsetType,          StyleValue::UInt(OffsetType::Abs as u32)),
	(StyleId::LyricistFrameType,           StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::LyricistFramePadding,        StyleValue::Float(0.2)),
	(StyleId::LyricistFrameWidth,          StyleValue::Float(0.1)),
	(StyleId::LyricistFrameRound,          StyleValue::Int(0)),
	(StyleId::LyricistFrameFgColor,        StyleValue::Color([0, 0, 0, 255])),
	(StyleId::LyricistFrameBgColor,        StyleValue::Color([255, 255, 255, 0])),

	(StyleId::FingeringFontFace,           StyleValue::String("FreeSerif".to_string())),
	(StyleId::FingeringFontSize,           StyleValue::Float(8.0)),
	(StyleId::FingeringFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::FingeringFontStyle,          StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::FingeringColor,              StyleValue::Color([0, 0, 0, 255])),
	(StyleId::FingeringAlign,              StyleValue::UInt(ALIGN_CENTER)),
	(StyleId::FingeringFrameType,          StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::FingeringFramePadding,       StyleValue::Float(0.2)),
	(StyleId::FingeringFrameWidth,         StyleValue::Float(0.1)),
	(StyleId::FingeringFrameRound,         StyleValue::Int(0)),
	(StyleId::FingeringFrameFgColor,       StyleValue::Color([0, 0, 0, 255])),
	(StyleId::FingeringFrameBgColor,       StyleValue::Color([255, 255, 255, 0])),
	(StyleId::FingeringOffset,             StyleValue::Point(Point2F::default())),

	(StyleId::LhGuitarFingeringFontFace,   StyleValue::String("FreeSerif".to_string())),
	(StyleId::LhGuitarFingeringFontSize,   StyleValue::Float(8.0)),
	(StyleId::LhGuitarFingeringFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::LhGuitarFingeringFontStyle,  StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::LhGuitarFingeringColor,      StyleValue::Color([0, 0, 0, 255])),
	(StyleId::LhGuitarFingeringAlign,      StyleValue::UInt(ALIGN_RIGHT | ALIGN_VCENTER)),
	(StyleId::LhGuitarFingeringFrameType,  StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::LhGuitarFingeringFramePadding,StyleValue::Float(0.2)),
	(StyleId::LhGuitarFingeringFrameWidth, StyleValue::Float(0.1)),
	(StyleId::LhGuitarFingeringFrameRound, StyleValue::Int(0)),
	(StyleId::LhGuitarFingeringFrameFgColor,StyleValue::Color([0, 0, 0, 255])),
	(StyleId::LhGuitarFingeringFrameBgColor,StyleValue::Color([255, 255, 255, 0])),
	(StyleId::LhGuitarFingeringOffset,     StyleValue::Point(Point2F::new(-0.5, 0.0))),

	(StyleId::RhGuitarFingeringFontFace,   StyleValue::String("FreeSerif".to_string())),
	(StyleId::RhGuitarFingeringFontSize,   StyleValue::Float(8.0)),
	(StyleId::RhGuitarFingeringFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::RhGuitarFingeringFontStyle,  StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::RhGuitarFingeringColor,      StyleValue::Color([0, 0, 0, 255])),
	(StyleId::RhGuitarFingeringAlign,      StyleValue::UInt(ALIGN_CENTER)),
	(StyleId::RhGuitarFingeringFrameType,  StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::RhGuitarFingeringFramePadding,StyleValue::Float(0.2)),
	(StyleId::RhGuitarFingeringFrameWidth, StyleValue::Float(0.1)),
	(StyleId::RhGuitarFingeringFrameRound, StyleValue::Int(0)),
	(StyleId::RhGuitarFingeringFrameFgColor,StyleValue::Color([0, 0, 0, 255])),
	(StyleId::RhGuitarFingeringFrameBgColor,StyleValue::Color([255, 255, 255, 0])),
	(StyleId::RhGuitarFingeringOffset,     StyleValue::Point(Point2F::default())),

	(StyleId::StringNumberFontFace,        StyleValue::String("FreeSerif".to_string())),
	(StyleId::StringNumberFontSize,        StyleValue::Float(8.0)),
	(StyleId::StringNumberFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::StringNumberFontStyle,       StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::StringNumberColor,           StyleValue::Color([0, 0, 0, 255])),
	(StyleId::StringNumberAlign,           StyleValue::UInt(ALIGN_CENTER)),
	(StyleId::StringNumberFrameType,       StyleValue::UInt(FrameType::Circle as u32)),
	(StyleId::StringNumberFramePadding,    StyleValue::Float(0.2)),
	(StyleId::StringNumberFrameWidth,      StyleValue::Float(0.1)),
	(StyleId::StringNumberFrameRound,      StyleValue::Int(0)),
	(StyleId::StringNumberFrameFgColor,    StyleValue::Color([0, 0, 0, 255])),
	(StyleId::StringNumberFrameBgColor,    StyleValue::Color([255, 255, 255, 0])),
	(StyleId::StringNumberOffset,          StyleValue::Point(Point2F::new(0.0, 0.0))),

	(StyleId::LongInstrumentFontFace,      StyleValue::String("FreeSerif".to_string())),
	(StyleId::LongInstrumentFontSize,      StyleValue::Float(12.0)),
	(StyleId::LongInstrumentFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::LongInstrumentFontStyle,     StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::LongInstrumentColor,         StyleValue::Color([0, 0, 0, 255])),
	(StyleId::LongInstrumentAlign,         StyleValue::UInt(ALIGN_RIGHT | ALIGN_VCENTER)),
	(StyleId::LongInstrumentOffset,        StyleValue::Point(Point2F::new(0.0, 0.0))),
	(StyleId::LongInstrumentFrameType,     StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::LongInstrumentFramePadding,  StyleValue::Float(0.2)),
	(StyleId::LongInstrumentFrameWidth,    StyleValue::Float(0.1)),
	(StyleId::LongInstrumentFrameRound,    StyleValue::Int(0)),
	(StyleId::LongInstrumentFrameFgColor,  StyleValue::Color([0, 0, 0, 255])),
	(StyleId::LongInstrumentFrameBgColor,  StyleValue::Color([255, 255, 255, 0])),

	(StyleId::ShortInstrumentFontFace,     StyleValue::String("FreeSerif".to_string())),
	(StyleId::ShortInstrumentFontSize,     StyleValue::Float(12.0)),
	(StyleId::ShortInstrumentFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::ShortInstrumentFontStyle,    StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::ShortInstrumentColor,        StyleValue::Color([0, 0, 0, 255])),
	(StyleId::ShortInstrumentAlign,        StyleValue::UInt(ALIGN_RIGHT | ALIGN_VCENTER)),
	(StyleId::ShortInstrumentOffset,       StyleValue::Point(Point2F::new(0.0, 0.0))),
	(StyleId::ShortInstrumentFrameType,    StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::ShortInstrumentFramePadding, StyleValue::Float(0.2)),
	(StyleId::ShortInstrumentFrameWidth,   StyleValue::Float(0.1)),
	(StyleId::ShortInstrumentFrameRound,   StyleValue::Int(0)),
	(StyleId::ShortInstrumentFrameFgColor, StyleValue::Color([0, 0, 0, 255])),
	(StyleId::ShortInstrumentFrameBgColor, StyleValue::Color([255, 255, 255, 0])),

	(StyleId::PartInstrumentFontFace,      StyleValue::String("FreeSerif".to_string())),
	(StyleId::PartInstrumentFontSize,      StyleValue::Float(18.0)),
	(StyleId::PartInstrumentFontSpatiumDependent,StyleValue::Bool(false)),
	(StyleId::PartInstrumentFontStyle,     StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::PartInstrumentColor,         StyleValue::Color([0, 0, 0, 255])),
	(StyleId::PartInstrumentAlign,         StyleValue::UInt(ALIGN_LEFT)),
	(StyleId::PartInstrumentOffset,        StyleValue::Point(Point2F::default())),
	(StyleId::PartInstrumentFrameType,     StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::PartInstrumentFramePadding,  StyleValue::Float(0.2)),
	(StyleId::PartInstrumentFrameWidth,    StyleValue::Float(0.1)),
	(StyleId::PartInstrumentFrameRound,    StyleValue::Int(0)),
	(StyleId::PartInstrumentFrameFgColor,  StyleValue::Color([0, 0, 0, 255])),
	(StyleId::PartInstrumentFrameBgColor,  StyleValue::Color([255, 255, 255, 0])),

	(StyleId::DynamicsFontFace,            StyleValue::String("FreeSerif".to_string())),
	(StyleId::DynamicsFontSize,            StyleValue::Float(12.0)),
	(StyleId::DynamicsFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::DynamicsFontStyle,           StyleValue::UInt(FontStyle::Italic as u32)),
	(StyleId::DynamicsColor,               StyleValue::Color([0, 0, 0, 255])),
	(StyleId::DynamicsAlign,               StyleValue::UInt(ALIGN_HCENTER | ALIGN_BASELINE)),
	(StyleId::DynamicsFrameType,           StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::DynamicsFramePadding,        StyleValue::Float(0.2)),
	(StyleId::DynamicsFrameWidth,          StyleValue::Float(0.1)),
	(StyleId::DynamicsFrameRound,          StyleValue::Int(0)),
	(StyleId::DynamicsFrameFgColor,        StyleValue::Color([0, 0, 0, 255])),
	(StyleId::DynamicsFrameBgColor,        StyleValue::Color([255, 255, 255, 0])),

	(StyleId::ExpressionFontFace,          StyleValue::String("FreeSerif".to_string())),
	(StyleId::ExpressionFontSize,          StyleValue::Float(11.0)),
	(StyleId::ExpressionFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::ExpressionFontStyle,         StyleValue::UInt(FontStyle::Italic as u32)),
	(StyleId::ExpressionColor,             StyleValue::Color([0, 0, 0, 255])),
	(StyleId::ExpressionAlign,             StyleValue::UInt(ALIGN_LEFT | ALIGN_BASELINE)),
	(StyleId::ExpressionPlacement,         StyleValue::UInt(Placement::Below as u32)),
	(StyleId::ExpressionOffset,            StyleValue::Point(Point2F::new(0.0, 3.5))),
	(StyleId::ExpressionFrameType,         StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::ExpressionFramePadding,      StyleValue::Float(0.2)),
	(StyleId::ExpressionFrameWidth,        StyleValue::Float(0.1)),
	(StyleId::ExpressionFrameRound,        StyleValue::Int(0)),
	(StyleId::ExpressionFrameFgColor,      StyleValue::Color([0, 0, 0, 255])),
	(StyleId::ExpressionFrameBgColor,      StyleValue::Color([255, 255, 255, 0])),

	(StyleId::TempoFontFace,               StyleValue::String("FreeSerif".to_string())),
	(StyleId::TempoFontSize,               StyleValue::Float(12.0)),
	(StyleId::TempoFontSpatiumDependent,   StyleValue::Bool(true)),
	(StyleId::TempoFontStyle,              StyleValue::UInt(FontStyle::Bold as u32)),
	(StyleId::TempoColor,                  StyleValue::Color([0, 0, 0, 255])),
	(StyleId::TempoAlign,                  StyleValue::UInt(ALIGN_LEFT | ALIGN_BASELINE)),
	(StyleId::TempoSystemFlag,             StyleValue::Bool(true)),
	(StyleId::TempoPlacement,              StyleValue::UInt(Placement::Above as u32)),
	(StyleId::TempoPosAbove,               StyleValue::Point(Point2F::new(0.0, -2.0))),
	(StyleId::TempoPosBelow,               StyleValue::Point(Point2F::new(0.0, 3.0))),
	(StyleId::TempoMinDistance,            StyleValue::Spatium(0.5)),
	(StyleId::TempoFrameType,              StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::TempoFramePadding,           StyleValue::Float(0.2)),
	(StyleId::TempoFrameWidth,             StyleValue::Float(0.1)),
	(StyleId::TempoFrameRound,             StyleValue::Int(0)),
	(StyleId::TempoFrameFgColor,           StyleValue::Color([0, 0, 0, 255])),
	(StyleId::TempoFrameBgColor,           StyleValue::Color([255, 255, 255, 0])),

	(StyleId::MetronomeFontFace,           StyleValue::String("FreeSerif".to_string())),
	(StyleId::MetronomeFontSize,           StyleValue::Float(12.0)),
	(StyleId::MetronomeFontSpatiumDependent,StyleValue::Bool(false)),
	(StyleId::MetronomeFontStyle,          StyleValue::UInt(FontStyle::Bold as u32)),
	(StyleId::MetronomeColor,              StyleValue::Color([0, 0, 0, 255])),
	(StyleId::MetronomePlacement,          StyleValue::UInt(Placement::Above as u32)),
	(StyleId::MetronomeAlign,              StyleValue::UInt(ALIGN_LEFT)),
	(StyleId::MetronomeOffset,             StyleValue::Point(Point2F::default())),
	(StyleId::MetronomeFrameType,          StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::MetronomeFramePadding,       StyleValue::Float(0.2)),
	(StyleId::MetronomeFrameWidth,         StyleValue::Float(0.1)),
	(StyleId::MetronomeFrameRound,         StyleValue::Int(0)),
	(StyleId::MetronomeFrameFgColor,       StyleValue::Color([0, 0, 0, 255])),
	(StyleId::MetronomeFrameBgColor,       StyleValue::Color([255, 255, 255, 0])),

	(StyleId::MeasureNumberFontFace,       StyleValue::String("FreeSerif".to_string())),
	(StyleId::MeasureNumberFontSize,       StyleValue::Float(8.0)),
	(StyleId::MeasureNumberFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::MeasureNumberFontStyle,      StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::MeasureNumberColor,          StyleValue::Color([0, 0, 0, 255])),
	(StyleId::MeasureNumberOffset,         StyleValue::Point(Point2F::new(0.0, -2.0))),
	(StyleId::MeasureNumberOffsetType,     StyleValue::UInt(OffsetType::Spatium as u32)),
	(StyleId::MeasureNumberAlign,          StyleValue::UInt(ALIGN_HCENTER | ALIGN_BASELINE)),
	(StyleId::MeasureNumberFrameType,      StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::MeasureNumberFramePadding,   StyleValue::Float(0.2)),
	(StyleId::MeasureNumberFrameWidth,     StyleValue::Float(0.1)),
	(StyleId::MeasureNumberFrameRound,     StyleValue::Int(0)),
	(StyleId::MeasureNumberFrameFgColor,   StyleValue::Color([0, 0, 0, 255])),
	(StyleId::MeasureNumberFrameBgColor,   StyleValue::Color([255, 255, 255, 0])),

	(StyleId::TranslatorFontFace,          StyleValue::String("FreeSerif".to_string())),
	(StyleId::TranslatorFontSize,          StyleValue::Float(11.0)),
	(StyleId::TranslatorFontSpatiumDependent,StyleValue::Bool(false)),
	(StyleId::TranslatorFontStyle,         StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::TranslatorColor,             StyleValue::Color([0, 0, 0, 255])),
	(StyleId::TranslatorAlign,             StyleValue::UInt(ALIGN_LEFT)),
	(StyleId::TranslatorOffset,            StyleValue::Point(Point2F::default())),
	(StyleId::TranslatorFrameType,         StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::TranslatorFramePadding,      StyleValue::Float(0.2)),
	(StyleId::TranslatorFrameWidth,        StyleValue::Float(0.1)),
	(StyleId::TranslatorFrameRound,        StyleValue::Int(0)),
	(StyleId::TranslatorFrameFgColor,      StyleValue::Color([0, 0, 0, 255])),
	(StyleId::TranslatorFrameBgColor,      StyleValue::Color([255, 255, 255, 0])),

	(StyleId::SystemTextFontFace,          StyleValue::String("FreeSerif".to_string())),
	(StyleId::SystemTextFontSize,          StyleValue::Float(10.0)),
	(StyleId::SystemTextFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::SystemTextFontStyle,         StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::SystemTextColor,             StyleValue::Color([0, 0, 0, 255])),
	(StyleId::SystemTextAlign,             StyleValue::UInt(ALIGN_LEFT | ALIGN_BASELINE)),
	(StyleId::SystemTextOffsetType,        StyleValue::UInt(OffsetType::Spatium as u32)),
	(StyleId::SystemTextPlacement,         StyleValue::UInt(Placement::Above as u32)),
	(StyleId::SystemTextPosAbove,          StyleValue::Point(Point2F::new(0.0, -2.0))),
	(StyleId::SystemTextPosBelow,          StyleValue::Point(Point2F::new(0.0, 3.5))),
	(StyleId::SystemTextMinDistance,       StyleValue::Spatium(0.5)),
	(StyleId::SystemTextFrameType,         StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::SystemTextFramePadding,      StyleValue::Float(0.2)),
	(StyleId::SystemTextFrameWidth,        StyleValue::Float(0.1)),
	(StyleId::SystemTextFrameRound,        StyleValue::Int(0)),
	(StyleId::SystemTextFrameFgColor,      StyleValue::Color([0, 0, 0, 255])),
	(StyleId::SystemTextFrameBgColor,      StyleValue::Color([255, 255, 255, 0])),

	(StyleId::StaffTextFontFace,           StyleValue::String("FreeSerif".to_string())),
	(StyleId::StaffTextFontSize,           StyleValue::Float(10.0)),
	(StyleId::StaffTextFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::StaffTextFontStyle,          StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::StaffTextColor,              StyleValue::Color([0, 0, 0, 255])),
	(StyleId::StaffTextAlign,              StyleValue::UInt(ALIGN_LEFT | ALIGN_BASELINE)),
	(StyleId::StaffTextOffsetType,         StyleValue::UInt(OffsetType::Spatium as u32)),
	(StyleId::StaffTextPlacement,          StyleValue::UInt(Placement::Above as u32)),
	(StyleId::StaffTextPosAbove,           StyleValue::Point(Point2F::new(0.0, -2.0))),
	(StyleId::StaffTextPosBelow,           StyleValue::Point(Point2F::new(0.0, 3.5))),
	(StyleId::StaffTextMinDistance,        StyleValue::Spatium(0.5)),
	(StyleId::StaffTextFrameType,          StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::StaffTextFramePadding,       StyleValue::Float(0.2)),
	(StyleId::StaffTextFrameWidth,         StyleValue::Float(0.1)),
	(StyleId::StaffTextFrameRound,         StyleValue::Int(0)),
	(StyleId::StaffTextFrameFgColor,       StyleValue::Color([0, 0, 0, 255])),
	(StyleId::StaffTextFrameBgColor,       StyleValue::Color([255, 255, 255, 0])),

	(StyleId::RehearsalMarkFontFace,       StyleValue::String("FreeSerif".to_string())),
	(StyleId::RehearsalMarkFontSize,       StyleValue::Float(14.0)),
	(StyleId::RehearsalMarkFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::RehearsalMarkFontStyle,      StyleValue::UInt(FontStyle::Bold as u32)),
	(StyleId::RehearsalMarkColor,          StyleValue::Color([0, 0, 0, 255])),
	(StyleId::RehearsalMarkAlign,          StyleValue::UInt(ALIGN_HCENTER | ALIGN_BASELINE)),
	(StyleId::RehearsalMarkFrameType,      StyleValue::UInt(FrameType::Square as u32)),
	(StyleId::RehearsalMarkFramePadding,   StyleValue::Float(0.5)),
	(StyleId::RehearsalMarkFrameWidth,     StyleValue::Float(0.2)),
	(StyleId::RehearsalMarkFrameRound,     StyleValue::Int(20)),
	(StyleId::RehearsalMarkFrameFgColor,   StyleValue::Color([0, 0, 0, 255])),
	(StyleId::RehearsalMarkFrameBgColor,   StyleValue::Color([255, 255, 255, 0])),
	(StyleId::RehearsalMarkPlacement,      StyleValue::UInt(Placement::Above as u32)),
	(StyleId::RehearsalMarkPosAbove,       StyleValue::Point(Point2F::new(0.0, -3.0))),
	(StyleId::RehearsalMarkPosBelow,       StyleValue::Point(Point2F::new(0.0, 4.0))),
	(StyleId::RehearsalMarkMinDistance,    StyleValue::Spatium(0.5)),

	(StyleId::RepeatLeftFontFace,          StyleValue::String("FreeSerif".to_string())),
	(StyleId::RepeatLeftFontSize,          StyleValue::Float(20.0)),
	(StyleId::RepeatLeftFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::RepeatLeftFontStyle,         StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::RepeatLeftColor,             StyleValue::Color([0, 0, 0, 255])),
	(StyleId::RepeatLeftAlign,             StyleValue::UInt(ALIGN_LEFT | ALIGN_BASELINE)),
	(StyleId::RepeatLeftPlacement,         StyleValue::UInt(Placement::Above as u32)),
	(StyleId::RepeatLeftFrameType,         StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::RepeatLeftFramePadding,      StyleValue::Float(0.2)),
	(StyleId::RepeatLeftFrameWidth,        StyleValue::Float(0.1)),
	(StyleId::RepeatLeftFrameRound,        StyleValue::Int(0)),
	(StyleId::RepeatLeftFrameFgColor,      StyleValue::Color([0, 0, 0, 255])),
	(StyleId::RepeatLeftFrameBgColor,      StyleValue::Color([255, 255, 255, 0])),

	(StyleId::RepeatRightFontFace,         StyleValue::String("FreeSerif".to_string())),
	(StyleId::RepeatRightFontSize,         StyleValue::Float(12.0)),
	(StyleId::RepeatRightFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::RepeatRightFontStyle,        StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::RepeatRightColor,            StyleValue::Color([0, 0, 0, 255])),
	(StyleId::RepeatRightAlign,            StyleValue::UInt(ALIGN_RIGHT | ALIGN_BASELINE)),
	(StyleId::RepeatRightPlacement,        StyleValue::UInt(Placement::Above as u32)),
	(StyleId::RepeatRightFrameType,        StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::RepeatRightFramePadding,     StyleValue::Float(0.2)),
	(StyleId::RepeatRightFrameWidth,       StyleValue::Float(0.1)),
	(StyleId::RepeatRightFrameRound,       StyleValue::Int(0)),
	(StyleId::RepeatRightFrameFgColor,     StyleValue::Color([0, 0, 0, 255])),
	(StyleId::RepeatRightFrameBgColor,     StyleValue::Color([255, 255, 255, 0])),

	(StyleId::FrameFontFace,               StyleValue::String("FreeSerif".to_string())),
	(StyleId::FrameFontSize,               StyleValue::Float(12.0)),
	(StyleId::FrameFontSpatiumDependent,   StyleValue::Bool(false)),
	(StyleId::FrameFontStyle,              StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::FrameColor,                  StyleValue::Color([0, 0, 0, 255])),
	(StyleId::FrameAlign,                  StyleValue::UInt(ALIGN_LEFT)),
	(StyleId::FrameOffset,                 StyleValue::Point(Point2F::default())),
	(StyleId::FrameFrameType,              StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::FrameFramePadding,           StyleValue::Float(0.2)),
	(StyleId::FrameFrameWidth,             StyleValue::Float(0.1)),
	(StyleId::FrameFrameRound,             StyleValue::Int(0)),
	(StyleId::FrameFrameFgColor,           StyleValue::Color([0, 0, 0, 255])),
	(StyleId::FrameFrameBgColor,           StyleValue::Color([255, 255, 255, 0])),

	(StyleId::TextLineFontFace,            StyleValue::String("FreeSerif".to_string())),
	(StyleId::TextLineFontSize,            StyleValue::Float(12.0)),
	(StyleId::TextLineFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::TextLineFontStyle,           StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::TextLineColor,               StyleValue::Color([0, 0, 0, 255])),
	(StyleId::TextLineTextAlign,           StyleValue::UInt(ALIGN_LEFT | ALIGN_VCENTER)),

	(StyleId::GlissandoFontFace,           StyleValue::String("FreeSerif".to_string())),
	(StyleId::GlissandoFontSize,           StyleValue::Float(8.0)),
	(StyleId::GlissandoFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::GlissandoFontStyle,          StyleValue::UInt(FontStyle::Italic as u32)),
	(StyleId::GlissandoColor,              StyleValue::Color([0, 0, 0, 255])),
	(StyleId::GlissandoAlign,              StyleValue::UInt(ALIGN_LEFT)),
	(StyleId::GlissandoOffset,             StyleValue::Point(Point2F::default())),
	(StyleId::GlissandoFrameType,          StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::GlissandoFramePadding,       StyleValue::Float(0.2)),
	(StyleId::GlissandoFrameWidth,         StyleValue::Float(0.1)),
	(StyleId::GlissandoFrameRound,         StyleValue::Int(0)),
	(StyleId::GlissandoFrameFgColor,       StyleValue::Color([0, 0, 0, 255])),
	(StyleId::GlissandoFrameBgColor,       StyleValue::Color([255, 255, 255, 0])),
	(StyleId::GlissandoLineWidth,          StyleValue::Spatium(0.15)),
	(StyleId::GlissandoText,               StyleValue::String("gliss.".to_string())),

	(StyleId::BendFontFace,                StyleValue::String("FreeSerif".to_string())),
	(StyleId::BendFontSize,                StyleValue::Float(8.0)),
	(StyleId::BendFontSpatiumDependent,    StyleValue::Bool(true)),
	(StyleId::BendFontStyle,               StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::BendColor,                   StyleValue::Color([0, 0, 0, 255])),
	(StyleId::BendAlign,                   StyleValue::UInt(ALIGN_LEFT | ALIGN_BASELINE)),
	(StyleId::BendOffset,                  StyleValue::Point(Point2F::default())),
	(StyleId::BendFrameType,               StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::BendFramePadding,            StyleValue::Float(0.2)),
	(StyleId::BendFrameWidth,              StyleValue::Float(0.1)),
	(StyleId::BendFrameRound,              StyleValue::Int(0)),
	(StyleId::BendFrameFgColor,            StyleValue::Color([0, 0, 0, 255])),
	(StyleId::BendFrameBgColor,            StyleValue::Color([255, 255, 255, 0])),
	(StyleId::BendLineWidth,               StyleValue::Spatium(0.15)),
	(StyleId::BendArrowWidth,              StyleValue::Spatium(0.5)),

	(StyleId::HeaderFontFace,              StyleValue::String("FreeSerif".to_string())),
	(StyleId::HeaderFontSize,              StyleValue::Float(8.0)),
	(StyleId::HeaderFontSpatiumDependent,  StyleValue::Bool(false)),
	(StyleId::HeaderFontStyle,             StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::HeaderColor,                 StyleValue::Color([0, 0, 0, 255])),
	(StyleId::HeaderAlign,                 StyleValue::UInt(ALIGN_LEFT)),
	(StyleId::HeaderOffset,                StyleValue::Point(Point2F::default())),
	(StyleId::HeaderFrameType,             StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::HeaderFramePadding,          StyleValue::Float(0.2)),
	(StyleId::HeaderFrameWidth,            StyleValue::Float(0.1)),
	(StyleId::HeaderFrameRound,            StyleValue::Int(0)),
	(StyleId::HeaderFrameFgColor,          StyleValue::Color([0, 0, 0, 255])),
	(StyleId::HeaderFrameBgColor,          StyleValue::Color([255, 255, 255, 0])),

	(StyleId::FooterFontFace,              StyleValue::String("FreeSerif".to_string())),
	(StyleId::FooterFontSize,              StyleValue::Float(8.0)),
	(StyleId::FooterFontSpatiumDependent,  StyleValue::Bool(false)),
	(StyleId::FooterFontStyle,             StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::FooterColor,                 StyleValue::Color([0, 0, 0, 255])),
	(StyleId::FooterAlign,                 StyleValue::UInt(ALIGN_LEFT)),
	(StyleId::FooterOffset,                StyleValue::Point(Point2F::new(0.0, 5.0))),
	(StyleId::FooterFrameType,             StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::FooterFramePadding,          StyleValue::Float(0.2)),
	(StyleId::FooterFrameWidth,            StyleValue::Float(0.1)),
	(StyleId::FooterFrameRound,            StyleValue::Int(0)),
	(StyleId::FooterFrameFgColor,          StyleValue::Color([0, 0, 0, 255])),
	(StyleId::FooterFrameBgColor,          StyleValue::Color([255, 255, 255, 0])),

	(StyleId::InstrumentChangeFontFace,    StyleValue::String("FreeSerif".to_string())),
	(StyleId::InstrumentChangeFontSize,    StyleValue::Float(12.0)),
	(StyleId::InstrumentChangeFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::InstrumentChangeFontStyle,   StyleValue::UInt(FontStyle::Bold as u32)),
	(StyleId::InstrumentChangeColor,       StyleValue::Color([0, 0, 0, 255])),
	(StyleId::InstrumentChangeAlign,       StyleValue::UInt(ALIGN_LEFT | ALIGN_BASELINE)),
	(StyleId::InstrumentChangeOffset,      StyleValue::Point(Point2F::default())),
	(StyleId::InstrumentChangePlacement,   StyleValue::UInt(Placement::Above as u32)),
	(StyleId::InstrumentChangePosAbove,    StyleValue::Point(Point2F::new(0.0, -2.0))),
	(StyleId::InstrumentChangePosBelow,    StyleValue::Point(Point2F::new(0.0, 3.5))),
	(StyleId::InstrumentChangeMinDistance, StyleValue::Spatium(0.5)),
	(StyleId::InstrumentChangeFrameType,   StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::InstrumentChangeFramePadding,StyleValue::Float(0.2)),
	(StyleId::InstrumentChangeFrameWidth,  StyleValue::Float(0.1)),
	(StyleId::InstrumentChangeFrameRound,  StyleValue::Int(0)),
	(StyleId::InstrumentChangeFrameFgColor,StyleValue::Color([0, 0, 0, 255])),
	(StyleId::InstrumentChangeFrameBgColor,StyleValue::Color([255, 255, 255, 0])),

	(StyleId::StickingFontFace,            StyleValue::String("FreeSerif".to_string())),
	(StyleId::StickingFontSize,            StyleValue::Float(12.0)),
	(StyleId::StickingFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::StickingFontStyle,           StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::StickingColor,               StyleValue::Color([0, 0, 0, 255])),
	(StyleId::StickingAlign,               StyleValue::UInt(ALIGN_LEFT | ALIGN_BASELINE)),
	(StyleId::StickingOffset,              StyleValue::Point(Point2F::default())),
	(StyleId::StickingPlacement,           StyleValue::UInt(Placement::Below as u32)),
	(StyleId::StickingPosAbove,            StyleValue::Point(Point2F::new(0.0, -2.0))),
	(StyleId::StickingPosBelow,            StyleValue::Point(Point2F::new(0.0, 2.0))),
	(StyleId::StickingMinDistance,         StyleValue::Spatium(0.5)),
	(StyleId::StickingFrameType,           StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::StickingFramePadding,        StyleValue::Float(0.2)),
	(StyleId::StickingFrameWidth,          StyleValue::Float(0.1)),
	(StyleId::StickingFrameRound,          StyleValue::Int(0)),
	(StyleId::StickingFrameFgColor,        StyleValue::Color([0, 0, 0, 255])),
	(StyleId::StickingFrameBgColor,        StyleValue::Color([255, 255, 255, 0])),

	(StyleId::FiguredBassFontFace,         StyleValue::String("MScoreBC".to_string())),
	(StyleId::FiguredBassFontSize,         StyleValue::Float(8.0)),
	(StyleId::FiguredBassFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::FiguredBassFontStyle,        StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::FiguredBassColor,            StyleValue::Color([0, 0, 0, 255])),

	(StyleId::User1Name,                   StyleValue::String("".to_string())),
	(StyleId::User1FontFace,               StyleValue::String("FreeSerif".to_string())),
	(StyleId::User1FontSize,               StyleValue::Float(10.0)),
	(StyleId::User1FontSpatiumDependent,   StyleValue::Bool(true)),
	(StyleId::User1FontStyle,              StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::User1Color,                  StyleValue::Color([0, 0, 0, 255])),
	(StyleId::User1Align,                  StyleValue::UInt(ALIGN_LEFT | ALIGN_TOP)),
	(StyleId::User1Offset,                 StyleValue::Point(Point2F::default())),
	(StyleId::User1OffsetType,             StyleValue::UInt(OffsetType::Spatium as u32)),
	(StyleId::User1FrameType,              StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::User1FramePadding,           StyleValue::Float(0.2)),
	(StyleId::User1FrameWidth,             StyleValue::Float(0.1)),
	(StyleId::User1FrameRound,             StyleValue::Int(0)),
	(StyleId::User1FrameFgColor,           StyleValue::Color([0, 0, 0, 255])),
	(StyleId::User1FrameBgColor,           StyleValue::Color([255, 255, 255, 0])),

	(StyleId::User2Name,                   StyleValue::String("".to_string())),
	(StyleId::User2FontFace,               StyleValue::String("FreeSerif".to_string())),
	(StyleId::User2FontSize,               StyleValue::Float(10.0)),
	(StyleId::User2FontSpatiumDependent,   StyleValue::Bool(true)),
	(StyleId::User2FontStyle,              StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::User2Color,                  StyleValue::Color([0, 0, 0, 255])),
	(StyleId::User2Align,                  StyleValue::UInt(ALIGN_LEFT | ALIGN_TOP)),
	(StyleId::User2Offset,                 StyleValue::Point(Point2F::default())),
	(StyleId::User2OffsetType,             StyleValue::UInt(OffsetType::Spatium as u32)),
	(StyleId::User2FrameType,              StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::User2FramePadding,           StyleValue::Float(0.2)),
	(StyleId::User2FrameWidth,             StyleValue::Float(0.1)),
	(StyleId::User2FrameRound,             StyleValue::Int(0)),
	(StyleId::User2FrameFgColor,           StyleValue::Color([0, 0, 0, 255])),
	(StyleId::User2FrameBgColor,           StyleValue::Color([255, 255, 255, 0])),

	(StyleId::User3Name,                   StyleValue::String("".to_string())),
	(StyleId::User3FontFace,               StyleValue::String("FreeSerif".to_string())),
	(StyleId::User3FontSize,               StyleValue::Float(10.0)),
	(StyleId::User3FontSpatiumDependent,   StyleValue::Bool(true)),
	(StyleId::User3FontStyle,              StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::User3Color,                  StyleValue::Color([0, 0, 0, 255])),
	(StyleId::User3Align,                  StyleValue::UInt(ALIGN_LEFT | ALIGN_TOP)),
	(StyleId::User3Offset,                 StyleValue::Point(Point2F::default())),
	(StyleId::User3OffsetType,             StyleValue::UInt(OffsetType::Spatium as u32)),
	(StyleId::User3FrameType,              StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::User3FramePadding,           StyleValue::Float(0.2)),
	(StyleId::User3FrameWidth,             StyleValue::Float(0.1)),
	(StyleId::User3FrameRound,             StyleValue::Int(0)),
	(StyleId::User3FrameFgColor,           StyleValue::Color([0, 0, 0, 255])),
	(StyleId::User3FrameBgColor,           StyleValue::Color([255, 255, 255, 0])),

	(StyleId::User4Name,                   StyleValue::String("".to_string())),
	(StyleId::User4FontFace,               StyleValue::String("FreeSerif".to_string())),
	(StyleId::User4FontSize,               StyleValue::Float(10.0)),
	(StyleId::User4FontSpatiumDependent,   StyleValue::Bool(true)),
	(StyleId::User4FontStyle,              StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::User4Color,                  StyleValue::Color([0, 0, 0, 255])),
	(StyleId::User4Align,                  StyleValue::UInt(ALIGN_LEFT | ALIGN_TOP)),
	(StyleId::User4Offset,                 StyleValue::Point(Point2F::default())),
	(StyleId::User4OffsetType,             StyleValue::UInt(OffsetType::Spatium as u32)),
	(StyleId::User4FrameType,              StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::User4FramePadding,           StyleValue::Float(0.2)),
	(StyleId::User4FrameWidth,             StyleValue::Float(0.1)),
	(StyleId::User4FrameRound,             StyleValue::Int(0)),
	(StyleId::User4FrameFgColor,           StyleValue::Color([0, 0, 0, 255])),
	(StyleId::User4FrameBgColor,           StyleValue::Color([255, 255, 255, 0])),

	(StyleId::User5Name,                   StyleValue::String("".to_string())),
	(StyleId::User5FontFace,               StyleValue::String("FreeSerif".to_string())),
	(StyleId::User5FontSize,               StyleValue::Float(10.0)),
	(StyleId::User5FontSpatiumDependent,   StyleValue::Bool(true)),
	(StyleId::User5FontStyle,              StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::User5Color,                  StyleValue::Color([0, 0, 0, 255])),
	(StyleId::User5Align,                  StyleValue::UInt(ALIGN_LEFT | ALIGN_TOP)),
	(StyleId::User5Offset,                 StyleValue::Point(Point2F::default())),
	(StyleId::User5OffsetType,             StyleValue::UInt(OffsetType::Spatium as u32)),
	(StyleId::User5FrameType,              StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::User5FramePadding,           StyleValue::Float(0.2)),
	(StyleId::User5FrameWidth,             StyleValue::Float(0.1)),
	(StyleId::User5FrameRound,             StyleValue::Int(0)),
	(StyleId::User5FrameFgColor,           StyleValue::Color([0, 0, 0, 255])),
	(StyleId::User5FrameBgColor,           StyleValue::Color([255, 255, 255, 0])),

	(StyleId::User6Name,                   StyleValue::String("".to_string())),
	(StyleId::User6FontFace,               StyleValue::String("FreeSerif".to_string())),
	(StyleId::User6FontSize,               StyleValue::Float(10.0)),
	(StyleId::User6FontSpatiumDependent,   StyleValue::Bool(true)),
	(StyleId::User6FontStyle,              StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::User6Color,                  StyleValue::Color([0, 0, 0, 255])),
	(StyleId::User6Align,                  StyleValue::UInt(ALIGN_LEFT | ALIGN_TOP)),
	(StyleId::User6Offset,                 StyleValue::Point(Point2F::default())),
	(StyleId::User6OffsetType,             StyleValue::UInt(OffsetType::Spatium as u32)),
	(StyleId::User6FrameType,              StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::User6FramePadding,           StyleValue::Float(0.2)),
	(StyleId::User6FrameWidth,             StyleValue::Float(0.1)),
	(StyleId::User6FrameRound,             StyleValue::Int(0)),
	(StyleId::User6FrameFgColor,           StyleValue::Color([0, 0, 0, 255])),
	(StyleId::User6FrameBgColor,           StyleValue::Color([255, 255, 255, 0])),

	(StyleId::LetRingFontFace,             StyleValue::String("FreeSerif".to_string())),
	(StyleId::LetRingFontSize,             StyleValue::Float(10.0)),
	(StyleId::LetRingFontSpatiumDependent, StyleValue::Bool(true)),
	(StyleId::LetRingFontStyle,            StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::LetRingColor,                StyleValue::Color([0, 0, 0, 255])),
	(StyleId::LetRingTextAlign,            StyleValue::UInt(ALIGN_LEFT | ALIGN_VCENTER)),
	(StyleId::LetRingHookHeight,           StyleValue::Spatium(0.6)),
	(StyleId::LetRingPlacement,            StyleValue::UInt(Placement::Below as u32)),
	(StyleId::LetRingPosAbove,             StyleValue::Point(Point2F::new(0.0, 0.0))),
	(StyleId::LetRingPosBelow,             StyleValue::Point(Point2F::new(0.0, 0.0))),
	(StyleId::LetRingLineWidth,            StyleValue::Spatium(0.15)),
	(StyleId::LetRingLineStyle,            StyleValue::UInt(LineStyle::DashLine as u32)),
	(StyleId::LetRingBeginTextOffset,      StyleValue::Point(Point2F::new(0.0, 0.15))),
	(StyleId::LetRingText,                 StyleValue::String("let ring".to_string())),
	(StyleId::LetRingFrameType,            StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::LetRingFramePadding,         StyleValue::Float(0.2)),
	(StyleId::LetRingFrameWidth,           StyleValue::Float(0.1)),
	(StyleId::LetRingFrameRound,           StyleValue::Int(0)),
	(StyleId::LetRingFrameFgColor,         StyleValue::Color([0, 0, 0, 255])),
	(StyleId::LetRingFrameBgColor,         StyleValue::Color([255, 255, 255, 0])),
	(StyleId::LetRingEndHookType,          StyleValue::UInt(HookStyleType::Hook90T as u32)),

	(StyleId::PalmMuteFontFace,            StyleValue::String("FreeSerif".to_string())),
	(StyleId::PalmMuteFontSize,            StyleValue::Float(10.0)),
	(StyleId::PalmMuteFontSpatiumDependent,StyleValue::Bool(true)),
	(StyleId::PalmMuteFontStyle,           StyleValue::UInt(FontStyle::Normal as u32)),
	(StyleId::PalmMuteColor,               StyleValue::Color([0, 0, 0, 255])),
	(StyleId::PalmMuteTextAlign,           StyleValue::UInt(ALIGN_LEFT | ALIGN_VCENTER)),
	(StyleId::PalmMuteHookHeight,          StyleValue::Spatium(0.6)),
	(StyleId::PalmMutePlacement,           StyleValue::UInt(Placement::Below as u32)),
	(StyleId::PalmMutePosAbove,            StyleValue::Point(Point2F::new(0.0, -4.0))),
	(StyleId::PalmMutePosBelow,            StyleValue::Point(Point2F::new(0.0, 4.0))),
	(StyleId::PalmMuteLineWidth,           StyleValue::Spatium(0.15)),
	(StyleId::PalmMuteLineStyle,           StyleValue::UInt(LineStyle::DashLine as u32)),
	(StyleId::PalmMuteBeginTextOffset,     StyleValue::Point(Point2F::new(0.0, 0.15))),
	(StyleId::PalmMuteText,                StyleValue::String("P.M.".to_string())),
	(StyleId::PalmMuteFrameType,           StyleValue::UInt(FrameType::NoFrame as u32)),
	(StyleId::PalmMuteFramePadding,        StyleValue::Float(0.2)),
	(StyleId::PalmMuteFrameWidth,          StyleValue::Float(0.1)),
	(StyleId::PalmMuteFrameRound,          StyleValue::Int(0)),
	(StyleId::PalmMuteFrameFgColor,        StyleValue::Color([0, 0, 0, 255])),
	(StyleId::PalmMuteFrameBgColor,        StyleValue::Color([255, 255, 255, 0])),
	(StyleId::PalmMuteEndHookType,         StyleValue::UInt(HookStyleType::Hook90T as u32)),

	(StyleId::FermataPosAbove,             StyleValue::Point(Point2F::new(0.0, -1.0))),
	(StyleId::FermataPosBelow,             StyleValue::Point(Point2F::new(0.0, 1.0))),
	(StyleId::FermataMinDistance,          StyleValue::Spatium(0.4)),

	(StyleId::FingeringPlacement,          StyleValue::UInt(Placement::Above as u32)),

	(StyleId::ArticulationMinDistance,     StyleValue::Spatium(0.5)),
	(StyleId::FingeringMinDistance,        StyleValue::Spatium(0.5)),
	(StyleId::HairpinMinDistance,          StyleValue::Spatium(0.7)),
	(StyleId::LetRingMinDistance,          StyleValue::Spatium(0.7)),
	(StyleId::OttavaMinDistance,           StyleValue::Spatium(0.7)),
	(StyleId::PalmMuteMinDistance,         StyleValue::Spatium(0.7)),
	(StyleId::PedalMinDistance,            StyleValue::Spatium(0.7)),
	(StyleId::RepeatMinDistance,           StyleValue::Spatium(0.5)),
	(StyleId::TextLineMinDistance,         StyleValue::Spatium(0.7)),
	(StyleId::TrillMinDistance,            StyleValue::Spatium(1.0)),
	(StyleId::VibratoMinDistance,          StyleValue::Spatium(1.0)),
	(StyleId::VoltaMinDistance,            StyleValue::Spatium(1.0)),
	(StyleId::FiguredBassMinDistance,      StyleValue::Spatium(0.5)),
	(StyleId::TupletMinDistance,           StyleValue::Spatium(0.5)),

	(StyleId::AutoplaceEnabled,            StyleValue::Bool(true)),
]}

pub(super) const STYLE_NAMES: [&'static str; STYLE_COUNT] = {[
	"pageWidth",
	"pageHeight",
	"pagePrintableWidth",
	"pageEvenLeftMargin",
	"pageOddLeftMargin",
	"pageEvenTopMargin",
	"pageEvenBottomMargin",
	"pageOddTopMargin",
	"pageOddBottomMargin",
	"pageTwosided",
	"staffUpperBorder",
	"staffLowerBorder",
	"staffDistance",
	"akkoladeDistance",
	"minSystemDistance",
	"maxSystemDistance",
	"lyricsPlacement",
	"lyricsPosAbove",
	"lyricsPosBelow",
	"lyricsMinTopDistance",
	"lyricsMinBottomDistance",
	"lyricsMinDistance",
	"lyricsLineHeight",
	"lyricsDashMinLength",
	"lyricsDashMaxLegth",
	"lyricsDashMaxDistance",
	"lyricsDashForce",
	"lyricsAlignVerseNumber",
	"lyricsLineThickness",
	"lyricsMelismaAlign",
	"lyricsMelismaPad",
	"lyricsDashPad",
	"lyricsDashLineThickness",
	"lyricsDashYposRatio",
	"lyricsOddFontFace",
	"lyricsOddFontSize",
	"lyricsOddFontSpatiumDependent",
	"lyricsOddFontStyle",
	"lyricsOddColor",
	"lyricsOddAlign",
	"lyricsOddFrameType",
	"lyricsOddFramePadding",
	"lyricsOddFrameWidth",
	"lyricsOddFrameRound",
	"lyricsOddFrameFgColor",
	"lyricsOddFrameBgColor",
	"lyricsEvenFontFace",
	"lyricsEvenFontSize",
	"lyricsEvenFontSpatiumDependent",
	"lyricsEvenFontStyle",
	"lyricsEvenColor",
	"lyricsEvenAlign",
	"lyricsEvenFrameType",
	"lyricsEvenFramePadding",
	"lyricsEvenFrameWidth",
	"lyricsEvenFrameRound",
	"lyricsEvenFrameFgColor",
	"lyricsEvenFrameBgColor",
	"figuredBassFontFamily",
	"figuredBassFontSize",
	"figuredBassYOffset",
	"figuredBassLineHeight",
	"figuredBassAlignment",
	"figuredBassStyle",
	"systemFrameDistance",
	"frameSystemDistance",
	"minMeasureWidth",
	"barWidth",
	"doubleBarWidth",
	"endBarWidth",
	"doubleBarDistance",
	"endBarDistance",
	"repeatBarlineDotSeparation",
	"repeatBarTips",
	"startBarlineSingle",
	"startBarlineMultiple",
	"bracketWidth",
	"bracketDistance",
	"akkoladeWidth",
	"akkoladeBarDistance",
	"dividerLeft",
	"dividerLeftSym",
	"dividerLeftX",
	"dividerLeftY",
	"dividerRight",
	"dividerRightSym",
	"dividerRightX",
	"dividerRightY",
	"clefLeftMargin",
	"keysigLeftMargin",
	"ambitusMargin",
	"timesigLeftMargin",
	"timesigScale",
	"midClefKeyRightMargin",
	"clefKeyRightMargin",
	"clefKeyDistance",
	"clefTimesigDistance",
	"keyTimesigDistance",
	"keyTimesigDistance",
	"systemHeaderDistance",
	"systemHeaderTimeSigDistance",
	"clefBarlineDistance",
	"timesigBarlineDistance",
	"stemWidth",
	"shortenStem",
	"shortStemProgression",
	"shortestStem",
	"beginRepeatLeftMargin",
	"minNoteDistance",
	"barNoteDistance",
	"barAccidentalDistance",
	"multiMeasureRestMargin",
	"noteBarDistance",
	"measureSpacing",
	"staffLineWidth",
	"ledgerLineWidth",
	"ledgerLineLength",
	"accidentalDistance",
	"accidentalNoteDistance",
	"beamWidth",
	"beamDistance",
	"beamMinLen",
	"beamNoSlope",
	"dotMag",
	"dotNoteDistance",
	"dotRestDistance",
	"dotDotDistance",
	"propertyDistanceHead",
	"propertyDistanceStem",
	"propertyDistance",
	"articulationMag",
	"articulationPosAbove",
	"articulationAnchorDefault",
	"articulationAnchorLuteFingering",
	"articulationAnchorOther",
	"lastSystemFillLimit",
	"hairpinPlacement",
	"hairpinPosAbove",
	"hairpinPosBelow",
	"hairpinLinePosAbove",
	"hairpinLinePosBelow",
	"hairpinHeight",
	"hairpinContHeight",
	"hairpinWidth",
	"hairpinFontFace",
	"hairpinFontSize",
	"hairpinFontSpatiumDependent",
	"hairpinFontStyle",
	"hairpinColor",
	"hairpinTextAlign",
	"hairpinFrameType",
	"hairpinFramePadding",
	"hairpinFrameWidth",
	"hairpinFrameRound",
	"hairpinFrameFgColor",
	"hairpinFrameBgColor",
	"hairpinText",
	"hairpinCrescText",
	"hairpinDecrescText",
	"hairpinCrescContText",
	"hairpinDecrescContText",
	"hairpinLineStyle",
	"hairpinLineLineStyle",
	"pedalPlacement",
	"pedalPosAbove",
	"pedalPosBelow",
	"pedalLineWidth",
	"pedalListStyle",
	"pedalBeginTextOffset",
	"pedalHookHeight",
	"pedalFontFace",
	"pedalFontSize",
	"pedalFontSpatiumDependent",
	"pedalFontStyle",
	"pedalColor",
	"pedalTextAlign",
	"pedalFrameType",
	"pedalFramePadding",
	"pedalFrameWidth",
	"pedalFrameRound",
	"pedalFrameFgColor",
	"pedalFrameBgColor",
	"trillPlacement",
	"trillPosAbove",
	"trillPosBelow",
	"vibratoPlacement",
	"vibratoPosAbove",
	"vibratoPosBelow",
	"harmonyFretDist",
	"minHarmonyDistance",
	"maxHarmonyBarDistance",
	"harmonyPlacement",
	"romanNumeralPlacement",
	"nashvilleNumberPlacement",
	"chordSymbolPosAbove",
	"chordSymbolPosBelow",
	"chordSymbolBPosAbove",
	"chordSymbolBPosBelow",
	"romanNumeralPosAbove",
	"romanNumeralPosBelow",
	"nashvilleNumberPosAbove",
	"nashvilleNumberPosBelow",
	"chordSymbolAFontFace",
	"chordSymbolAFontSize",
	"chordSymbolAFontSpatiumDependent",
	"chordSymbolAFontStyle",
	"chordSymbolAColor",
	"chordSymbolAAlign",
	"chordSymbolAFrameType",
	"chordSymbolAFramePadding",
	"chordSymbolAFrameWidth",
	"chordSymbolAFrameRound",
	"chordSymbolAFrameFgColor",
	"chordSymbolAFrameBgColor",
	"chordSymbolBFontFace",
	"chordSymbolBFontSize",
	"chordSymbolBFontSpatiumDependent",
	"chordSymbolBFontStyle",
	"chordSymbolBColor",
	"chordSymbolBAlign",
	"chordSymbolBFrameType",
	"chordSymbolBFramePadding",
	"chordSymbolBFrameWidth",
	"chordSymbolBFrameRound",
	"chordSymbolBFrameFgColor",
	"chordSymbolBFrameBgColor",
	"romanNumeralFontFace",
	"romanNumeralFontSize",
	"romanNumeralFontSpatiumDependent",
	"romanNumeralFontStyle",
	"romanNumeralColor",
	"romanNumeralAlign",
	"romanNumeralFrameType",
	"romanNumeralFramePadding",
	"romanNumeralFrameWidth",
	"romanNumeralFrameRound",
	"romanNumeralFrameFgColor",
	"romanNumeralFrameBgColor",
	"nashvilleNumberFontFace",
	"nashvilleNumberFontSize",
	"nashvilleNumberFontSpatiumDependent",
	"nashvilleNumberFontStyle",
	"nashvilleNumberColor",
	"nashvilleNumberAlign",
	"nashvilleNumberFrameType",
	"nashvilleNumberFramePadding",
	"nashvilleNumberFrameWidth",
	"nashvilleNumberFrameRound",
	"nashvilleNumberFrameFgColor",
	"nashvilleNumberFrameBgColor",
	"capoPosition",
	"fretNumMag",
	"fretNumPos",
	"fretY",
	"fretMinDistance",
	"fretMag",
	"fretPlacement",
	"fretStrings",
	"fretFrets",
	"fretNut",
	"fretDotSize",
	"fretStringSpacing",
	"fretFretSpacing",
	"showPageNumber",
	"showPageNumberOne",
	"pageNumberOddEven",
	"showMeasureNumber",
	"showMeasureNumberOne",
	"measureNumberInterval",
	"measureNumberSystem",
	"measureNumberAllStaffs",
	"smallNoteMag",
	"graceNoteMag",
	"smallStaffMag",
	"smallClefMag",
	"genClef",
	"genKeysig",
	"genCourtesyTimesig",
	"genCourtesyKeysig",
	"genCourtesyClef",
	"swingRatio",
	"swingUnit",
	"useStandardNoteNames",
	"useGermanNoteNames",
	"useFullGermanNoteNames",
	"useSolfeggioNoteNames",
	"useFrenchNoteNames",
	"automaticCapitalization",
	"lowerCaseMinorChords",
	"lowerCaseBassNotes",
	"allCapsNoteNames",
	"chordStyle",
	"chordsXmlFile",
	"chordDescriptionFile",
	"chordExtensionMag",
	"chordExtensionAdjust",
	"chordModifierMag",
	"chordModifierAdjust",
	"concertPitch",
	"createMultiMeasureRests",
	"minEmptyMeasures",
	"minMMRestWidth",
	"hideEmptyStaves",
	"dontHidStavesInFirstSystm",
	"hideInstrumentNameIfOneInstrument",
	"gateTime",
	"tenutoGateTime",
	"staccatoGateTime",
	"slurGateTime",
	"ArpeggioNoteDistance",
	"ArpeggioLineWidth",
	"ArpeggioHookLen",
	"ArpeggioHiddenInStdIfTab",
	"slurEndWidth",
	"slurMidWidth",
	"slurDottedWidth",
	"minTieLength",
	"slurMinDistance",
	"sectionPause",
	"musicalSymbolFont",
	"musicalTextFont",
	"showHeader",
	"headerFirstPage",
	"headerOddEven",
	"evenHeaderL",
	"evenHeaderC",
	"evenHeaderR",
	"oddHeaderL",
	"oddHeaderC",
	"oddHeaderR",
	"showFooter",
	"footerFirstPage",
	"footerOddEven",
	"evenFooterL",
	"evenFooterC",
	"evenFooterR",
	"oddFooterL",
	"oddFooterC",
	"oddFooterR",
	"voltaPosAbove",
	"voltaHook",
	"voltaLineWidth",
	"voltaLineStyle",
	"voltaFontFace",
	"voltaFontSize",
	"voltaFontSpatiumDependent",
	"voltaFontStyle",
	"voltaColor",
	"voltaAlign",
	"voltaOffset",
	"voltaFrameType",
	"voltaFramePadding",
	"voltaFrameWidth",
	"voltaFrameRound",
	"voltaFrameFgColor",
	"voltaFrameBgColor",
	"ottava8VAPlacement",
	"ottava8VBPlacement",
	"ottava15MAPlacement",
	"ottava15MBPlacement",
	"ottava22MAPlacement",
	"ottava22MBPlacement",
	"ottava8VAText",
	"ottava8VAContinueText",
	"ottava8VBText",
	"ottava8VBContinueText",
	"ottava15MAText",
	"ottava15MAContinueText",
	"ottava15MBText",
	"ottava15MBContinueText",
	"ottava22MAText",
	"ottava22MAContinueText",
	"ottava22MBText",
	"ottava22MBContinueText",
	"ottava8VAnoText",
	"ottava8VAnoContinueText",
	"ottava8VBnoText",
	"ottava8VBnoContinueText",
	"ottava15MAnoText",
	"ottava15MAnoContinueText",
	"ottava15MBnoText",
	"ottava15MBnoContinueText",
	"ottava22MAnoText",
	"ottava22MAnoContinueText",
	"ottava22MBnoText",
	"ottava22MBnoContinueText",
	"ottavaPosAbove",
	"ottavaPosBelow",
	"ottavaHookAbove",
	"ottavaHookBelow",
	"ottavaLineWidth",
	"ottavaLineStyle",
	"ottavaNumbersOnly",
	"ottavaFontFace",
	"ottavaFontSize",
	"ottavaFontSpatiumDependent",
	"ottavaFontStyle",
	"ottavaColor",
	"ottavaTextAlign",
	"ottavaFrameType",
	"ottavaFramePadding",
	"ottavaFrameWidth",
	"ottavaFrameRound",
	"ottavaFrameFgColor",
	"ottavaFrameBgColor",
	"tabClef",
	"tremoloWidth",
	"tremoloBoxHeight",
	"tremoloLineWidth",
	"tremoloDistance",
	"tremoloPlacement",
	"linearStretch",
	"crossMeasureValues",
	"keySigNaturals",
	"tupletMaxSlope",
	"tupletOufOfStaff",
	"tupletVHeadDistance",
	"tupletVStemDistance",
	"tupletStemLeftDistance",
	"tupletStemRightDistance",
	"tupletNoteLeftDistance",
	"tupletNoteRightDistance",
	"tupletBracketWidth",
	"tupletDirection",
	"tupletNumberType",
	"tupletBracketType",
	"tupletFontFace",
	"tupletFontSize",
	"tupletFontSpatiumDependent",
	"tupletFontStyle",
	"tupletColor",
	"tupletAlign",
	"tupletBracketHookHeight",
	"tupletOffset",
	"tupletFrameType",
	"tupletFramePadding",
	"tupletFrameWidth",
	"tupletFrameRound",
	"tupletFrameFgColor",
	"tupletFrameBgColor",
	"barreLineWidth",
	"scaleBarlines",
	"barGraceDistance",
	"minVerticalDistance",
	"ornamentStyle",
	"Spatium",
	"autoplaceHairpinDynamicsDistance",
	"dynamicsPlacement",
	"dynamicsPosAbove",
	"dynamicsPosBelow",
	"dynamicsMinDistance",
	"autoplaceVerticalAlignRange",
	"textLinePlacement",
	"textLinePosAbove",
	"textLinePosBelow",
	"textLineFrameType",
	"textLineFramePadding",
	"textLineFrameWidth",
	"textLineFrameRound",
	"textLineFrameFgColor",
	"textLineFrameBgColor",
	"tremoloBarLineWidth",
	"jumpPosAbove",
	"markerPosAbove",
	"defaultFontFace",
	"defaultFontSize",
	"defaultFontSpatiumDependent",
	"defaultFontStyle",
	"defaultColor",
	"defaultAlign",
	"defaultFrameType",
	"defaultFramePadding",
	"defaultFrameWidth",
	"defaultFrameRound",
	"defaultFrameFgColor",
	"defaultFrameBgColor",
	"defaultOffset",
	"defaultOffsetType",
	"defaultSystemFlag",
	"defaultText",
	"titleFontFace",
	"titleFontSize",
	"titleFontSpatiumDependent",
	"titleFontStyle",
	"titleColor",
	"titleAlign",
	"titleOffset",
	"titleOffsetType",
	"titleFrameType",
	"titleFramePadding",
	"titleFrameWidth",
	"titleFrameRound",
	"titleFrameFgColor",
	"titleFrameBgColor",
	"subTitleFontFace",
	"subTitleFontSize",
	"subTitleFontSpatiumDependent",
	"subTitleFontStyle",
	"subTitleColor",
	"subTitleAlign",
	"subTitleOffset",
	"subTitleOffsetType",
	"subTitleFrameType",
	"subTitleFramePadding",
	"subTitleFrameWidth",
	"subTitleFrameRound",
	"subTitleFrameFgColor",
	"subTitleFrameBgColor",
	"composerFontFace",
	"composerFontSize",
	"composerFontSpatiumDependent",
	"composerFontStyle",
	"composerColor",
	"composerAlign",
	"composerOffset",
	"composerOffsetType",
	"composerFrameType",
	"composerFramePadding",
	"composerFrameWidth",
	"composerFrameRound",
	"composerFrameFgColor",
	"composerFrameBgColor",
	"lyricistFontFace",
	"lyricistFontSize",
	"lyricistFontSpatiumDependent",
	"lyricistFontStyle",
	"lyricistColor",
	"lyricistAlign",
	"lyricistOffset",
	"lyricistOffsetType",
	"lyricistFrameType",
	"lyricistFramePadding",
	"lyricistFrameWidth",
	"lyricistFrameRound",
	"lyricistFrameFgColor",
	"lyricistFrameBgColor",
	"fingeringFontFace",
	"fingeringFontSize",
	"fingeringFontSpatiumDependent",
	"fingeringFontStyle",
	"fingeringColor",
	"fingeringAlign",
	"fingeringFrameType",
	"fingeringFramePadding",
	"fingeringFrameWidth",
	"fingeringFrameRound",
	"fingeringFrameFgColor",
	"fingeringFrameBgColor",
	"fingeringOffset",
	"lhGuitarFingeringFontFace",
	"lhGuitarFingeringFontSize",
	"lhGuitarFingeringFontSpatiumDependent",
	"lhGuitarFingeringFontStyle",
	"lhGuitarFingeringColor",
	"lhGuitarFingeringAlign",
	"lhGuitarFingeringFrameType",
	"lhGuitarFingeringFramePadding",
	"lhGuitarFingeringFrameWidth",
	"lhGuitarFingeringFrameRound",
	"lhGuitarFingeringFrameFgColor",
	"lhGuitarFingeringFrameBgColor",
	"lhGuitarFingeringOffset",
	"rhGuitarFingeringFontFace",
	"rhGuitarFingeringFontSize",
	"rhGuitarFingeringFontSpatiumDependent",
	"rhGuitarFingeringFontStyle",
	"rhGuitarFingeringColor",
	"rhGuitarFingeringAlign",
	"rhGuitarFingeringFrameType",
	"rhGuitarFingeringFramePadding",
	"rhGuitarFingeringFrameWidth",
	"rhGuitarFingeringFrameRound",
	"rhGuitarFingeringFrameFgColor",
	"rhGuitarFingeringFrameBgColor",
	"rhGuitarFingeringOffset",
	"stringNumberFontFace",
	"stringNumberFontSize",
	"stringNumberFontSpatiumDependent",
	"stringNumberFontStyle",
	"stringNumberColor",
	"stringNumberAlign",
	"stringNumberFrameType",
	"stringNumberFramePadding",
	"stringNumberFrameWidth",
	"stringNumberFrameRound",
	"stringNumberFrameFgColor",
	"stringNumberFrameBgColor",
	"stringNumberOffset",
	"longInstrumentFontFace",
	"longInstrumentFontSize",
	"longInstrumentFontSpatiumDependent",
	"longInstrumentFontStyle",
	"longInstrumentColor",
	"longInstrumentAlign",
	"longInstrumentOffset",
	"longInstrumentFrameType",
	"longInstrumentFramePadding",
	"longInstrumentFrameWidth",
	"longInstrumentFrameRound",
	"longInstrumentFrameFgColor",
	"longInstrumentFrameBgColor",
	"shortInstrumentFontFace",
	"shortInstrumentFontSize",
	"shortInstrumentFontSpatiumDependent",
	"shortInstrumentFontStyle",
	"shortInstrumentColor",
	"shortInstrumentAlign",
	"shortInstrumentOffset",
	"shortInstrumentFrameType",
	"shortInstrumentFramePadding",
	"shortInstrumentFrameWidth",
	"shortInstrumentFrameRound",
	"shortInstrumentFrameFgColor",
	"shortInstrumentFrameBgColor",
	"partInstrumentFontFace",
	"partInstrumentFontSize",
	"partInstrumentFontSpatiumDependent",
	"partInstrumentFontStyle",
	"partInstrumentColor",
	"partInstrumentAlign",
	"partInstrumentOffset",
	"partInstrumentFrameType",
	"partInstrumentFramePadding",
	"partInstrumentFrameWidth",
	"partInstrumentFrameRound",
	"partInstrumentFrameFgColor",
	"partInstrumentFrameBgColor",
	"dynamicsFontFace",
	"dynamicsFontSize",
	"dynamicsFontSpatiumDependent",
	"dynamicsFontStyle",
	"dynamicsColor",
	"dynamicsAlign",
	"dynamicsFrameType",
	"dynamicsFramePadding",
	"dynamicsFrameWidth",
	"dynamicsFrameRound",
	"dynamicsFrameFgColor",
	"dynamicsFrameBgColor",
	"expressionFontFace",
	"expressionFontSize",
	"expressionFontSpatiumDependent",
	"expressionFontStyle",
	"expressionColor",
	"expressionAlign",
	"expressionPlacement",
	"expressionOffset",
	"expressionFrameType",
	"expressionFramePadding",
	"expressionFrameWidth",
	"expressionFrameRound",
	"expressionFrameFgColor",
	"expressionFrameBgColor",
	"tempoFontFace",
	"tempoFontSize",
	"tempoFontSpatiumDependent",
	"tempoFontStyle",
	"tempoColor",
	"tempoAlign",
	"tempoSystemFlag",
	"tempoPlacement",
	"tempoPosAbove",
	"tempoPosBelow",
	"tempoMinDistance",
	"tempoFrameType",
	"tempoFramePadding",
	"tempoFrameWidth",
	"tempoFrameRound",
	"tempoFrameFgColor",
	"tempoFrameBgColor",
	"metronomeFontFace",
	"metronomeFontSize",
	"metronomeFontSpatiumDependent",
	"metronomeFontStyle",
	"metronomeColor",
	"metronomePlacement",
	"metronomeAlign",
	"metronomeOffset",
	"metronomeFrameType",
	"metronomeFramePadding",
	"metronomeFrameWidth",
	"metronomeFrameRound",
	"metronomeFrameFgColor",
	"metronomeFrameBgColor",
	"measureNumberFontFace",
	"measureNumberFontSize",
	"measureNumberFontSpatiumDependent",
	"measureNumberFontStyle",
	"measureNumberColor",
	"measureNumberOffset",
	"measureNumberOffsetType",
	"measureNumberAlign",
	"measureNumberFrameType",
	"measureNumberFramePadding",
	"measureNumberFrameWidth",
	"measureNumberFrameRound",
	"measureNumberFrameFgColor",
	"measureNumberFrameBgColor",
	"translatorFontFace",
	"translatorFontSize",
	"translatorFontSpatiumDependent",
	"translatorFontStyle",
	"translatorColor",
	"translatorAlign",
	"translatorOffset",
	"translatorFrameType",
	"translatorFramePadding",
	"translatorFrameWidth",
	"translatorFrameRound",
	"translatorFrameFgColor",
	"translatorFrameBgColor",
	"systemFontFace",
	"systemFontSize",
	"systemFontSpatiumDependent",
	"systemFontStyle",
	"systemTextColor",
	"systemAlign",
	"systemOffsetType",
	"systemPlacement",
	"systemPosAbove",
	"systemPosBelow",
	"systemMinDistance",
	"systemFrameType",
	"systemFramePadding",
	"systemFrameWidth",
	"systemFrameRound",
	"systemFrameFgColor",
	"systemFrameBgColor",
	"staffFontFace",
	"staffFontSize",
	"staffFontSpatiumDependent",
	"staffFontStyle",
	"staffTextColor",
	"staffAlign",
	"systemOffsetType",
	"staffPlacement",
	"staffPosAbove",
	"staffPosBelow",
	"staffMinDistance",
	"staffFrameType",
	"staffFramePadding",
	"staffFrameWidth",
	"staffFrameRound",
	"staffFrameFgColor",
	"staffFrameBgColor",
	"rehearsalMarkFontFace",
	"rehearsalMarkFontSize",
	"rehearsalMarkFontSpatiumDependent",
	"rehearsalMarkFontStyle",
	"rehearsalMarkColor",
	"rehearsalMarkAlign",
	"rehearsalMarkFrameType",
	"rehearsalMarkFramePadding",
	"rehearsalMarkFrameWidth",
	"rehearsalMarkFrameRound",
	"rehearsalMarkFrameFgColor",
	"rehearsalMarkFrameBgColor",
	"rehearsalMarkPlacement",
	"rehearsalMarkPosAbove",
	"rehearsalMarkPosBelow",
	"rehearsalMarkMinDistance",
	"repeatLeftFontFace",
	"repeatLeftFontSize",
	"repeatLeftFontSpatiumDependent",
	"repeatLeftFontStyle",
	"repeatLeftColor",
	"repeatLeftAlign",
	"repeatLeftPlacement",
	"repeatLeftFrameType",
	"repeatLeftFramePadding",
	"repeatLeftFrameWidth",
	"repeatLeftFrameRound",
	"repeatLeftFrameFgColor",
	"repeatLeftFrameBgColor",
	"repeatRightFontFace",
	"repeatRightFontSize",
	"repeatRightFontSpatiumDependent",
	"repeatRightFontStyle",
	"repeatRightColor",
	"repeatRightAlign",
	"repeatRightPlacement",
	"repeatRightFrameType",
	"repeatRightFramePadding",
	"repeatRightFrameWidth",
	"repeatRightFrameRound",
	"repeatRightFrameFgColor",
	"repeatRightFrameBgColor",
	"frameFontFace",
	"frameFontSize",
	"frameFontSpatiumDependent",
	"frameFontStyle",
	"frameColor",
	"frameAlign",
	"frameOffset",
	"frameFrameType",
	"frameFramePadding",
	"frameFrameWidth",
	"frameFrameRound",
	"frameFrameFgColor",
	"frameFrameBgColor",
	"textLineFontFace",
	"textLineFontSize",
	"textLineFontSpatiumDependent",
	"textLineFontStyle",
	"textLineColor",
	"textLineTextAlign",
	"glissandoFontFace",
	"glissandoFontSize",
	"glissandoFontSpatiumDependent",
	"glissandoFontStyle",
	"glissandoColor",
	"glissandoAlign",
	"glissandoOffset",
	"glissandoFrameType",
	"glissandoFramePadding",
	"glissandoFrameWidth",
	"glissandoFrameRound",
	"glissandoFrameFgColor",
	"glissandoFrameBgColor",
	"glissandoLineWidth",
	"glissandoText",
	"bendFontFace",
	"bendFontSize",
	"bendFontSpatiumDependent",
	"bendFontStyle",
	"bendColor",
	"bendAlign",
	"bendOffset",
	"bendFrameType",
	"bendFramePadding",
	"bendFrameWidth",
	"bendFrameRound",
	"bendFrameFgColor",
	"bendFrameBgColor",
	"bendLineWidth",
	"bendArrowWidth",
	"headerFontFace",
	"headerFontSize",
	"headerFontSpatiumDependent",
	"headerFontStyle",
	"headerColor",
	"headerAlign",
	"headerOffset",
	"headerFrameType",
	"headerFramePadding",
	"headerFrameWidth",
	"headerFrameRound",
	"headerFrameFgColor",
	"headerFrameBgColor",
	"footerFontFace",
	"footerFontSize",
	"footerFontSpatiumDependent",
	"footerFontStyle",
	"footerColor",
	"footerAlign",
	"footerOffset",
	"footerFrameType",
	"footerFramePadding",
	"footerFrameWidth",
	"footerFrameRound",
	"footerFrameFgColor",
	"footerFrameBgColor",
	"instrumentChangeFontFace",
	"instrumentChangeFontSize",
	"instrumentChangeFontSpatiumDependent",
	"instrumentChangeFontStyle",
	"instrumentChangeColor",
	"instrumentChangeAlign",
	"instrumentChangeOffset",
	"instrumentChangePlacement",
	"instrumentChangePosAbove",
	"instrumentChangePosBelow",
	"instrumentChangeMinDistance",
	"instrumentChangeFrameType",
	"instrumentChangeFramePadding",
	"instrumentChangeFrameWidth",
	"instrumentChangeFrameRound",
	"instrumentChangeFrameFgColor",
	"instrumentChangeFrameBgColor",
	"stickingFontFace",
	"stickingFontSize",
	"stickingFontSpatiumDependent",
	"stickingFontStyle",
	"stickingColor",
	"stickingAlign",
	"stickingOffset",
	"stickingPlacement",
	"stickingPosAbove",
	"stickingPosBelow",
	"stickingMinDistance",
	"stickingFrameType",
	"stickingFramePadding",
	"stickingFrameWidth",
	"stickingFrameRound",
	"stickingFrameFgColor",
	"stickingFrameBgColor",
	"figuredBassFontFace",
	"figuredBassFontSize",
	"figuredBassFontSpatiumDependent",
	"figuredBassFontStyle",
	"figuredBassColor",
	"user1Name",
	"user1FontFace",
	"user1FontSize",
	"user1FontSpatiumDependent",
	"user1FontStyle",
	"user1Color",
	"user1Align",
	"user1Offset",
	"user1OffsetType",
	"user1FrameType",
	"user1FramePadding",
	"user1FrameWidth",
	"user1FrameRound",
	"user1FrameFgColor",
	"user1FrameBgColor",
	"user2Name",
	"user2FontFace",
	"user2FontSize",
	"user2FontSpatiumDependent",
	"user2FontStyle",
	"user2Color",
	"user2Align",
	"user2Offset",
	"user2OffsetType",
	"user2FrameType",
	"user2FramePadding",
	"user2FrameWidth",
	"user2FrameRound",
	"user2FrameFgColor",
	"user2FrameBgColor",
	"user3Name",
	"user3FontFace",
	"user3FontSize",
	"user3FontSpatiumDependent",
	"user3FontStyle",
	"user3Color",
	"user3Align",
	"user3Offset",
	"user3OffsetType",
	"user3FrameType",
	"user3FramePadding",
	"user3FrameWidth",
	"user3FrameRound",
	"user3FrameFgColor",
	"user3FrameBgColor",
	"user4Name",
	"user4FontFace",
	"user4FontSize",
	"user4FontSpatiumDependent",
	"user4FontStyle",
	"user4Color",
	"user4Align",
	"user4Offset",
	"user4OffsetType",
	"user4FrameType",
	"user4FramePadding",
	"user4FrameWidth",
	"user4FrameRound",
	"user4FrameFgColor",
	"user4FrameBgColor",
	"user5Name",
	"user5FontFace",
	"user5FontSize",
	"user5FontSpatiumDependent",
	"user5FontStyle",
	"user5Color",
	"user5Align",
	"user5Offset",
	"user5OffsetType",
	"user5FrameType",
	"user5FramePadding",
	"user5FrameWidth",
	"user5FrameRound",
	"user5FrameFgColor",
	"user5FrameBgColor",
	"user6Name",
	"user6FontFace",
	"user6FontSize",
	"user6FontSpatiumDependent",
	"user6FontStyle",
	"user6Color",
	"user6Align",
	"user6Offset",
	"user6OffsetType",
	"user6FrameType",
	"user6FramePadding",
	"user6FrameWidth",
	"user6FrameRound",
	"user6FrameFgColor",
	"user6FrameBgColor",
	"letRingFontFace",
	"letRingFontSize",
	"letRingFontSpatiumDependent",
	"letRingFontStyle",
	"letRingColor",
	"letRingTextAlign",
	"letRingHookHeight",
	"letRingPlacement",
	"letRingPosAbove",
	"letRingPosBelow",
	"letRingLineWidth",
	"letRingLineStyle",
	"letRingBeginTextOffset",
	"letRingText",
	"letRingFrameType",
	"letRingFramePadding",
	"letRingFrameWidth",
	"letRingFrameRound",
	"letRingFrameFgColor",
	"letRingFrameBgColor",
	"letRingEndHookType",
	"palmMuteFontFace",
	"palmMuteFontSize",
	"palmMuteFontSpatiumDependent",
	"palmMuteFontStyle",
	"palmMuteColor",
	"palmMuteTextAlign",
	"palmMuteHookHeight",
	"palmMutePlacement",
	"palmMutePosAbove",
	"palmMutePosBelow",
	"palmMuteLineWidth",
	"palmMuteLineStyle",
	"palmMuteBeginTextOffset",
	"palmMuteText",
	"palmMuteFrameType",
	"palmMuteFramePadding",
	"palmMuteFrameWidth",
	"palmMuteFrameRound",
	"palmMuteFrameFgColor",
	"palmMuteFrameBgColor",
	"palmMuteEndHookType",
	"fermataPosAbove",
	"fermataPosBelow",
	"fermataMinDistance",
	"fingeringPlacement",
	"articulationMinDistance",
	"fingeringMinDistance",
	"hairpinMinDistance",
	"letRingMinDistance",
	"ottavaMinDistance",
	"palmMuteMinDistance",
	"pedalMinDistance",
	"repeatMinDistance",
	"textLineMinDistance",
	"trillMinDistance",
	"vibratoMinDistance",
	"voltaMinDistance",
	"figuredBassMinDistance",
	"tupletMinDistance",
	"autoplaceEnabled",
]};